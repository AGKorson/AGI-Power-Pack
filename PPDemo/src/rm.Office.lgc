[ ********************************************************************
[
[ rm.Office
[
[ 
[
[ ********************************************************************
[ TODO: sound effects for tripping on rug, opening/closing picture, closing safe
[ TODO: more said statements for office

#define oSafe          o1
#define oPicture       o2
#define oDeskDrawer    o3
#define oFileDrawer    o4
#define oFolder        o5
#define oRug           o6

#define tmpPalette     s12 [ s13, s14
#define tmpStr         s15

#define tripCounter   v220
#define tmpLoop       v221

#define fMoveRug      f220
#define fOnTripLine   f221
#define fDeskDrawer   f222
#define fFileDrawer   f223
#define fPicture      f224
#define fSafe         f225
#define fBackup       f226
#define fTripping     f227
#define fWarnTrip     f228
#define fTmp          f229

[ rug status
#define RUG_DOWN     0
#define RUG_UP       1
#define RUG_FLAT     2
#define RUG_LIFTING  3
#define RUG_LOWERING 4

if (newRoom) {
  [ this is the first cycle through this room
  [ load, draw and discard the picture resource for the current room
  load.pic(currentRoom);
  draw.pic(currentRoom);
  discard.pic(currentRoom);
  
  [ the horizon defines the upper limit of ego's movement
  set.horizon(1);
  
  [ use a custom palette so the area behind picture can be shown 
  [ to be a bit darker than rest of wall
  work1 = 66;
  block(STR.LEFT, &palette, &tmpPalette, &work1); [ str.left(sINPUT, sRESULT, vLEN)
  tmpStr = "001E1E";
  block(STR.CONCAT, &tmpPalette, &tmpStr, 0); [ sINPUT, sADD)
  work1 = 24;
  block(STR.RIGHT, &palette, &tmpStr, &work1); [ strRight(sINPUT, sRESULT, vLEN)
  block(STR.CONCAT, &tmpPalette, &tmpStr, 0); [ sINPUT, sADD)
  block(SET.MSG, 0, &m9, &tmpPalette); [ set.msg(BYVAR, MSGOLD, STRNEW)
  block(SET.PALETTE, 0, &m9, 1); [ set.palette(BYVAR, PALETTE, LOADONLY)
  
  [ add toolbar buttons
  load.view(vw.ButtonsDown);
  call(lgc.InitToolbar);
  
  [ load view with this room's art
  load.view(vw.OfficeArt);
  
  [ printer page
  if (has("memo")) {
    [ memo is not on printer
    add.to.pic(vw.OfficeArt, 5, 0, 80, 107, 4, 15);
  }
  
  [ folder under rug
  if (!has("folder")) {
    animate.obj(oFolder);
    set.view(oFolder, vw.OfficeArt);
    set.loop(oFolder, 5);
    set.cel(oFolder, 1);
    stop.cycling(oFolder);
    ignore.objs(oFolder);
    position(oFolder, 92, 149);
    set.priority(oFolder, 5);
    if (rugStatus == 1) {
      draw(oFolder);
    }
  }
  [ rug
  animate.obj(oRug);
  set.view(oRug, vw.OfficeArt);
  if (rugStatus == RUG_DOWN) {
    set.loop(oRug, 0);
    set.cel(oRug, 0);
  } else {
    if (rugStatus == RUG_UP) {
      set.loop(oRug, 0);
      set.cel(oRug, 5);
    } else {
      [ show rug flat
      set.loop(oRug, 5);
      set.cel(oRug, 2);
    }
  }
  stop.cycling(oRug);
  ignore.objs(oRug);
  position(oRug, 87, 149);
  set.priority(oRug, 5);
  draw(oRug);
  
  [ safe
  animate.obj(oSafe);
  set.view(oSafe, vw.OfficeArt);
  position(oSafe, 45, 119);
  stop.cycling(oSafe);
  ignore.objs(oSafe);
  if (safeStatus == OPEN) {
    if (has("BaDASS manual")) {
      set.loop(oSafe, 1);
      set.cel(oSafe, 7);
    } else {
      set.loop(oSafe, 5);
      set.cel(oSafe, 7);
    }
  } else {
    set.loop(oSafe, 1);
    set.cel(oSafe, 0);
  }
  
  [ picture
  animate.obj(oPicture);
  set.view(oPicture, vw.OfficeArt);
  set.loop(oPicture, 4);
  if (pictureStatus == OPEN) {
    set.cel(oPicture, 7);
    draw(oSafe);
  } else {
    set.cel(oPicture, 0);
  }
  stop.cycling(oPicture);
  position(oPicture, 46, 119);
  draw(oPicture);
  
  [ desk drawer
  animate.obj(oDeskDrawer);
  set.view(oDeskDrawer, vw.OfficeArt);
  ignore.objs(oDeskDrawer);
  ignore.blocks(oDeskDrawer);
  stop.cycling(oDeskDrawer);
  if (officeDskDrStatus != CLOSED) {
    if (officeDskDrStatus == OPEN1) {
      position(oDeskDrawer, 84, 126);
      if (has("Walkman")) {
        set.loop(oDeskDrawer, 2);
        set.cel(oDeskDrawer, 2);
      } else {
        set.loop(oDeskDrawer, 5);
        set.cel(oDeskDrawer, 4);
      }
    } else {
      position(oDeskDrawer, 84, 130);
      if (has("post-it note")) {
        set.loop(oDeskDrawer, 2);
        set.cel(oDeskDrawer, 2);
      } else {
        set.loop(oDeskDrawer, 5);
        set.cel(oDeskDrawer, 3);
      }
    }
    draw(oDeskDrawer);
  }
  
  [ file drawer
  animate.obj(oFileDrawer);
  set.view(oFileDrawer, vw.OfficeArt);
  set.priority(oFileDrawer, 10);
  ignore.objs(oFileDrawer);
  stop.cycling(oFileDrawer);
  if (officeFileDrStatus != CLOSED) {
    if (officeFileDrStatus == OPEN1) {
      position(oFileDrawer, 93, 112);
      set.loop(oFileDrawer, 3);
      set.cel(oFileDrawer, 2);
    }
    if (officeFileDrStatus == OPEN2) { 
      position(oFileDrawer, 93, 121);
      if (has("notebook")) {
        set.loop(oFileDrawer, 3);
        set.cel(oFileDrawer, 2);
      } else {
        set.loop(oFileDrawer, 5);
        set.cel(oFileDrawer, 5);
      }
    }
    if (officeFileDrStatus == OPEN3) { 
      position(oFileDrawer, 93, 130);
      if (has("floppy disk")) {
        set.loop(oFileDrawer, 3);
        set.cel(oFileDrawer, 2);
      } else {
        set.loop(oFileDrawer, 5);
        set.cel(oFileDrawer, 6);
      }
    }
    draw(oFileDrawer);
  }
  
  [ add ego to the room
  if (previousRoom != rm.SafeDoor) {
    position(ego, 107, 138);
  }
  draw(ego);
  egoDir = STOPPED;
  
  [ display the picture on screen
  show.pic();
  [ fade in
  block(FADE.IN, 0, FADECOUNT, 0); [ fade.in(BYVAR, DELAY, COLOR)
  [ restore cursor
  cursoricon = cursormode;
  set.key(1, &cursoricon, mouse); [ set.cursor(BYVAR, MSGNUM);
  return();
}

[*****
:handleInput       [ check for input from player
[*****
if (haveInput && !haveMatch && unknownWordNum == 0) {
  [ place said tests here
  if (said("look")) {
    print("You see nothing of interest.");
  }
}

[ if cursor is look/talk/use and left-click and NOT 
[ clicking on the actual toolbar, check for clicks
[ on in-game items
if (cursoricon > C_WALK && cursoricon < C_WAIT && 
    controller(cLeftClick) &&
    (mouseX < 14 || mouseX > 145 || mouseY > 17)) {
  [ ignore borders
  if ((mouseX < 32 || mouseX > 127 || mouseY < 64 || mouseY > 154)) {
    goto(doneclick);
  }
  [ look
  if (cursormode == C_LOOK) {
    [ ego
    if (posn(ego, ON.OBJ, 1, &mouseX, &mouseY)) {
      print("You see you.");
      goto(doneclick);
    }
    
    [ picture on wall
    if (posn(oPicture, ON.OBJ, 1, &mouseX, &mouseY)) {
      if (pictureStatus == OPEN) {
        print("The painting is hinged on the right side. "
              "Behind it you see a wall safe.");
      } else {
        print("It's a painting of a medieval tower. A very "
              "interesting piece of artwork.");
      }
      goto(doneclick);
    }   
    
    [ safe behind picture, only if picture is open
    if (posn(oSafe, ON.OBJ, 1, &mouseX, &mouseY) && 
        pictureStatus == OPEN) {
      if (safeStatus == OPEN) {
        if (!has("BaDASS manual")) {
          print("The safe contains a thin paper back binder.");
        } else {
          print("The safe is empty.");
        }
      } else {
        print("A wall safe has been installed behind the painting.");
      }
      goto(doneclick);
    }
    
    [ computer/keyboard
    reset(fTmp);
    if (mouseX > 66 && mouseX < 77 && mouseY > 92 && mouseY < 116) {
      set(fTmp);
    }
    if (mouseX > 69 && mouseX < 80 && mouseY > 114 && mouseY < 119) {
      set(fTmp);
    }
    if (fTmp) {
      print("There is an old IBM PC sitting on the desk, with a "
            "keyboard. No mouse. It is powered down.");
      goto(doneclick);
    }
    
    [ printer
    if (mouseX > 77 && mouseX < 90 && mouseY > 106 && mouseY < 116) {
      print("An old dot matrix printer sits next to the computer.");
      if (!has("memo")) {
        print("The output spool still has a piece of paper in it.");
      }
      goto(doneclick);
    }
    
    [ desk drawer
    if (posn(oDeskDrawer, ON.OBJ, 1, &mouseX, &mouseY)) {
      if (officeDskDrStatus == OPEN1) {
        if (!has("Walkman")) {
          print("There is an old Sony Walkman cassette player in "
                "this drawer.");
        } else {
          print("The desk drawer is empty.");
        }
      } else {
        if (officeDskDrStatus == OPEN2) {
          if (!has("post-it note")) {
            print("There is a large yellow post-it note in "
                  "this drawer.");
          } else {
            print("The desk drawer is empty.");
          }
        } else {
          print("The desk drawer is empty");
        }
      }   
      goto(doneclick);
    }
          
    [ file drawer
    if (posn(oFileDrawer, ON.OBJ, 1, &mouseX, &mouseY)) {
      if (officeFileDrStatus == OPEN2) {
        if (!has("notebook")) {
          print("There is a notebook in this file drawer.");
        } else {
          print("The file drawer is empty.");
        }
      } else {
        if (officeFileDrStatus == OPEN3) {
          if (!has("floppy disk")) {
            print("There is a box of floppy disks in this file drawer.");
          } else {
            print("The file drawer is empty.");
          }
        } else {
          print("The file drawer is empty");
        }
      }   
      goto(doneclick);
    }
    
    [ desk
    if (mouseX > 62 && mouseX < 93 && mouseY > 109 && mouseY < 133) {
      print("The plain metal desk is old and worn. It has two drawers.");
      goto(doneclick);
    }
    
    [ file cabinet
    if (mouseX > 87 && mouseX < 102 && mouseY > 95 && mouseY < 130) {
      print("A large 3-drawer filing cabinet is in the corner.");
      goto(doneclick);
    }
    
    [ folder
    if (posn(oFolder, ON.OBJ, 0, &mouseX, &mouseY)) {
      print("There is a folder tucked under the corner of the rug.");
      goto(doneclick);
    }
    
    [ rug
    if (mouseX > 68 && mouseX < 99 && mouseY > 137 && mouseY < 150) {
      [ ignore if on priority-4 pixel
      block(GET.PIXEL, &mouseX, &mouseY, &work1); [ get.pixel(vX, vY, vRESULT)
      work1 /= 16;
      if (work1 != 4) {
        print("A small throw rug is in the center of the room. The "
              "rug looks worn and dirty.");
        if (rugStatus == RUG_UP) {
          if (!has("folder")) {
            print("It looks like there's something under this corner "
                  "of the rug.");
          } else {
            print("One corner is folded back.");
          }
        } else {
          if (!has("folder")) {
            print("One corner looks a bit rumpled.");
          }
        }
        goto(doneclick);
      }
    }
    
    [ anything else is the generic room look
    print("This office hasn't been used in a long time. There is a "
          "desk and file cabinet, but no chair. It was probably used "
          "by the control room operator.");
    goto(doneclick);
  }
  
  [ talk
  if (cursormode == C_TALK) {
    [ ego
    if (posn(ego, ON.OBJ, 1, &mouseX, &mouseY)) {
      print("You have nothing to say.");
    } else {
      print("There is no one here to talk to.");
    }
    goto(doneclick);
  }
  
  [ use
  if (cursormode == C_USE) {
    [ ego
    if (posn(ego, ON.OBJ, 1, &mouseX, &mouseY)) {
      print("Please don't touch yourself. Not even when you're alone.");
      goto(doneclick);
    }
    
    [ folder
    if (posn(oFolder, ON.OBJ, 0, &mouseX, &mouseY)) {
      [ is ego close enough?
      if (obj.in.box(ego, 80, 138, 104, 151)) {
        [ pick it up
        get("folder");
        erase(oFolder);
        work1 = 3;
        call(lgc.ScoreHandler);
        print("You pick up the folder. It might be useful.");
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }
    
    [ lift/lower carpet 89, 141, 98, 149
    if (mouseX > 88 && mouseX < 99 && mouseY > 140 && mouseY < 150) {
      [ ego has to be close to the rug corner
      if (obj.in.box(ego, 80, 138, 104, 151)) {
        [ but not too close
        if (obj.in.box(ego, 83, 141, 101, 148)) {
          print("You can't move the rug corner if you're standing on it.");
        } else {
          if (rugStatus == RUG_UP) {
            [ lower the rug
            rugStatus = RUG_LOWERING;
            reverse.loop(oRug, fMoveRug);
          } else {
            if ((rugStatus == RUG_DOWN || rugStatus == RUG_FLAT)) {
              [ raise it
              rugStatus = RUG_LIFTING;
              set.loop(oRug, 0);
              set.cel(oRug, 0);
              end.of.loop(oRug, fMoveRug);
              if (!has("folder")) {
                draw(oFolder);
              }
            }
          }
        }
      } else {
        print("You are not close enough to the rug corner to move it.");
      }
      goto(doneclick);
    }
    
    [ printer output
    if (!has("memo")) {
      if (mouseX > 77 && mouseX < 88 && mouseY > 103 && mouseY < 115) {
        [ is ego close enough?
        if (obj.in.box(ego, 73, 131, 97, 135)) {
          [ get the memo
          get("memo");
          add.to.pic(vw.OfficeArt, 5, 0, 80, 107, 4, 15);
          print("You tear the memo off the printer output spool.");
          work1 = 3;
          call(lgc.ScoreHandler);
        } else {
          print("Move closer.");
        }
        goto(doneclick);
      }
    }
    
    [ on desk drawer, and open
    if (posn(oDeskDrawer, ON.OBJ, 0, &mouseX, &mouseY) && 
        officeDskDrStatus != CLOSING) {
      [ is ego close enough?
      if (obj.in.box(ego, 74, 131, 101, 136)) {
        if (officeDskDrStatus == OPEN1 && mouseY < 124) {
          [ clicking on top drawer item
          if (!has("Walkman")) {
            get("Walkman");
            work1 = 2;
            call(lgc.ScoreHandler);
            print("You decide to take the Walkman before closing "
                  "the drawer.");
            set.loop(oDeskDrawer, 2);
            set.cel(oDeskDrawer, 2);
            force.update(oDeskDrawer);      
          }
        } else {
          if (officeDskDrStatus == OPEN2 && mouseY < 128) {
            [ clicking on bottom drawer item
            if (!has("post-it note")) {
              get("post-it note");
              work1 = 3;
              call(lgc.ScoreHandler);
              print("The post-it note may be of use so you grab it from "
                    "the drawer.");
              set.loop(oDeskDrawer, 2);
              set.cel(oDeskDrawer, 2);
              force.update(oDeskDrawer);      
            }
          } else {
            [ clicking on drawer
            set.loop(oDeskDrawer, 2);
            set.cel(oDeskDrawer, 2);
            reverse.loop(oDeskDrawer, fDeskDrawer);
            officeDskDrStatus = CLOSING;
          }
        }
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }
    
    [ top desk drawer, closed
    if (mouseX > 81 && mouseX < 93 && mouseY > 119 && mouseY < 125 && 
        officeDskDrStatus == CLOSED) {
      [ is ego close enough?
      if (obj.in.box(ego, 74, 131, 101, 136)) {
        position(oDeskDrawer, 84, 126);
        set.loop(oDeskDrawer, 2);
        set.cel(oDeskDrawer, 0);
        draw(oDeskDrawer);
        end.of.loop(oDeskDrawer, fDeskDrawer);
        officeDskDrStatus = OPENING;
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }
    
    [ bottom desk drawer, closed
    if (mouseX > 81 && mouseX < 93 && mouseY > 124 && mouseY < 131 && 
        officeDskDrStatus == CLOSED) {
      [ is ego close enough
      if (obj.in.box(ego, 74, 131, 101, 136)) {
        position(oDeskDrawer, 84, 130);
        set.loop(oDeskDrawer, 2);
        set.cel(oDeskDrawer, 0);
        draw(oDeskDrawer);
        end.of.loop(oDeskDrawer, fDeskDrawer);
        officeDskDrStatus = OPENING;
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }
    
    [ on file drawer, and open
    if (posn(oFileDrawer, ON.OBJ, 0, &mouseX, &mouseY) && 
        officeFileDrStatus != CLOSING) {
      [ is ego close enough?
      if (obj.in.box(ego, 82, 129, 105, 133)) {

        if (officeFileDrStatus == OPEN1 && mouseY < 105) {
          goto(doneclick);
        }
        if (officeFileDrStatus == OPEN2 && mouseY < 114) {
          if (!has("notebook")) {
            get("notebook");
            work1 = 3;
            call(lgc.ScoreHandler);
            print("This notebook might come in handy.");
            set.loop(oFileDrawer, 3);
            set.cel(oFileDrawer, 2);
            force.update(oFileDrawer);      
          }
          goto(doneclick);
        }
        if (officeFileDrStatus == OPEN3 && mouseY < 123) {
          if (!has("floppy disk")) {
            get("floppy disk");
            work1 = 4;
            call(lgc.ScoreHandler);
            print("You decide to take one of the disks.");
            set.loop(oFileDrawer, 3);
            set.cel(oFileDrawer, 2);
            force.update(oFileDrawer);      
          }
          goto(doneclick);
        }
        set.loop(oFileDrawer, 3);
        set.cel(oFileDrawer, 2);
        reverse.loop(oFileDrawer, fFileDrawer);
        officeFileDrStatus = CLOSING;
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }
    [ top file drawer, closed
    if (mouseX > 91 && mouseX < 101 && mouseY > 99 && mouseY < 109 &&
        officeFileDrStatus == CLOSED) {
      [ is ego close enough?
      if (obj.in.box(ego, 82, 129, 105, 133)) {
        position(oFileDrawer, 93, 112);
        set.loop(oFileDrawer, 3);
        set.cel(oFileDrawer, 0);
        draw(oFileDrawer);
        end.of.loop(oFileDrawer, fFileDrawer);
        officeFileDrStatus = OPENING;
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }
      
    [ middle file drawer, closed
    if (mouseX > 91 && mouseX < 101 && mouseY > 108 && mouseY < 118 &&
        officeFileDrStatus == CLOSED) {
      [ is ego close enough?
      if (obj.in.box(ego, 82, 129, 105, 133)) {
        position(oFileDrawer, 93, 121);
        set.loop(oFileDrawer, 3);
        set.cel(oFileDrawer, 0);
        draw(oFileDrawer);
        end.of.loop(oFileDrawer, fFileDrawer);
        officeFileDrStatus = OPENING;
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }
      
    [ bottom file drawer, closed
    if (mouseX > 92 && mouseX < 101 && mouseY > 118 && mouseY < 129 &&
        officeFileDrStatus == CLOSED) {
      [ is ego close enough?
      if (obj.in.box(ego, 82, 129, 105, 133)) {
        position(oFileDrawer, 93, 130);
        set.loop(oFileDrawer, 3);
        set.cel(oFileDrawer, 0);
        draw(oFileDrawer);
        end.of.loop(oFileDrawer, fFileDrawer);
        officeFileDrStatus = OPENING;
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }
    
    [ picture, open
    if (mouseX > 59 && mouseX < 66 && mouseY > 67 && mouseY < 118 && 
        pictureStatus == OPEN) {
      [ can't if safe is still open
      if (safeStatus != CLOSED) {
        print("The picture won't close with the safe open.");
        goto(doneclick);
      }
      [ is ego close enough? 
      if (obj.in.box(ego, 38, 126, 65, 132)) {
        reverse.loop(oPicture, fPicture);
        pictureStatus = CLOSING;
        erase(oSafe);
        [ if too close
        if (egoY < 130) {
          work1 = 130;
          work2 = 1;
          set.loop(ego, 3);
          fix.loop(ego);
          move.obj.v(ego, egoX, work1, work2, fBackup);
          reverse.loop(oPicture, fPicture);
          pictureStatus = CLOSING;
          erase(oSafe);
        }
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }
    
    [ picture, closed
    if (mouseX > 45 && mouseX < 61 && mouseY > 87 && mouseY < 116 && 
        pictureStatus == CLOSED) {
      [ is ego close enough? 
      if (obj.in.box(ego, 38, 126, 65, 132)) {
        end.of.loop(oPicture, fPicture);
        pictureStatus = OPENING;
        [ if too close
        if (egoY < 130) {
          work1 = 130;
          work2 = 1;
          set.loop(ego, 3);
          fix.loop(ego);
          move.obj.v(ego, egoX, work1, work2, fBackup);
          end.of.loop(oPicture, fPicture);
          pictureStatus = OPENING;
        } 
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }
    
    [ safe only accessible if picture is open
    if (pictureStatus == OPEN) {      
      [ safe door, open
      if (mouseX > 44 && mouseX < 50 && mouseY > 106 && mouseY < 120 && 
          safeStatus == OPEN) {
        [ is ego close enough? 
        if (obj.in.box(ego, 38, 126, 65, 132)) {
          set.loop(oSafe, 1);
          set.cel(oSafe, 7);
          reverse.loop(oSafe, fSafe);
          safeStatus = CLOSING;
          [ if too close
          if (egoY < 130) {
            work1 = 130;
            work2 = 1;
            set.loop(ego, 3);
            fix.loop(ego);
            move.obj.v(ego, egoX, work1, work2, fBackup);
            reverse.loop(oSafe, fSafe);
            safeStatus = CLOSING;
          }
        } else {
          print("Move closer.");
        }
        goto(doneclick);
      }
      
      [ safe interior, open
      if (mouseX > 49 && mouseX < 56 && mouseY > 104 && mouseY < 120 && 
          safeStatus == OPEN) {
        if (!has("BaDASS manual")) {
          get("BaDASS manual");
          print("You take the manual out of the safe.");
          set.loop(oSafe, 1);
          set.cel(oSafe, 7);
          force.update(oSafe);
          work1 = 3;
          call(lgc.ScoreHandler);
        }
        goto(doneclick);
      }
      
      [ safe door, closed
      [ player has to enter correct combo to get it open
      if (mouseX > 48 && mouseX < 57 && mouseY > 103 && mouseY < 113 && 
          safeStatus == CLOSED) {
        [ is ego close enough? 
        if (obj.in.box(ego, 38, 126, 65, 132)) {
          [ show wait cursor
          cursoricon = C_WAIT;
          set.key(1, &cursoricon, mouse); [ set.cursor(BYVAR, MSGNUM);
          [ fade out, then display access panel
          block(FADE.OUT, 0, 10, BLACK); [ fade.out(BYVAR, DELAY, COLOR)
          new.room(rm.SafeDoor);  [ ##LE002##
        } else {
          print("Move closer.");
        }
        goto(doneclick);
      }
    }
    
    [ computer/keyboard
    reset(fTmp);
    if (mouseX > 66 && mouseX < 77 && mouseY > 92 && mouseY < 116) {
      set(fTmp);
    }
    if (mouseX > 69 && mouseX < 80 && mouseY > 114 && mouseY < 127) {
      set(fTmp);
    }
    if (fTmp) {
      [ is ego close enough?
      if (obj.in.box(ego, 64, 131, 86, 135)) {
        print("The computer is not working. It looks like the hard "
              "drive and power supply have been removed a long time "
              "ago.");
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }
    
    [ printer
    if (mouseX > 77 && mouseX < 90 && mouseY > 114 && mouseY < 124) {
      [ is ego close enough?
      if (obj.in.box(ego, 77, 131, 98, 135)) {
        print("The printer appears to be broken.");
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }
    [ rug
    if (mouseX > 68 && mouseX < 99 && mouseY > 145 && mouseY < 158) {
      [ ignore if on priority-4 pixel
      block(GET.PIXEL, &mouseX, &mouseY, &work1); [ get.pixel(vX, vY, vRESULT)
      work1 /= 16;
      if (work1 != 4) {
        [ is ego close enough?
        if (obj.in.box(ego, 61, 133, 103, 154)) {
          print("This portion of the rug is stuck to the floor.");
        } else {
          print("Move closer.");
        }
      }
    }
  }
  
  :doneclick
  set.key(-1, -1, cLeftClick); [ clear.controller(cLeftClick);
}

[*****
:noInput           [  all non-input related code goes here 
[*****

[ ego backing up from picture
if (fBackup) {
  reset(fBackup);
  release.loop(ego);
}

[ picture movement
if (fPicture) {
  reset(fPicture);
  if (pictureStatus == OPENING) {
    pictureStatus = OPEN;
    if (!scorePicture) {
      set(scorePicture);
      work1 = 2;
      call(lgc.ScoreHandler);
    }
    draw(oSafe);
  } else {
    pictureStatus = CLOSED;
  }
}

[ safe door movement
if (fSafe) {
  reset(fSafe);
  if (safeStatus == OPENING) {
    safeStatus = OPEN;
    if (!has("BaDASS manual")) {
      set.loop(oSafe, 5);
      set.cel(oSafe, 7);
      force.update(oSafe);
    }
  } else {
    safeStatus = CLOSED;
  }
}

[ open the safe
if (fOpenSafe) {
  reset(fOpenSafe);
  [ if too close
  if (obj.in.box(ego, 38, 126, 65, 129)) {
    work1 = 130;
    work2 = 1;
    set.loop(ego, 3);
    fix.loop(ego);
    move.obj.v(ego, egoX, work1, work2, fBackup);
  }
  end.of.loop(oSafe, fSafe);
  safeStatus = OPENING;
}

[ rug movement
if (fMoveRug) {
  reset(fMoveRug);
  if (rugStatus == RUG_LIFTING) {
    rugStatus = RUG_UP;
    if (!findFolder && !has("folder")) {
      set(findFolder);
      print("You see a folder tucked under the corner of the rug!");
      work1 = 2;
      call(lgc.ScoreHandler);
    }
  } else {
    if (has("folder")) {
      rugStatus = RUG_FLAT;
      set.loop(oRug, 5);
      set.cel(oRug, 2);
    } else {
      rugStatus = RUG_DOWN;
      erase(oFolder);
    }
  }
}

[ trip on rug
if (!fOnTripLine && rugStatus == RUG_UP && egoHitSpecial && egoX < 100) {
  set(fOnTripLine);
  set(fTripping);
  load.view(vw.Tripping);
  current.loop(ego, work1);
  tmpLoop = work1;
  if (work1 > 1) {
    work1 -=2;
  }
  work1 *= -1; [ because trip loops are backwards!
  work1 += 1; [ could 'bit.not' it...
  set.view(ego, vw.Tripping);
  set.loop.v(ego, work1);
  fix.loop(ego);
  program.control();
  tripCounter = 9;
}

[ check trip counter
if (tripCounter) {
  --tripCounter;
  if (tripCounter == 0) {
    set.view(ego, vw.Ego);
    set.loop.v(ego, tmpLoop);
    release.loop(ego);
    player.control();
    if (!fWarnTrip) {
      set(fWarnTrip);
      print("You tripped on the carpet! Good thing you didn't fall "
            "and break your neck.");
    }
    work1 = -1;
    call(lgc.ScoreHandler);
  }
}

[ if fOnTripLine set, AND not on rug, reset fOnTripLine
if (fOnTripLine) {
  if (!egoHitSpecial) {
    reset(fOnTripLine);
  }
}

[ drawer movement
if (fDeskDrawer) {
  reset(fDeskDrawer);
  if (officeDskDrStatus == CLOSING) {
    erase(oDeskDrawer);
    officeDskDrStatus = CLOSED;
  } else {
    get.posn(oDeskDrawer, work1, work2);
    if (work2 == 126) {
      officeDskDrStatus = OPEN1;
      if (!has("Walkman")) {
        set.loop(oDeskDrawer, 5);
        set.cel(oDeskDrawer, 4);
        force.update(oDeskDrawer);
      }
    } else {
      officeDskDrStatus = OPEN2;
      if (!has("post-it note")) {
        set.loop(oDeskDrawer, 5);
        set.cel(oDeskDrawer, 3);
        force.update(oDeskDrawer);
      }
    }
  }
}
if (fFileDrawer) {
  reset(fFileDrawer);
  if (officeFileDrStatus == CLOSING) {
    erase(oFileDrawer);
    officeFileDrStatus = CLOSED;
  } else {
    get.posn(oFileDrawer, work1, work2);
    if (work2 == 112) {
      officeFileDrStatus = OPEN1;
    } else {
      if (work2 == 121) {
        officeFileDrStatus = OPEN2;
        if (!has("notebook")) {
          set.loop(oFileDrawer, 5);
          set.cel(oFileDrawer, 5);
          force.update(oFileDrawer);
        }
      } else {
        officeFileDrStatus = OPEN3;
        if (!has("floppy disk")) {
          set.loop(oFileDrawer, 5);
          set.cel(oFileDrawer, 6);
          force.update(oFileDrawer);
        }
      }
    }
  }
}

[*****
:exit              [  test for leaving the room
[*****

[ add exit checks here (or use layout editor)

if (egoX > 100 && egoHitSpecial) {
  [ show wait cursor
  cursoricon = C_WAIT;
  set.key(1, &cursoricon, mouse); [ set.cursor(BYVAR, MSGNUM);
  [ fade out, then change room
  block(FADE.OUT, 0, FADECOUNT, BLACK); [ fade.out(BYVAR, DELAY, COLOR)
  [ restore normal palette
  block(SET.PALETTE, 0, &m10, 1); [ set.palette(BYVAR, PALETTE, LOADONLY)
  new.room(rm.ControlRoom);  [ ##LE001##
}

return();

[ **************************************
[ DECLARED MESSAGES
[ **************************************
#message 1 "%g20"
#message 2 "%g21"
#message 3 "%g22"
#message 4 "%g23"
#message 5 "%g24"
#message 6 "%g25"
#message 7 "%g26"
#message 8 "%g27"
[ custom palette
#message 9 "00000000002A002A00002A2A2A00002A002A2A15002A2A2A15151515153F153F15001E1E3F15153F153F3F3F153F3F3F"
[ default palette
#message 10 "%s2"