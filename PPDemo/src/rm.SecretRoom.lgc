[*********************************************************************
[
[ rm.SecretRoom
[
[ 
[
[*********************************************************************

[ power pack support
#include "powerpack.txt"

[***************************************
[ LOCAL DEFINES
[***************************************
#define fDone           f220
#define tmpFlag         f221

#define crouch          f227
#define uncrouch        f228

[***************************************
[ FIRST CYCLE ONLY
[***************************************
if (newRoom) {
  [ load, draw and discard the picture resource for the current room
  load.pic(currentRoom);
  draw.pic(currentRoom);
  discard.pic(currentRoom);
  
  [ the horizon defines the upper limit of ego's movement
  set.horizon(0);
  
  [ add toolbar buttons
  load.view(vw.ButtonsDown);
  call(lgc.InitToolbar);
  
  load.view(vw.ClosetArt);

  egoDir = STOPPED;
  if (previousRoom == rm.Closet) {
    position(ego, 73, 137);
    set.view(ego, vw.ClosetArt);
    set.loop(ego, 3);
    set.cel(ego, 4);
    program.control();
    prevent.input();
    work1 = CYCLE_AT_REST;
    set.upper.left(&ego, &work1); [ auto.cycle(oSOBJ, vMODE)
    reverse.loop(ego, uncrouch);
  } else {
    [if (previousRoom == rm.Stairway) {
    position(ego, 29, 166);
    set.loop(ego, 3);
  }
  
  [ add ego to the room
  draw(ego);
  
  [ display the picture on screen
  show.pic();
  [ fade in
  block(FADE.IN, BYNUM, FADECOUNT, BLACK); [ fade.in(FN_MODE, DELAY, COLOR)
  
  if (previousRoom == rm.Stairway) {
    [ restore cursor
    cursoricon = cursormode;
    set.key(BYVAR, &cursoricon, mouse); [ set.cursor(FN_MODE, MSGNUM);
  }
  return();
}

[***************************************
[ NON-INPUT CODE 
[***************************************

[ check for uncrouching
if (uncrouch) {
  [ restore player control
  reset(uncrouch);
  set.view(ego, vw.Ego);
  set.loop(ego, 3);
  normal.cycle(ego);
  player.control();
  accept.input();
  [ restore autocycle
  work1 = AUTO_CYCLE;
  set.upper.left(&ego, &work1); [ auto.cycle(oSOBJ, vMODE)
  [ restore cursor
  cursoricon = cursormode;
  set.key(BYVAR, &cursoricon, mouse); [ set.cursor(FN_MODE, MSGNUM);
}

[***************************************
[ PROCESS PLAYER INPUT
[***************************************
if (haveInput && !haveMatch && unknownWordNum == 0) {
[ TODO: more said statements for secret room
  if (said("look")) {
    print("You see nothing of interest.");
  }
  if (said("look", "wall")) {}
  if (said("look", "floor")) {}
  if (said("look", "ceiling")) {}
  if (said("look", "hole")) {}
  if ((said("look", "sink") || said("look", "mop") || said("look", "bucket") || said("look", "boxes") || said("look", "shelves"))) {}
  if (said("look", "stairs")) {}
  if (said("get", "anyword", "rol")) {}
}

[***************************************
[ MOUSE INPUT
[***************************************
[ if cursor is look/talk/use and left-click and NOT 
[ clicking on the actual toolbar, check for clicks
[ on in-game items
if (cursoricon > C_WALK && cursoricon < C_WAIT && 
    controller(cLeftClick) &&
    (mouseX < 14 || mouseX > 145 || mouseY > 17)) {
  [ ignore borders
  if ((mouseX < 16 || mouseX > 112 || mouseY < 66 || mouseY > 167)) {
    goto(doneclick);
  }
  [ look
  if (cursormode == C_LOOK) {
    [ ego
    if (posn(ego, ON.OBJ, OBJ_VISIBLE, &mouseX, &mouseY)) {
      print("You see you.");
      goto(doneclick);
    }
    
    [ interior of hidden room
    reset(tmpFlag);
    if (mouseX > 47 && mouseX < 84 && mouseY > 82 && mouseY < 136) {
      set(tmpFlag);
    }
    if (mouseX > 32 && mouseX < 44 && mouseY > 108 && mouseY < 139) {
      set(tmpFlag);
    }
    if (tmpFlag) {
      print("This dark, dusty room is empty. There is a "
            "stairway leading down.");
      goto(doneclick);
    }

    [ stairs
    if (mouseX > 24 && mouseX < 44 && mouseY > 138 && mouseY < 168) {
      print("Flickering light illuminates stairs that "
            "lead down into the basement.");
      goto(doneclick);
    }
    
    [anything else is the closet
    print("You can see the closet through the hole in the wall.");
    goto(doneclick);
  }
  
  [ talk
  if (cursormode == C_TALK) {
    [ ego
    if (posn(ego, ON.OBJ, OBJ_VISIBLE, &mouseX, &mouseY)) {
      print("You have nothing to say.");
    } else {
      print("There is no one here to talk to.");
    }
    goto(doneclick);
  }
  
  [ use
  if (cursormode == C_USE) {
    [ ego
    if (posn(ego, ON.OBJ, OBJ_VISIBLE, &mouseX, &mouseY)) {
      print("Please don't touch yourself. Not even when you're alone.");
      goto(doneclick);
    }
  }
  
  :doneclick
  set.key(CLR.CTRL, CLR.CTRL, cLeftClick); [ clear.controller(cLeftClick);
}

[***************************************
[ CHECK FOR AN EXIT CONDITION
[***************************************
:exit

[ add exit checks here (or use layout editor)

if (edgeEgoHit == BOTTOM_EDGE) {
  [ show wait cursor
  cursoricon = C_WAIT;
  set.key(BYVAR, &cursoricon, mouse); [ set.cursor(FN_MODE, MSGNUM);
  [ fade out, then change room
  block(FADE.OUT, BYNUM, FADECOUNT, BLACK); [ fade.out(FN_MODE, DELAY, COLOR)
  new.room(rm.Stairway);  [ ##LE002##
}

if (egoHitSpecial && !crouch) {
  egoDir = STOPPED;
  set(crouch);
  set.view(ego, vw.ClosetArt);
  set.loop(ego, 4);
  set.cel(ego, 4);
  program.control();
  prevent.input();
  work1 = CYCLE_AT_REST;
  set.upper.left(&ego, &work1); [ auto.cycle(oSOBJ, vMODE)
  reverse.loop(ego, fDone);
  [ show wait cursor
  cursoricon = C_WAIT;
  set.key(BYVAR, &cursoricon, mouse); [ set.cursor(FN_MODE, MSGNUM);
}
if (crouch && fDone) {
  [ fade out, then change room
  block(FADE.OUT, BYNUM, FADECOUNT, BLACK); [ fade.out(FN_MODE, DELAY, COLOR)
  new.room(rm.Closet);  [ ##LE001##
}

return();

[***************************************
[ DECLARED MESSAGES
[***************************************
#message 1 "%g20"
#message 2 "%g21"
#message 3 "%g22"
#message 4 "%g23"
#message 5 "%g24"
#message 6 "%g25"
#message 7 "%g26"
#message 8 "%g27"
 