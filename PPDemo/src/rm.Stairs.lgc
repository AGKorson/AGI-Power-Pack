[ ********************************************************************[[ rm.Stairs[[ [[ ********************************************************************if (newRoom)  {  [ this is the first cycle through this room  [ load, draw and discard the picture resource for the current room  load.pic(currentRoom);  draw.pic(currentRoom);  discard.pic(currentRoom);    [ do basic room initialization  call(lgc.RoomInit);    [ the horizon defines the upper limit of ego's movement  set.horizon(0);    [ add additional room initialization here    [ add toolbar buttons  load.view(vw.Toolbar);  call(lgc.InitToolbar);    [ load ego view, animate and draw ego  [ this is sometimes handled in logic 0  [ instead of in each individual logic  if (previousRoom == rm.Entrance) {    position(ego, 2, 152);  } else {    position(ego, 151, 82);  }  egoDir = STOPPED;    [ add ego to the room  draw(ego);    [ display the picture on screen  show.pic();  [ fade in  block(FADE.IN, 0, FADECOUNT, BLACK); [ fade.in(BYVAR, DELAY, COLOR)  return();  }[*****:handleInput       [ check for input from player[*****if (haveInput && !haveMatch && unknownWordNum == 0)  {  [ place said tests here  if (said("look"))    {    print("You see nothing of interest.");    }  }[*****:noInput           [  all non-input related code goes here [*****[ add other room specific statements here[*****:exit              [  test for leaving the room[*****[ add exit checks here (or use layout editor)if (edgeEgoHit == LEFT_EDGE) {  [ fade out, then change room  block(FADE.OUT, 0, FADECOUNT, BLACK); [ fade.out(BYVAR, DELAY, COLOR)  new.room(rm.Entrance);  [ ##LE002##}if (edgeEgoHit == RIGHT_EDGE) {  [ fade out, then change room  block(FADE.OUT, 0, FADECOUNT, BLACK); [ fade.out(BYVAR, DELAY, COLOR)  new.room(rm.Closet);  [ ##LE001##}return();[*****[ messages         [  declared messages go here[*****#message 1 "You see nothing of interest." 