[ ********************************************************************[[ cp.Sound[[ [[ ********************************************************************#define ac    v220if(newRoom)   {  [ this is the first cycle through this room  [ load, draw and discard the picture resource for the current room  load.pic(currentRoom);  draw.pic(currentRoom);  discard.pic(currentRoom);  [ the horizon defines the upper limit of ego's movement  [ set.horizon(36);    [ add additional room initialization here  draw(ego);  wander(ego);  [ load ego view, animate and draw ego  [ this is sometimes handled in logic 0  [ instead of in each individual logic  v220 = -1;    [ display the picture on screen  show.pic();  return();  }get.dir(ego, v221);if (v220 != v221) {  v220 = v221;  v222 = 0;}++v222;display(24, 1, "%v222|3");[*****:handleInput       [ check for input from player[*****if(haveInput && !haveMatch && unknownWordNum == 0)   {  [ place said tests here  if(said("look"))    {    print("You see nothing of interest.");    }  }[*****:noInput           [  all non-input related code goes here [*****[ add other room specific statements here[*****:exit              [  test for leaving the room[*****[ add exit checks here (or use layout editor)return();[*****[ messages         [  declared messages go here[*****#message 1 "You see nothing of interest." 