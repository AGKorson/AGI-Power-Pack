[*********************************************************************
[
[ rm.StoreRoom
[
[ 
[
[*********************************************************************

[ power pack support
#include "powerpack.txt"

[***************************************
[ LOCAL DEFINES
[***************************************
#define oClockHour      o1
#define oClockMinute    o2
#define oPendulum       o3
#define oCoffin         o4
#define oCabinetDoor    o4 [ reuse o4 for cabinet door
#define oChest          o5
#define oBureauDrawer   o6
#define oFileDrawer     o7 [ green file cabinet
#define oDeskDrawer     o8 [ under mirror

#define vCheckSecond  v220
#define vClockHour    v221
#define vClockMin     v222
#define vClockSec     v223
#define vCoffinState  v224 [ coffin and cabinet door close automatically
#define vDoorState    v225 [ so only local variables needed to track state
#define vCoffinDeathSeq  v226
#define vCoffinCount  v227
#define bellCount     v228

#define fCoffin       f220
#define fCheckClick   f221
#define fDoor         f222
#define fFileDrawer   f223
#define fDeskDrawer   f224
#define fBureauDrawer f225
#define fChest        f226
#define fEgoBackup    f227
#define fInCoffin     f228
#define clockChiming  f229
#define hourBells     f230

[***************************************
[ FIRST CYCLE ONLY
[***************************************
if (newRoom) {
  [ load, draw and discard the picture resource for the current room
  load.pic(currentRoom);
  draw.pic(currentRoom);
  discard.pic(currentRoom);
  
  [ the horizon defines the upper limit of ego's movement
  [ default horizon is ok
  
  [ add toolbar buttons
  load.view(vw.ButtonsDown);
  call(lgc.InitToolbar);
  
  load.view(vw.StoreRoomArt);
  
  [ clock
  animate.obj(oPendulum);
  set.view(oPendulum, vw.StoreRoomArt);
  set.loop(oPendulum, 7);
  ignore.objs(oPendulum);
  position(oPendulum, 39, 96);
  ignore.objs(oPendulum);
  set.priority(oPendulum, 11);
  work1 = 2;
  cycle.time(oPendulum, work1);
  draw(oPendulum);
  animate.obj(oClockHour);
  set.view(oClockHour, vw.StoreRoomArt);
  set.loop(oClockHour, 9);
  ignore.objs(oClockHour);
  stop.cycling(oClockHour);
  position(oClockHour, 39, 76);
  set.priority(oClockHour, 11);
  animate.obj(oClockMinute);
  set.view(oClockMinute, vw.StoreRoomArt);
  set.loop(oClockMinute, 8);
  ignore.objs(oClockMinute);
  stop.cycling(oClockMinute);
  position(oClockMinute, 39, 76);
  set.priority(oClockMinute, 11);
  [ get current time
  block(GET.TIME, &vClockHour, &vClockMin, &vClockSec); [ get.time(vHOUR, vMINUTE, vSECOND)
  if (vClockHour > 11) {
   vClockHour -= 12;
  }
  set.cel.v(oClockHour, vClockHour);
  [ round minutes to multiples of 2.5
  work1 = vClockMin; [ 0-59
  work1 *= 2; [ 0 - 118
  if (vClockSec > 29) {
    ++work1;
  }
  work1 /= 5;
  set.cel.v(oClockMinute, work1);
  draw(oClockHour);
  draw(oClockMinute);
  vCheckSecond = elapsedSeconds;
  [ chime sounds
  load.sound(s.WestminsterHour);
  load.sound(s.WestminsterQtr);
  load.sound(s.WestminsterHalf);
  load.sound(s.WestminsterThree);
  load.sound(s.HourChime);
  
  [ coffin lid
  animate.obj(oCoffin);
  set.view(oCoffin, vw.StoreRoomArt);
  stop.cycling(oCoffin);
  ignore.objs(oCoffin);
  ignore.blocks(oCoffin);
  load.sound(s.OpenCoffin);
  
  [ cabinet door (uses same object as the coffin)

  [ chest
  animate.obj(oChest);
  set.view(oChest, vw.StoreRoomArt);
  if (has("scroll")) {
    set.loop(oChest, 1);
  } else {
    set.loop(oChest, 10);
  }
  if (storeChestStatus == OPEN) {
    set.cel(oChest, 3);
  } else {
    set.cel(oChest, 0);
  }
  stop.cycling(oChest);
  ignore.objs(oChest);
  ignore.blocks(oChest);
  position(oChest, 119, 162);
  draw(oChest);

  [ bureau drawer
  animate.obj(oBureauDrawer);
  set.view(oBureauDrawer, vw.StoreRoomArt);
  set.loop(oBureauDrawer, 4);
  stop.cycling(oBureauDrawer);
  ignore.objs(oBureauDrawer);
  ignore.blocks(oBureauDrawer);
  if (storeBureauDrStatus == OPEN) {
    set.cel(oBureauDrawer, 3);
    [ add conditional line
    s12 = "F1F201F6727C6D7C72887888FF";
    block(PIC.DRAW, AGI_FILL, &s12, 0); [ pic.draw(FILLSTYLE, sCMDS)
    draw(oBureauDrawer);
  }
  
  [ green file cabinet drawers
  animate.obj(oFileDrawer); 
  set.view(oFileDrawer, vw.StoreRoomArt);
  stop.cycling(oFileDrawer);
  ignore.objs(oFileDrawer);
  ignore.blocks(oFileDrawer);
  set.priority(oFileDrawer, 9);
  if (storeFileDrStatus != CLOSED) {
    if (storeFileDrStatus == OPEN1) {
      position(oFileDrawer, 76, 100);
      set.loop(oFileDrawer, 3);
      set.cel(oFileDrawer, 2);
    }
    if (storeFileDrStatus == OPEN2) { 
      position(oFileDrawer, 76, 109);
      set.loop(oFileDrawer, 3);
      set.cel(oFileDrawer, 2);
    }
    if (storeFileDrStatus == OPEN3) { 
      position(oFileDrawer, 76, 118);
      if (has("cassette tape")) {
        set.loop(oFileDrawer, 3);
        set.cel(oFileDrawer, 2);
      } else {
        set.loop(oFileDrawer, 11);
        set.cel(oFileDrawer, 0);
      }
    }
    draw(oFileDrawer);
  }
  
  [ desk drawer (under mirror)
  animate.obj(oDeskDrawer);
  set.view(oDeskDrawer, vw.StoreRoomArt);
  stop.cycling(oDeskDrawer);
  ignore.objs(oDeskDrawer);
  position(oDeskDrawer, 100, 112);
  if (storeDeskDrStatus == OPEN) {
    set.loop(oDeskDrawer, 5);
    set.cel(oDeskDrawer, 4);
    draw(oDeskDrawer);
  }
  
  [ add ego to the room
  position(ego, 24, 139);
  draw(ego);
  egoDir = STOPPED;
  
  load.sound(s.GetItem);
  load.sound(s.OpenCoffin);
  load.sound(s.CloseCoffin);
  load.sound(s.CoffinSlam);
  load.sound(s.OpenDrawer);
  load.sound(s.CloseDrawer);
  
  [ display the picture on screen
  show.pic();
  [ fade in
  block(FADE.IN, BYNUM, 25, 0); [ fade.in(FN_MODE, DELAY, COLOR)
  [ restore cursor
  cursoricon = cursormode;
  set.key(BYVAR, &cursoricon, mouse); [ set.cursor(FN_MODE, MSGNUM);
  
  return();
}

[***************************************
[ NON-INPUT CODE 
[***************************************
if (soundDone) {
  if (clockChiming) {
    [ check for hour bell tolls
    if (hourBells) {
      reset(soundDone);
      --bellCount;
      if ((currentTrack == 0 || currentTrack > 128)) {
        if (bellCount > 0) {
          [ play chime sound, force 4-channel MIDI
          set(4channelsound);
          set(useMIDI);
          set.key(MIDI_MODE, 0, SET.SNDMODE); [ set.sndmode(MODE)
          [ use correct instruments
          work1 = 0;
          work2 = 14;
          set.key(&work1, &work2, SET.INST); [ set.inst(vCHANNEL, vINSTRUMENT);
          ++work1;
          set.key(&work1, &work2, SET.INST); [ set.inst(vCHANNEL, vINSTRUMENT);
          sound(s.HourChime, soundDone);
          set(playSound);
        } else {
          reset(hourBells);
          reset(clockChiming);
        }
      } else {
        bellCount = 0;
        reset(hourBells);
        reset(clockChiming);
      }
    } else {
      [ not an hourly chime 
      reset(clockChiming);
    }
  }
}

[ clock - check every second
if (vCheckSecond != elapsedSeconds) {
  vCheckSecond = elapsedSeconds;
  [ increment clock seconds
  ++vClockSec;
  if (vClockSec == 60) {
    vClockSec = 0;
    ++vClockMin;
    if (vClockMin == 60) {
      vClockMin = 0;
      ++vClockHour;
      if (vClockHour == 12) {
        vClockHour = 0;
      }
    }
    [ chimes, if not playing music
    [ only play chimes if walkman is not in use
    if ((currentTrack == 0 || currentTrack > 128)) {
      if ((vClockMin == 0 || vClockMin == 15 || vClockMin == 30 || vClockMin == 45)) {
        [ force midi
        set(4channelsound);
        set(useMIDI);
        set.key(MIDI_MODE, 0, SET.SNDMODE); [ set.sndmode(MODE)
        [ use correct instrument
        work1 = 0;
        work2 = 14;
        set.key(&work1, &work2, SET.INST); [ set.inst(vCHANNEL, vINSTRUMENT);
        ++work1;
        set.key(&work1, &work2, SET.INST); [ set.inst(vCHANNEL, vINSTRUMENT);
        set(playSound);
        set(clockChiming);
        if (vClockMin == 0) {
          sound(s.WestminsterHour, soundDone);
          set(hourBells);
          bellCount = vClockHour;
          if (bellCount == 0) {
            bellCount = 12;
          }
          [ add one to account for starting tones
          ++bellCount;
        }
        if (vClockMin == 15) {
          sound(s.WestminsterQtr, soundDone);
        }
        if (vClockMin == 30) {
          sound(s.WestminsterHalf, soundDone);
        }
        if (vClockMin == 45) {
          sound(s.WestminsterThree, soundDone);
        }
      }
    }
  }
  if ((vClockSec == 0 || vClockSec == 30)) {
    [ refresh time every 30 seconds
    block(GET.TIME, &vClockHour, &vClockMin, &vClockSec); [ get.time(vHOUR, vMINUTE, vSECOND)
    if (vClockHour > 11) {
     vClockHour -= 12;
    }
    set.cel.v(oClockHour, vClockHour);
    [ round minutes to multiples of 2.5
    work1 = vClockMin; [ 0-59
    work1 *= 2; [ 0 - 118
    if (vClockSec > 29) {
      ++work1;
    }
    work1 /= 5;
    set.cel.v(oClockMinute, work1);
    draw(oClockHour);
    draw(oClockMinute);
  }
}

[ coffin death check
if (fInCoffin) {
  reset(fInCoffin);
  if (vCoffinDeathSeq == 6) {
    deathType = DT_COFFIN;
    ++vCoffinDeathSeq;
  }

  if (vCoffinDeathSeq == 5) {
    print("Looks like you're going to be here awhile.");
    vCoffinCount = 8;
    ++vCoffinDeathSeq;
  }

  if (vCoffinDeathSeq == 4) {
    print("And it's stuck! You can't push it open!");
    vCoffinCount = 4;
    ++vCoffinDeathSeq;
  }
  
  if (vCoffinDeathSeq == 3) {
    print("Uh oh! The coffin lid just slammed shut!");
    vCoffinCount = 4;
    ++vCoffinDeathSeq;
  }
  
  if (vCoffinDeathSeq == 2) {
    work1 = -2;
    work2 = -1;
    reposition(ego, work1, work2);
    set.loop(ego, 2);
    set.cel(ego, 0);
    work1 = 1;
    cycle.time(ego, work1);
    end.of.loop(ego, fInCoffin);
    ++vCoffinDeathSeq;
    erase(oCoffin);
    sound(s.CoffinSlam, soundDone);
  }
  
  if (vCoffinDeathSeq == 1) {
    work1 = -6;
    work2 = -10;
    reposition(ego, work1, work2);
    set.priority(ego, 15);
    set.loop(ego, 1);
    set.cel(ego, 0);
    end.of.loop(ego, fInCoffin);
    ++vCoffinDeathSeq;
  }
  
  if (vCoffinDeathSeq == 0) {
    work1 = -1;
    work2 = 0;
    reposition(ego, work1, work2);
    set.view(ego, vw.EgoCoffin);
    set.loop(ego, 0);
    set.cel(ego, 0);
    end.of.loop(ego, fInCoffin);
    work1 = CYCLE_AT_REST;
    set.upper.left(&ego, &work1); [ auto.cycle(oSOBJ, vMODE)
    ++vCoffinDeathSeq;
    [ stop walkman if active
    if (currentTrack > 0 && currentTrack < 128) {
      currentTrack *= -1;
      stop.sound();
      reset(musicDone);
    }
  }
}

if (vCoffinCount) {
  --vCoffinCount;
  if (vCoffinCount == 0) {
    set(fInCoffin);
  }
}

if (vCoffinDeathSeq) {
  [ nothing more to do
  return();
}

[ priority adjustments
[ behind green chair
if (posn(ego, 71, 143, 95, 148)) {
  set.priority(ego, 12);
} else {
  release.priority(ego);
}
[ treasure chest- on left, use 14
if (posn(ego, 112, 154, 123, 162)) {
  set.priority(oChest, 14);
} else {
  release.priority(oChest);
}

[ check coffin cycling
if (fCoffin) {
  reset(fCoffin);
  if (vCoffinState == OPENING) {
    vCoffinState = OPEN;
  } else {
    vCoffinState = CLOSED;
    erase(oCoffin);
  }
}

[ close coffin if ego moves away
if ((vCoffinState == OPEN || vCoffinState == OPENING)) {
  if (!posn(ego, 24, 156, 54, 161)) {
    goto(closeCoffin);
  }
}

[ check cabinet door cycling
if (fDoor) {
  reset(fDoor);
  if (vDoorState == OPENING) {
    vDoorState = OPEN;
  } else {
    vDoorState = CLOSED;
    erase(oCabinetDoor);
  }
}

[ close cabinet door if ego moves away
if ((vDoorState == OPEN || vDoorState == OPENING)) {
  if (!posn(ego, 120, 146, 132, 156)) {
    vDoorState = CLOSING;
    reverse.loop(oCabinetDoor, fDoor);
  }
}

[ file cabinet drawer
if (fFileDrawer) {
  reset(fFileDrawer);
  if (storeFileDrStatus == CLOSING) {
    erase(oFileDrawer);
    storeFileDrStatus = CLOSED;
  } else {
    get.posn(oFileDrawer, work1, work2);
    if (work2 == 100) {
      storeFileDrStatus = OPEN1;
    } else {
      if (work2 == 109) {
        storeFileDrStatus = OPEN2;
      } else {
        storeFileDrStatus = OPEN3;
        if (!has("cassette tape")) {
          set.loop(oFileDrawer, 11);
          set.cel(oFileDrawer, 0);
          force.update(oFileDrawer);
        }
      }
    }
  }
}

[ desk drawer
if (fDeskDrawer) {
  reset(fDeskDrawer);
  if (storeDeskDrStatus == CLOSING) {
    erase(oDeskDrawer);
    storeDeskDrStatus = CLOSED;
  } else {
    storeDeskDrStatus = OPEN;
  }
}

[ bureau drawer
if (fBureauDrawer) {
  reset(fBureauDrawer);
  if (storeBureauDrStatus == CLOSING) {
    erase(oBureauDrawer);
    storeBureauDrStatus = CLOSED;
    [ remove conditional line
    s12 = "F1F204F6727C6D7C72887888FF";
    block(PIC.DRAW, AGI_FILL, &s12, 0); [ pic.draw(FILLSTYLE, sCMDS)
  } else {
    storeBureauDrStatus = OPEN;
    [ add conditional line
    s12 = "F1F201F6727C6D7C72887888FF";
    block(PIC.DRAW, AGI_FILL, &s12, 0); [ pic.draw(FILLSTYLE, sCMDS)
  }
}

[ chest
if (fChest) {
  reset(fChest);
  if (storeChestStatus == CLOSING) {
    storeChestStatus = CLOSED;
  } else {
    storeChestStatus = OPEN;
  }
}

[ ego backup
if (fEgoBackup) {
  reset(fEgoBackup);
  release.loop(ego);
}

[ if ego is dead, skip player input
if (deathType) {
  return();
}

[***************************************
[ PROCESS PLAYER INPUT
[***************************************
if (haveInput && !haveMatch && unknownWordNum == 0) {
  if (said("look")) {
    print("This store room is stuffed with items that look like they "
          "were used as inspiration for many Sierra AGI games.");
  }
  
  if ((said("look", "pillow") || said("look", "in", "coffin"))) {
    [ only if coffin is open
    if (vCoffinState == OPEN) {
      print("You lean over the coffin to get a closer look at the pillow.");
      goto(lookpillow);
    } else {
      print("There's no pillow here.");
    }
  }
  
  if (said("open", "coffin")) {
    if ((vCoffinState == OPEN || vCoffinState == OPENING)) {
      print("It's already open.");
    } else {
      goto(openCoffin);
    }
  }
  if (said("close", "coffin")) {
    if ((vCoffinState == CLOSED || vCoffinState == CLOSING)) {
      print("It's already shut.");
    } else {
      goto(closeCoffin);
    }
  }
  if ((said("get in", "coffin") || said("climb", "in", "coffin") ||
       said("sit", "in", "coffin") || said("lay", "down", "in", "coffin"))) {
    [ is ego on wrong side or is lid closed
    if ((posn(ego, 28, 141, 54, 149) || vCoffinState != OPEN)) {
      print("The lid is closed.");
      goto(doneclick);
    }
    [ is ego close enough?
    if (posn(ego, 24, 156, 54, 161)) {
      load.view(vw.EgoCoffin);
      move.obj(ego, 37, 157, 1, fInCoffin);
      [ disallow menu use
      reset(enableMenu);
      [ game functions are disabled
      set(disableGameFunctions);
      [ no input allowed
      prevent.input();
    } else {
      print("You can't do that from here.");
    }
  }
  if (said("move", "coffin")) {
    if (posn(ego, 24, 156, 54, 161)) {
      print("The coffin is much to heavy to move.");
    } else {
      print("Move closer.");
    }
  }
  
  if (said("look", "clock")) {
    goto(lookclock);
  }
  if ((said("look", "in", "clock") || said("open", "clock"))) {
    print("The glass door on the clock is locked. You can't open it.");
  }
  if (said("get", "clock")) {
    print("You can't. It is much too heavy for you to lift.");
  }
  if ((said("set", "clock") || said("set", "time"))) {
    print("The clock is already set to the correct time. There is no need to change it.");
  }
  if ((said("stop", "clock") || said("turn", "off", "clock") || 
       said("turn", "off", "chimes") || said("stop", "chimes"))) {
    print("There is no way to stop the clock. It just keeps going and going.");
  }
  if (said("put", "anyword", "in", "coffin")) {
    if ((vCoffinState == CLOSED || vCoffinState == CLOSING)) {
      print("The coffin is closed.");
    } else {
      print("There's no reason to put anything in the coffin.");
    }
  }
  if (said("look", "behind", "coffin")) {
    [ if not already behind it
    if (posn(ego, 28, 141, 54, 149)) {
      [ is ego close enough?
      if (posn(ego, 24, 156, 54, 161)) {
        print("Go there and see for yourself.");
      } else {
        print("Move closer.");
      }
    } else {
      print("You are behind it. You see nothing special.");
    }
  }
  if (said("look", "moose")) {
    print("There are three moose heads on the walls. They look familiar.");
  }
  if (said("talk", "moose")) {
    print("Dead moose tell no tales.");
  }
  if (said("look", "wall")) {
    print("The walls are just as cluttered with artifacts as the rest of this room.");
  }
  if (said("look", "ceiling")) {
    print("A single bright incandesent bulb hangs from the gray ceiling, providing a warm glow to the entire room.");
  }
  if (said("look", "floor")) {
    print("There is a thin layer of dust on the plain floor. You can see your footprints in the dust. It looks like you've been the only one in here in a very long time.");
  }
  if (said("look", "podium")) {
    goto(lookpodium);
  }
  if ((said("look", "under", "podium") || said("look", "in", "podium") || 
       said("look", "behind", "podium"))) {
    [ if behind the podium, 
    if (posn(ego, 58, 112, 74, 119)) {
      print("There is nothing in the podium base.");
    } else {
      print("Go back there and see for yourself.");
    }
  }
  if ((said("look", "list") || said("look", "top", "podium") || 
       said("look", "podium", "top") || said("use", "podium"))) {
    [ if behind the podium, 
    if (posn(ego, 58, 112, 74, 119)) {
      if (!has("PQ idea list")) {
        print("There is a sheet of paper on top of the podium. It looks "
        "like a list of potential game titles for Police Quest II.");
      } else {
        print("There is nothing on top of the podium.");
      }
    } else {
      print("You can't see the top of the podium from here.");
    }
  }
  if (said("go", "behind", "podium")) {
    [ if behind the podium, 
    if (posn(ego, 58, 112, 74, 119)) {
      print("You already are behind the podium.");
    } else {
      print("Go back there and see for yourself.");
    }
  }
  if ((said("get", "lamp") || said("get", "desk", "lamp"))) {
    [ if near the lamp
    if (posn(ego, 60, 112, 78, 119)) {
      print("It's up too high. You can't quite reach it. Besides, you have no need for a lamp.");
    } else {
      print("Move closer.");
    }    
  }
  if (said("use", "desk", "lamp")) {
    [ if near the lamp
    if (posn(ego, 60, 112, 78, 119)) {
      print("You don't need to use the lamp.");
    } else {
      print("Move closer.");
    }
  }
  if ((said("turn on", "desk", "lamp") || said("turn", "desk", "lamp", "on"))) {
    [ if near the lamp
    if (posn(ego, 60, 112, 78, 119)) {
      print("You can't reach it. It isn't plugged in anyway.");
    } else {
      print("Move closer.");
    }
  }
  if (said("look", "bookshelf")) {
    print("The empty bookshelf is covered in dust. It probably once "
          "held computer hardware and software manuals used by Sierra "
          "developers.");
  }
  if (said("climb", "bookshelf")) {
    if (posn(ego, 44, 106, 70, 116)) {
      print("That seem much too danerous. The shelves might collapse.");
    } else {
      print("Move closer.");
    }
  }
  
  if (said("open", "drawer")) {
    [ is ego by file cabinet?
    if (obj.in.box(ego, 73, 117, 93, 122)) {
     print("Which one?");
    } else {
      [ is ego by desk?
      if (obj.in.box(ego, 94, 121, 112, 126)) {
        if (storeDeskDrStatus == OPEN) {
          print("It's already open.");
        } else {
          goto(opendeskdrawer);
        }
      } else {
        [ is ego by bureau?
        if ((obj.in.box(ego, 107, 122, 117, 129) || 
             obj.in.box(ego, 108, 130, 120, 138))) {
          if (storeBureauDrStatus == OPEN) {
            print("It's already open.");
          } else {
            goto(openbureaudrawer);
          }
        } else {
          print("What drawer?");
        }
      }
    }
  }
  if (said("close", "drawer")) {
    [ is ego by file cabinet?
    if (obj.in.box(ego, 73, 117, 93, 122)) {
      if (storeFileDrStatus == CLOSED) {
        print("No drawers are open.");
      } else {
        goto(closefiledrawer);
      }
    } else {
      [ is ego by desk?
      if (obj.in.box(ego, 94, 121, 112, 126)) {
        if (storeDeskDrStatus == OPEN) {
          goto(closedeskdrawer);
        } else {
          print("It's not open.");
        }
      } else {
        [ is ego by bureau?
        if ((obj.in.box(ego, 107, 122, 117, 129) || 
             obj.in.box(ego, 108, 130, 120, 138))) {
          if (storeBureauDrStatus == OPEN) {
            goto(closebureaudrawer);
          } else {
            print("It's not open.");
          }
        } else {
          print("What drawer?");
        }
      }
    }
  }
  if ((said("look", "drawer") || said("look", "in", "drawer"))) {
    [ is ego by file cabinet?
    if (obj.in.box(ego, 73, 117, 93, 122)) {
      if ((storeFileDrStatus == OPEN1 || storeFileDrStatus == OPEN2)) {
        print("No drawers are open.");
      } else {
        if (storeFileDrStatus == OPEN3) {
          if (has("cassette tape")) {
            print("This drawer is empty.");
          } else {
            print("Someone left an 80s mix tape in this drawer.");
          }
        } else {
          print("The drawers in the file cabinet are closed.");
        }
      }
    } else {
      [ is ego by desk?
      if (obj.in.box(ego, 94, 121, 112, 126)) {
        if (storeDeskDrStatus == OPEN) {
          print("This drawer is empty.");
        } else {
          print("It's not open.");
        }
      } else {
        [ is ego by bureau?
        if ((obj.in.box(ego, 107, 122, 117, 129) || 
             obj.in.box(ego, 108, 130, 120, 138))) {
          if (storeBureauDrStatus == OPEN) {
            print("This drawer is empty.");
          } else {
            print("It's not open.");
          }
        } else {
          print("What drawer?");
        }
      }
    }
  }
  if (said("look", "file cabinet")) {
    print("There are several old filing cabinets pushed against "
          "the back wall.");
  }
  if (said("open", "file cabinet", "drawer")) {
    [ is ego close enough?
    if (obj.in.box(ego, 73, 117, 93, 122)) {
     print("Which one?");
    } else {
      print("Move closer.");
    }
  }
  if ((said("open", "top", "file cabinet", "drawer") ||
       said("open", "file cabinet", "top", "drawer") ||
       said("open", "top", "drawer"))) {
    [ is ego close enough?
    if (obj.in.box(ego, 73, 117, 93, 122)) {
      goto(opentop);
    } else {
      print("Move closer.");
    }
  }
  if ((said("open", "middle", "file cabinet", "drawer") ||
       said("open", "file cabinet", "middle", "drawer") ||
       said("open", "middle", "drawer"))) {
    [ is ego close enough?
    if (obj.in.box(ego, 73, 117, 93, 122)) {
      goto(openmiddle);
    } else {
      print("Move closer.");
    }
  }
  if ((said("open", "bottom", "file cabinet", "drawer") ||
        said("open", "file cabinet", "bottom", "drawer") ||
        said("open", "bottom", "drawer"))) {
    [ is ego close enough?
    if (obj.in.box(ego, 73, 117, 93, 122)) {
      goto(openbottom);
    } else {
      print("Move closer.");
    }
  }
  if (said("close", "file cabinet", "drawer")) {
    [ is ego close enough?
    if (obj.in.box(ego, 73, 117, 93, 122)) {
      if (storeFileDrStatus == CLOSED) {
        print("No drawers are open.");
      } else {
        goto(closefiledrawer);
      }
    } else {
      print("Move closer.");
    }
  }
  if ((said("close", "top", "file cabinet", "drawer") ||
       said("close", "file cabinet", "top", "drawer") ||
       said("close", "top", "drawer"))) {
    [ is ego close enough?
    if (obj.in.box(ego, 73, 117, 93, 122)) {
      if (storeFileDrStatus == OPEN1) {
        goto(closefiledrawer);
      } else {
        print("It's not open.");
      }
    } else {
      print("Move closer.");
    }
  }
  if ((said("close", "middle", "file cabinet", "drawer") ||
       said("close", "file cabinet", "middle", "drawer") ||
       said("close", "middle", "drawer"))) {
    [ is ego close enough?
    if (obj.in.box(ego, 73, 117, 93, 122)) {
      if (storeFileDrStatus == OPEN2) {
        goto(closefiledrawer);
      } else {
        print("It's not open.");
      }
    } else {
      print("Move closer.");
    }
  }
  if ((said("close", "bottom", "file cabinet", "drawer") ||
        said("close", "file cabinet", "bottom", "drawer") ||
        said("close", "bottom", "drawer"))) {
    [ is ego close enough?
    if (obj.in.box(ego, 73, 117, 93, 122)) {
      if (storeFileDrStatus == OPEN3) {
        goto(closefiledrawer);
      } else {
        print("It's not open.");
      }
    } else {
      print("Move closer.");
    }
  }
  if (said("climb", "file cabinet")) {
    [ is ego by file cabinet?
    if (obj.in.box(ego, 73, 117, 93, 122)) {
      print("No, that's not a good idea.");
    } else {
      print("Move closer.");
    }
  }
  if ((said("move", "file cabinet") || said("push", "file cabinet"))) {
    [ is ego by file cabinet?
    if (obj.in.box(ego, 73, 117, 93, 122)) {
      print("It's too heavy. You can't move it.");
    } else {
      print("Move closer.");
    }
  }
  if ((said("look", "file cabinet", "drawer") || said("look", "in", "file cabinet", "drawer"))) {
    [ is ego close enough?
    if (obj.in.box(ego, 73, 117, 93, 122)) {
      if ((storeFileDrStatus == OPEN1 || storeFileDrStatus == OPEN2)) {
        print("This drawer is empty.");
      } else {
        if (storeFileDrStatus == OPEN3) {
          if (has("cassette tape")) {
            print("This drawer is empty.");
          } else {
            print("Someone left an 80s mix tape in this drawer.");
          }
        } else {
          print("The drawers in the file cabinet are closed.");
        }
      }
    } else {
      print("Move closer.");
    }
  }
  if ((said("look", "top", "file cabinet", "drawer") ||
       said("look", "file cabinet", "top", "drawer") ||
       said("look", "top", "drawer") ||
       said("look", "in", "top", "file cabinet", "drawer") ||
       said("look", "in", "file cabinet", "top", "drawer") ||
       said("look", "in", "top", "drawer"))) {
    [ is ego close enough?
    if (obj.in.box(ego, 73, 117, 93, 122)) {
      if (storeFileDrStatus == OPEN1) {
        print("This drawer is empty.");
      } else {
        print("It's not open.");
      }
    } else {
      print("Move closer.");
    }
  }
  if ((said("look", "middle", "file cabinet", "drawer") ||
       said("look", "file cabinet", "middle", "drawer") ||
       said("look", "middle", "drawer") ||
       said("look", "in", "middle", "file cabinet", "drawer") ||
       said("look", "in", "file cabinet", "middle", "drawer") ||
       said("look", "in", "middle", "drawer"))) {
    [ is ego close enough?
    if (obj.in.box(ego, 73, 117, 93, 122)) {
      if (storeFileDrStatus == OPEN2) {
        print("This drawer is empty.");
      } else {
        print("It's not open.");
      }
    } else {
      print("Move closer.");
    }
  }
  if ((said("look", "bottom", "file cabinet", "drawer") ||
       said("look", "file cabinet", "bottom", "drawer") ||
       said("look", "bottom", "drawer") ||
       said("look", "in", "bottom", "file cabinet", "drawer") ||
       said("look", "in", "file cabinet", "bottom", "drawer") ||
       said("look", "in", "bottom", "drawer"))) {
    [ is ego close enough?
    if (obj.in.box(ego, 73, 117, 93, 122)) {
      if (storeFileDrStatus == OPEN3) {
        if (has("cassette tape")) {
          print("This drawer is empty.");
        } else {
          print("Someone left an 80s mix tape in this drawer.");
        }
      } else {
        print("It's not open.");
      }
    } else {
      print("Move closer.");
    }
  }
  if (said("look", "cassette")) {
    [ if close enough, and drawer is open, and not taken yet
    if (has("cassette tape")) {
      [ let game functions logic handle it
      reset(haveMatch);
    } else {
      if (obj.in.box(ego, 73, 117, 93, 122) && storeFileDrStatus == OPEN3) {
        print("There is a mix tape in the bottom file cabinet drawer.");
      } else {
        print("You don't see that here.");
      }
    }
  }
  
  if (said("get", "cassette")) {
    if (has("cassette tape")) {
      print("You already have it.");
    } else {
      if (storeFileDrStatus == OPEN3) {
        [ if close enough
        if (obj.in.box(ego, 73, 117, 93, 122)) {
          goto(getcassette);
        } else {
          print("Move closer.");
        }
      } else {
        print("You don't see one of those here.");
      }
    }
  }
  if (said("look", "desk")) {
    print("This desk is of the same style as furniture found in King's "
          "Quest III.");
  }
  if (said("open", "desk", "drawer")) {
    goto(opendeskdrawer);
  }
  if (said("close", "desk", "drawer")) {
    [ is ego close to desk?
    if (obj.in.box(ego, 94, 121, 112, 126)) {
      if (storeDeskDrStatus == OPEN) {
        goto(closedeskdrawer);
      } else {
        print("It's not open.");
      }
    } else {
      print("Move closer.");
    }
  }
  if (said("climb", "desk")) {
    [ is ego close to desk?
    if (obj.in.box(ego, 94, 121, 112, 126)) {
      print("You don't need to climb on the desk.");
    } else {
      print("Move closer.");
    }
  }
  if ((said("look", "desk", "drawer") || said("look", "in", "desk", "drawer"))) {
    [ is ego close to desk?
    if (obj.in.box(ego, 94, 121, 112, 126)) {
      if (storeDeskDrStatus == OPEN) {
        print("This drawer is empty.");
      } else {
        print("It's not open.");
      }
    } else {
      print("Move closer.");
    }
 }

  if (said("look", "bureau")) {
    print("This bureau is of the same style as furniture found in "
          "King's Quest III. It has a single drawer.");
  }
  if (said("open", "bureau", "drawer")) {
    [ is ego by bureau?
    if ((obj.in.box(ego, 107, 122, 117, 129) || 
         obj.in.box(ego, 108, 130, 120, 138))) {
      if (storeBureauDrStatus == OPEN) {
        print("It's already open.");
      } else {
        goto(openbureaudrawer);
      }
    } else {
      print("Move closer");
    }
  }
  if (said("close", "bureau", "drawer")) {
    [ is ego by bureau?
    if ((obj.in.box(ego, 107, 122, 117, 129) || 
         obj.in.box(ego, 108, 130, 120, 138))) {
      if (storeBureauDrStatus == OPEN) {
        goto(closebureaudrawer);
      } else {
        print("It's not open.");
      }
    } else {
      print("Move closer.");
    }
  }
  if (said("climb", "bureau")) {
    [ is ego by bureau?
    if ((obj.in.box(ego, 107, 122, 117, 129) || 
         obj.in.box(ego, 108, 130, 120, 138))) {
      print("There is no reason for you to climb the bureau.");
    } else {
      print("Move closer.");
    }
  }
  if ((said("look", "bureau", "drawer") || said("look", "in", "bureau", "drawer"))) {
    [ is ego by bureau?
    if ((obj.in.box(ego, 107, 122, 117, 129) || 
         obj.in.box(ego, 108, 130, 120, 138))) {
      print("This drawer is empty.");
    } else {
      print("Move closer.");
    }
  }
  if ((said("put", "anyword", "in", "drawer") || 
       said("put", "anyword", "in", "anyword", "drawer") ||
       said("put", "anyword", "in", "anyword", "anyword", "drawer"))) {
    print("You should keep all your stuff. You've got plenty of room in your oversized pockets.");
  }

  if (said("look", "light")) {
    print("This overhead light bathes the entire room in a warm light.");
  }
  
  if (said("look", "mirror")) {
    print("There are two mirrors in this room. A large mirror "
          "hanging on the wall and a smaller one attached to the desk.");
  }
  if ((said("look", "in", "mirror") || said("use", "mirror"))) {
    [ near wall mirror?
    if (posn(ego, 7, 112, 87, 152)) {
      print("It looks like the magic mirror from King's Quest II. But there's "
            "nothing magic about this mirror. All you see is your own "
            "reflection in the dull, dusty surface.");
    } else {
      [ near desk mirror?
      if (posn(ego, 95, 113, 103, 164)) {
        print("The mirror is very dusty, but you can still see your handsome "
              "reflection in it.");
      } else {
        print("You don't have a good view of either mirror from here.");
      }
    }
  }
  if (said("look", "wall mirror")) {
    print("It looks like the magic mirror from King's Quest II.");
  }
  if (said("look", "desk mirror")) {
    print("The mirror on the desk is very dusty.");
  }
  if ((said("use", "desk mirror") || said("look", "in", "desk mirror"))) {
    [ near desk mirror?
    if (posn(ego, 95, 113, 103, 164)) {
      print("The desk mirror is very dusty, but you can still see your "
            "handsome reflection in it.");
    } else {
      print("You don't have a good view of the desk mirror from here.");
    }
  }
  if ((said("use", "wall mirror") || said("look", "in", "wall mirror"))) {
    if (posn(ego, 7, 112, 87, 152)) {
      print("It looks like the magic mirror from King's Quest II. But there's "
            "nothing magic about this mirror. All you see is your own "
            "reflection in the dull, dusty surface.");
    } else {
      print("You don't have a good view of the wall mirror from here.");
    }
  }
  if ((said("break", "mirror") || said("hit", "mirror") ||
       said("break", "desk mirror") || said("hit", "desk", "mirror") ||
       said("break", "wall", "mirror") || said("hit", "wall", "mirror"))) {
    print("That would give you seven years' of bad luck. You don't want that.");
  }
  if ((said("clean", "mirror") || said("clean", "desk mirror") ||
       said("clean", "wall", "mirror"))) {
    if ((posn(ego, 95, 113, 103, 128) || posn(ego, 7, 112, 87, 118))) {
      print("After giving the mirror a few swipes, you realize there's "
            "just too much dust to make much of a difference.");
    } else {
      print("Move closer.");
    }
  }

  if (said("look", "birdcage")) {
    print("You recognize this as the birdcage from King's Quest II.");
  }
  if (said("look", "bird")) {
    print("There is a birdcage, but not any birds here.");
  }
  if ((said("open", "birdcage") || said("get", "birdcage") || 
       said("look", "in", "birdcage"))) {
    print("It's way too high. You can't reach it.");
  }

  if (said("look", "basin")) {
    print("This is an antique water pitcher and wash basin, that would "
          "have been used in the days before indoor plumbing.");
  }
  if (said("look", "in", "basin")) {
    if (posn(ego, 103, 115, 119, 126)) {
      print("The pitcher and basin are empty and bone dry.");
    } else {
      print("Move closer.");
    }
  }
  if (said("get", "basin")) {
    if (posn(ego, 103, 115, 119, 126)) {
      print("The pitcher and basin are too big to carry around. Even "
            "for your giant oversized pockets.");
    } else {
      print("Move closer.");
    }
  }
  if (said("use", "basin")) {
    if (posn(ego, 103, 115, 119, 126)) {
      print("You have no need for the pitcher and basin.");
    } else {
      print("Move closer.");
    }
  }

  if (said("look", "cabinet")) {
    print("This cabinet is of the same style as furniture found in "
          "King's Quest III.");
  }
  if ((said("open", "cabinet") || said("open", "cabinet", "door"))) {
    if (vDoorState == OPEN) {
      print("It's already open.");
    } else {
      goto(opencabinet);
    }
  }
  if ((said("close", "cabinet") || said("close", "cabinet", "door"))) {
    if (vDoorState == OPEN) {
      [ if door is open, ego is close enough
      goto(closecabinet);
    } else {
      print("It's already closed.");
    }
  }
  if (said("get", "music")) {
    if (has("music sheet")) {
      print("You already have it.");
    } else {
      if (vDoorState == OPEN) {
        [ if door is open, ego is close enough
        goto(getmusic);
      } else {
        print("What music sheet?");
      }
    }
  }
  if (said("look", "music")) {
    if (has("music sheet")) {
      [ let game functions logic handle it
      reset(haveMatch);
    } else {
      if (vDoorState == OPEN) {
        [ if door is open, ego is close enough
        print("A piece of sheet music is in this cabinet.");
      } else {
        print("What music sheet?");
      }
    }
  }
  if (said("climb", "cabinet")) {
    if ((posn(ego, 120, 146, 132, 150) || posn(ego, 122, 151, 131, 156))) {
      print("There is no reason to climb on the cabinet.");
    } else {
      print("Move closer");
    }
  }

  if (said("look", "furniture")) {
    print("There is a LOT of old furniture pieces in this room. There is an old "
          "grandfather clock in one corner, next to a bookshelf. There are several "
          "file cabinets along the back wall.");
    print("A podium stands in front of the bookshelf. A wardrobe occupies the far "
          "corner of the room, blocked by a desk with an attached mirror.");
    print("A bureau with a single drawer and a small cabinet rest against the "
          "wall opposite the door. Near the middle of the room sits an old green "
          "overstuffed chair.");
  }

  if ((said("look", "wardrobe") || said("open", "wardrobe") || 
      said("close", "wardrobe") || said("get", "in", "wardrobe") || 
      said("use", "wardrobe"))) {
    print("The wardrobe is blocked by the desk. You can't reach it.");
  }

  if (said("look", "robots")) {
    print("These robot models look exactly like the Space Quest I robots.");
  }
  if ((said("get", "robots") || said("use", "robots"))) {
    print("The robots are just out of reach. You can't take them.");
  }
  if ((said("hit", "robots") || said("smash", "robots"))) {
    print("Even if you could reach them, it would make no sense to "
          "intentionally damage the robots.");
  }
  if (said("turn on", "robots")) {
    print("You can't reach them. Their batteries are most likely dead anyway.");
  }
  if (said("talk", "to", "robots")) {
    print("The robots have nothing to say. (Because they aren't even powered on.)");
  }
  
  if (said("look", "chest")) {
    goto(lookchest);
  }
  if (said("get", "chest")) {
  }
  if (said("open", "chest")) {
    if (storeChestStatus == CLOSED) {
      goto(openchest);
    } else {
      print("It's already open.");
    }
  }
  if (said("close", "chest")) {
    if (storeChestStatus == OPEN) {
      goto(closechest);
    } else {
      print("It's already closed.");
    }
  }
  if (said("put", "anyword", "in", "chest")) {
    [ is ego close to chest?
    if (obj.in.box(ego, 111, 147, 138, 166)) {
      if (storeChestStatus == OPEN) {
        print("You should keep your stuff. You might forget to come "
              "back for it if you left it in the chest.");
      } else {
        print("How can you do that when it's closed?.");
      }
    } else {
      print("Move closer.");
    }
  }
  if (said("look", "in", "chest")) {
    if (storeChestStatus == OPEN) {
      goto(closechest);
    } else {
      print("It's closed.");
    }
  }
  if (said("move", "chest")) {
    print("It's too heavy. You can't move it.");
  }
  if (said("look", "scroll")) {
    if (has("scroll")) {
      [ let game functions logic handle it
      reset(haveMatch);
    } else {
      if (storeChestStatus == OPEN && obj.in.box(ego, 111, 147, 138, 166)) {
        print("There is a rolled up scroll in the treasure chest.");
      } else {
        print("You don't see a scroll here.");
      }
    }
  }
  if (said("get", "scroll")) {
    if (has("scroll")) {
      print("You already have it.");
    } else {
      if (storeChestStatus == OPEN && obj.in.box(ego, 111, 147, 138, 166)) {
        goto(getscroll);
      } else {
        print("You don't see a scroll here.");
      }
    }
  }
  
  if (said("look", "chair")) {
    print("This comfy chair would be great to sit in while reading your "
          "favorite fairy tale stories.");
  }
  if ((said("get", "chair") || said("move", "chair"))) {
    print("The chair is much to big for you to pick up or move.");
  }
  if (said("sit", "in", "chair")) {
     if (posn(ego, 71, 142, 100, 156)) {
      print("While it does look like a nice place for a short rest, you "
            "really should keep moving.");
    } else {
      print("Move closer.");
    }
 }
  if (said("climb", "chair")) {
     if (posn(ego, 71, 142, 100, 156)) {
      print("There is no reason to climb on the chair.");
    } else {
      print("Move closer.");
    }
 }

  if (said("look", "arcade")) {
    print("This arcade must be the model for the one in Space Quest I.");
  }
  if (said("move", "arcade")) {
    if (posn(ego, 56, 140, 66, 156)) {
      print("It's much too heavy for you to move it.");
    } else {
      print("Move closer.");
    }
  }
  if (said("climb", "arcade")) {
    if (posn(ego, 56, 140, 66, 156)) {
      print("There is no reason for you to climb on the arcade.");
    } else {
      print("Move closer.");
    }
  }
  if (said("play", "arcade")) {
    if (posn(ego, 56, 140, 66, 156)) {
      print("It's not plugged in. There's nothing you can do with "
            "the arcade.");
    } else {
      print("Move closer.");
    }
  }

  if (said("look", "coat hanger")) {
    print("You've seen this bizarre looking coat hanger before, in "
          "King's Quest II.");
  }
  if (said("get", "coat hanger")) {
    if (posn(ego, 19, 135, 28, 147)) {
      print("The coat rack is just outside of your reach.");
    } else {
      print("Move closer.");
    }
  }
  if ((said("put", "anyword", "on", "coat hanger") ||
       said("hang", "anyword", "on", "coat hanger") ||
       said("use", "coat hanger"))) {
    if (posn(ego, 19, 135, 28, 147)) {
      print("There is nothing you need to do with the coat hanger. "
            " It's too high to reach anyway.");
    } else {
      print("Move closer.");
    }
  }

  if (said("look", "banner")) {
    print("A copy of this banner can be found in King's Quest III.");
  }
  if (said("get", "banner")) {
    if (posn(ego, 108, 120, 136, 141)) {
      print("The banner is just out of reach.");
    } else {
      print("Move closer.");
    }
  }

  if (said("look", "boxes")) {
    print("There are unmarked boxes of all shapes and sizes all "
          "along the near wall.");
  }
  if ((said("look", "in", "boxes") || said("open", "boxes"))) {
    if (posn(ego, 10, 154, 119, 167)) {
      print("The boxes are all taped securely shut. You have no "
            "way to open them.");
    } else {
      print("Move closer.");
    }
  }
  if (said("get", "boxes")) {
    if (posn(ego, 10, 154, 119, 167)) {
      print("The boxes are too big for you to carry around.");
    } else {
      print("Move closer.");
    }
  }
  if (said("move", "boxes")) {
    if (posn(ego, 10, 154, 119, 167)) {
      print("There is no reason to move any of the boxes.");
    } else {
      print("Move closer.");
    }
  }
  if ((said("turn", "on", "light") || said("turn", "off", "light"))) {
    print("Given how messed up the electrical systems are in this part "
          "of the building, you decide it's best not to mess with the "
          "lights.");
  }
}

[***************************************
[ MOUSE INPUT
[***************************************
[ if cursor is look/talk/use and left-click and NOT 
[ clicking on the actual toolbar, check for clicks
[ on in-game items
if (cursoricon > C_WALK && cursoricon < C_WAIT && 
    controller(cLeftClick) &&
    (mouseX < 14 || mouseX > 145 || mouseY > 17)) {
  [ ignore borders
  if ((mouseX < 10 || mouseX > 149 || mouseY < 17 || mouseY > 159)) {
    goto(doneclick);
  }
  [ look
  if (cursormode == C_LOOK) {
    [ ego
    if (posn(ego, ON.OBJ, OBJ_VISIBLE, &mouseX, &mouseY)) {
      print("You see you.");
      goto(doneclick);
    }
    
    [ moose 1
    if (mouseX > 11 && mouseX < 32 && mouseY > 29 && mouseY < 61) {
      [ check pixel color
      block(GET.PIXEL, &mouseX, &mouseY, &work1); [ get.pixel(vX, vY, vRESULT)
      if (work1 != 67) { [67=cyan vis/red pri
        print("This is the moosehead from Leisure Suit Larry.");
      }
      goto(doneclick);
    }
    
    [ moose 2
    if (mouseX > 17 && mouseX < 33 && mouseY > 65 && mouseY < 80) {
      [ check pixel color
      block(GET.PIXEL, &mouseX, &mouseY, &work1); [ get.pixel(vX, vY, vRESULT)
      if (work1 != 67) { [67=cyan vis/red pri
        print("You have seen this moosehead in King's Quest II.");
      }
      goto(doneclick);
    }
    
    [ moose 3
    if (mouseX > 40 && mouseX < 74 && mouseY > 34 && mouseY < 53) {
      set(fCheckClick);
    }
    if (mouseX > 49 && mouseX < 66 && mouseY > 52 && mouseY < 64) {
      set(fCheckClick);
    }
    if (fCheckClick) {
      reset(fCheckClick);
      [ check pixel color
      block(GET.PIXEL, &mouseX, &mouseY, &work1); [ get.pixel(vX, vY, vRESULT)
      if (work1 != 67) { [67=cyan vis/red pri
        print("This massive moosehead looks just like the one in "
              "King's Quest III.");
      }
      goto(doneclick);
    }
    
    [ clock
    if (mouseX > 35 && mouseX < 48 && mouseY > 62 && mouseY < 121) {
      :lookclock
      print("The clock in Mixed Up Mother Goose was modeled after "
            "this grandfather clock.");
      block(GET.TIME, &work1, &work2, &work3); [ get.time(vHOUR, vMINUTE, vSECOND)
      s12 = "AM";
      if (work1 > 11) {
        work1 -= 12;
        s12 = "PM";
      }
      if (work1 == 0) {
        work1 += 12;
      }
      print("The time is %v46:%v47|2:%v48|2 %s12. Isn't it odd that "
            "this clock matches your current time?");
      goto(doneclick);
    }
    [ podium
    if (mouseX > 60 && mouseX < 72 && mouseY > 98 && mouseY < 121) {
      :lookpodium
      print("It's the podium from the Police Quest I briefing room. "
            "You can imagine Sierra managers standing behind it giving "
            "briefings to project staff.");
      if (posn(ego, 58, 112, 74, 119)) {
        if (!has("PQ idea list")) {
          print("There is a sheet of paper on top of the podium. It looks "
                "like a list of potential game titles for Police Quest II.");
        }
        [ show the closeup
        call(lgc.Podium);
        call(lgc.RedrawRoom);
      }
      goto(doneclick);
    }
    [ desk lamp
    if (mouseX > 68 && mouseX < 79 && mouseY > 71 && mouseY < 85) {
      print("This old desk lamp doesn't look like anything special.");
      goto(doneclick);
    }
    [ bookshelf
    if (mouseX > 49 && mouseX < 68 && mouseY > 63 && mouseY < 112) {
      print("The empty bookshelf is covered in dust. It probably once "
            "held computer hardware and software manuals used by Sierra "
            "developers.");
      goto(doneclick);
    }
    [ open file cabinet drawer
    if (posn(oFileDrawer, -1, 1, &mouseX, &mouseY)) {
      if ((storeFileDrStatus == OPEN1 || storeFileDrStatus == OPEN2)) {
        print("This drawer is empty.");
        goto(doneclick);
      } else {
        if (storeFileDrStatus == OPEN3) {
          if (has("cassette tape")) {
            print("This drawer is empty.");
          } else {
            print("Someone left an 80s mix tape in this drawer.");
          }
          goto(doneclick);
        }
      }
    }
    [ file cabinets
    if (mouseX > 68 && mouseX < 93 && mouseY > 79 && mouseY < 115) {
      print("There are several old filing cabinets pushed against "
            "the back wall.");
      goto(doneclick);
    }
    [ overhead light
    if (mouseX > 71 && mouseX < 81 && mouseY > 57 && mouseY < 64) {
      print("This overhead light bathes the entire room in a warm light.");
      goto(doneclick);
    }
    [ wall mirror
    if (mouseX > 78 && mouseX < 93 && mouseY > 45 && mouseY < 76) {
      print("It looks like the magic mirror from King's Quest II.");
      goto(doneclick);
    }
    
    [ open desk drawer
    if (posn(oDeskDrawer, -1, 1, &mouseX, &mouseY)) {
      if (storeDeskDrStatus == OPEN) {
        print("This drawer is empty.");
        goto(doneclick);
      }
    }
    [ desk
    if (mouseX > 93 && mouseX < 113 && mouseY > 96 && mouseY < 115) {
      print("This desk is of the same style as furniture found in King's "
            "Quest III.");
      goto(doneclick);
    }
    [  
    if (mouseX > 108 && mouseX < 116 && mouseY > 33 && mouseY < 52) {
      [ check pixel color
      block(GET.PIXEL, &mouseX, &mouseY, &work1); [ get.pixel(vX, vY, vRESULT)
      if ((work1 == 69 || work1 == 77)) { [69/77=magenta/lt magenta vis & red pri)
        print("You recognize this as the birdcage from King's Quest II.");
      }
      goto(doneclick);
    }
    [ desk mirror
    if (mouseX > 98 && mouseX < 108 && mouseY > 64 && mouseY < 96) {
      print("The mirror on the desk is very dusty.");
      goto(doneclick);
    }
    [ pitcher and basin
    if (mouseX > 117 && mouseX < 128 && mouseY > 91 && mouseY < 106) {
      print("This is an antique water pitcher and wash basin, that would "
            "have been used in the days before indoor plumbing.");
      goto(doneclick);
    }
    [ banner
    if (mouseX > 121 && mouseX < 140 && mouseY > 46 && mouseY < 115) {
      print("A copy of this banner can be found in King's Quest III.");
      goto(doneclick);
    }
    
    [ cabinet doors open
    if (posn(oCabinetDoor, -1, 1, &mouseX, &mouseY)) {
      if (vDoorState == OPEN) {
        if (has("music sheet")) {
          print("The cabinet is empty.");
        } else {
          print("A piece of sheet music is in this cabinet.");
        }
        goto(doneclick);
      }
    }
    [ cabinet
    if (mouseX > 128 && mouseX < 147 && mouseY > 115 && mouseY < 156) {
      [ check pixel color
      block(GET.PIXEL, &mouseX, &mouseY, &work1); [ get.pixel(vX, vY, vRESULT)
      block(BIT.AND, BYNUM, &work1, 15); [ bit.and(FN_MODE, VAR, MASK)
      if ((work1 == LT_RED || work1 == BROWN || work1 == YELLOW)) {
        print("This cabinet is of the same style as furniture found in "
              "King's Quest III.");
        goto(doneclick);
      }
    }
    
    [ bureau drawer open
    if (posn(oBureauDrawer, -1, 1, &mouseX, &mouseY)) {
      if (storeBureauDrStatus == OPEN) {
        print("This drawer is empty.");
        goto(doneclick);
      }
    }
    [ bureau
    if (mouseX > 113 && mouseX < 136 && mouseY > 99 && mouseY < 140) {
      [ check pixel color
      block(GET.PIXEL, &mouseX, &mouseY, &work1); [ get.pixel(vX, vY, vRESULT)
      block(BIT.AND, BYNUM, &work1, 15); [ bit.and(FN_MODE, VAR, MASK)
      if ((work1 == LT_RED || work1 == BROWN || work1 == YELLOW)) {
        print("This bureau is of the same style as furniture found in "
              "King's Quest III. It has a single drawer.");
        goto(doneclick);
      }
    }
    [ wardrobe
    if (mouseX > 95 && mouseX < 120 && mouseY > 48 && mouseY < 111) {
      print("This wardrobe is of the same style as furniture found in "
            "King's Quest III.");
      goto(doneclick);
    }
    [ robots
    if (mouseX > 135 && mouseX < 147 && mouseY > 132 && mouseY < 160) {
      print("These robot models look exactly like the Space Quest I robots.");
      goto(doneclick);
    }
    [ treasure chest
    if (posn(oChest, -1, 1, &mouseX, &mouseY)) {
      :lookchest
      if (storeChestStatus == OPEN) {
        if (has("scroll")) {
          print("The treasure chest has nothing else in it.");
        } else {
          print("There is an old parchment scroll in the treasure chest.");
        }
      } else {
        print("In King's Quest II, a treasure chest just like this one had "
              "some awesome treasure in it. What might be in this one?");
      }  
      goto(doneclick); 
    }
    
    [ chair
    if (mouseX > 77 && mouseX < 96 && mouseY > 126 && mouseY < 154) {
      [ check pixel color
      block(GET.PIXEL, &mouseX, &mouseY, &work1); [ get.pixel(vX, vY, vRESULT)
      work1 /= 16; [ get priority color only
      if ((work1 == LT_MAGENTA || work1 == BLACK)) {
        print("This comfy chair would be great to sit in while reading your "
              "favorite fairy tale stories.");
        goto(doneclick);
      }
    }
    
    [ arcade
    if (mouseX > 53 && mouseX < 63 && mouseY > 125 && mouseY < 150) {
      [ check pixel color
      block(GET.PIXEL, &mouseX, &mouseY, &work1); [ get.pixel(vX, vY, vRESULT)
      block(BIT.AND, BYNUM, &work1, 15); [ bit.and(FN_MODE, VAR, MASK)
      if ((work1 == BLACK || work1 == BLUE || work1 == LT_BLUE)) {
        print("This arcade must be the model for the one in Space Quest I.");
        goto(doneclick);
      }
    }
    [ coffin
    if (mouseX > 27 && mouseX < 53 && mouseY > 142 && mouseY < 156) {
      set(fCheckClick);
    }
    if (posn(oCoffin, -1, 1, &mouseX, &mouseY)) {
      set(fCheckClick);
    }
    if (fCheckClick) {
      reset(fCheckClick);
      if (vCoffinState == OPEN) {
        print("The coffin is empty except for a silk pillow and a padded "
              "lining. It actually looks quite comfortable.");
        [ if on pillow, show it
        if (mouseX > 27 && mouseX < 52 && mouseY > 144 && mouseY < 148) {
          :lookpillow
          call(lgc.Pillow);
          call(lgc.RedrawRoom);
        }
      } else {
        print("It's Count Dracula's coffin from King's Quest II. Hopefully "
              "no body is in there.");
      }
      goto(doneclick);
    }
    [ coat hanger
    if (mouseX > 14 && mouseX < 24 && mouseY > 90 && mouseY < 126) {
      print("You've seen this bizarre looking coat hanger before, in "
            "King's Quest II.");
      goto(doneclick);
    }
    [ boxes
    if (mouseX > 9 && mouseX < 30 && mouseY > 126 && mouseY < 159) {
      set(fCheckClick);
    }
    if (mouseX > 53 && mouseX < 62 && mouseY > 150 && mouseY < 160) {
      set(fCheckClick);
    }
    if (mouseX > 69 && mouseX < 81 && mouseY > 146 && mouseY < 160) {
      set(fCheckClick);
    }
    if (mouseX > 90 && mouseX < 103 && mouseY > 152 && mouseY < 160) {
      set(fCheckClick);
    }
    if (mouseX > 104 && mouseX < 116 && mouseY > 143 && mouseY < 161) {
      set(fCheckClick);
    }
    if (fCheckClick) {
      reset(fCheckClick);
      print("There are unmarked boxes of all shapes and sizes all "
            "along the near wall.");
      goto(doneclick);
    }
    
    [ anything else is the whole room
    print("This room is full of things that look like items from "
          "classic Sierra AGI games.");
    goto(doneclick);
  }
  
  [ talk
  if (cursormode == C_TALK) {
    [ ego
    if (posn(ego, ON.OBJ, OBJ_VISIBLE, &mouseX, &mouseY)) {
      print("You have nothing to say.");
      goto(doneclick);
    }

    [ moose 1
    if (mouseX > 11 && mouseX < 32 && mouseY > 29 && mouseY < 61) {
      [ check pixel color
      block(GET.PIXEL, &mouseX, &mouseY, &work1); [ get.pixel(vX, vY, vRESULT)
      if (work1 != 67) { [67=cyan vis/red pri
        print("Dead moose tell no tales.");
      }
      goto(doneclick);
    }
    
    [ moose 2
    if (mouseX > 17 && mouseX < 33 && mouseY > 65 && mouseY < 80) {
      [ check pixel color
      block(GET.PIXEL, &mouseX, &mouseY, &work1); [ get.pixel(vX, vY, vRESULT)
      if (work1 != 67) { [67=cyan vis/red pri
        print("Dead moose tell no tales.");
      }
      goto(doneclick);
    }
    
    [ moose 3
    if (mouseX > 40 && mouseX < 74 && mouseY > 34 && mouseY < 53) {
      set(fCheckClick);
    }
    if (mouseX > 49 && mouseX < 66 && mouseY > 52 && mouseY < 64) {
      set(fCheckClick);
    }
    if (fCheckClick) {
      reset(fCheckClick);
      [ check pixel color
      block(GET.PIXEL, &mouseX, &mouseY, &work1); [ get.pixel(vX, vY, vRESULT)
      if (work1 != 67) { [67=cyan vis/red pri
        print("Dead moose tell no tales.");
      }
      goto(doneclick);
    }
    if (mouseX > 135 && mouseX < 147 && mouseY > 132 && mouseY < 160) {
      print("The robots have nothing to say. (Because they aren't even powered on.)");
      goto(doneclick);
    }
    [ if not handled, then give generic reply
    print("There is no one here to talk to.");
    goto(doneclick);
  }
  
  [ use
  if (cursormode == C_USE) {
    [ ego
    if (posn(ego, ON.OBJ, OBJ_VISIBLE, &mouseX, &mouseY)) {
      print("Please don't touch yourself. Not even when you're alone.");
      goto(doneclick);
    }
    
    [ moose 1 - always out of reach
    if (mouseX > 11 && mouseX < 32 && mouseY > 29 && mouseY < 61) {
      [ check pixel color
      block(GET.PIXEL, &mouseX, &mouseY, &work1); [ get.pixel(vX, vY, vRESULT)
      if (work1 != 67) { [67=cyan vis/red pri
        print("The moose head is too high for you to reach it.");
      }
      goto(doneclick);
    }
    
    [ moose 2 - always out of reach
    if (mouseX > 17 && mouseX < 33 && mouseY > 64 && mouseY < 80) {
      [ check pixel color
      block(GET.PIXEL, &mouseX, &mouseY, &work1); [ get.pixel(vX, vY, vRESULT)
      if (work1 != 67) { [67=cyan vis/red pri
        print("The moose head is too high for you to reach it.");
      }
      goto(doneclick);
    }
    
    [ moose 3 - always out of reach
    if (mouseX > 40 && mouseX < 74 && mouseY > 34 && mouseY < 53) {
      set(fCheckClick);
    }
    if (mouseX > 49 && mouseX < 66 && mouseY > 52 && mouseY < 64) {
      set(fCheckClick);
    }
    if (fCheckClick) {
      reset(fCheckClick);
      [ check pixel color
      block(GET.PIXEL, &mouseX, &mouseY, &work1); [ get.pixel(vX, vY, vRESULT)
      if (work1 != 67) { [67=cyan vis/red pri
        print("The moose head is too high for you to reach it.");
      }
      goto(doneclick);
    }
        
    [ clock
    if (mouseX > 35 && mouseX < 48 && mouseY > 62 && mouseY < 121) {
      if (posn(ego, 32, 109, 52, 127)) {
        print("The glass door on the clock is locked. You can't open it.");
      } else {
        print("Move closer.");
      }
     goto(doneclick);
    }
    
    [ podium
    if (mouseX > 60 && mouseX < 72 && mouseY > 98 && mouseY < 121) {
      if (posn(ego, 58, 112, 74, 119)) {
        [ behind of podium
        if (!has("PQ idea list")) {
          [ play sound if walkman not active and no chimes
          if ((currentTrack == 0 || currentTrack > 128) && !clockChiming) {
            call(lgc.SetSound);
            sound(s.GetItem, soundDone);
          }
          get("PQ idea list");
          print("You grab the paper from the top of the podium.");
          work1 = 3;
          call(lgc.ScoreHandler);
        } else {
          print("There is nothing else to take from the podium.");
        }
      } else {
        if (posn(ego, 52, 117, 75, 125)) {
          [ in front of podium
          print("There is nothing you can do with front of the podium.");
        } else {
          print("Move closer.");
        }
      }
      goto(doneclick);
    }

    [ desk lamp
    if (mouseX > 68 && mouseX < 79 && mouseY > 71 && mouseY < 85) {
      if (posn(ego, 62, 102, 80, 114)) {
        print("You have no use for the lamp.");
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }
    
    [ bookshelf
    if (mouseX > 49 && mouseX < 68 && mouseY > 63 && mouseY < 112) {
      if (posn(ego, 44, 106, 70, 116)) {
        print("You run your fingers through the dust on the shelves. "
              "There is nothing of interest here.");
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }
    
    [ top file cabinet drawer, closed  76, 89, 83, 95
    if (mouseX > 75 && mouseX < 84 && mouseY > 88 && mouseY < 96) {
      [ is ego close enough?
      if (obj.in.box(ego, 73, 117, 93, 122)) {
        :opentop
        if (storeFileDrStatus == CLOSED) {
          position(oFileDrawer, 76, 100);
          set.loop(oFileDrawer, 3);
          set.cel(oFileDrawer, 0);
          draw(oFileDrawer);
          end.of.loop(oFileDrawer, fFileDrawer);
          storeFileDrStatus = OPENING;
          [ play sound if walkman not active and no chimes
          if ((currentTrack == 0 || currentTrack > 128) && !clockChiming) {
            call(lgc.SetSound);
            sound(s.OpenDrawer, soundDone);
          }
        } else {
          if (storeFileDrStatus == OPEN1) {
            [ only provide message if not a mouse click
            if (!controller(cLeftClick)) {
              print("It's already open.");
            } else {
             [ check for click on drawer
             goto(checkdrawerclick);
            }
          } else {
            print("It's not safe to open more than one drawer at a time.");
          }
        }
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }
      
    [ middle file cabinet drawer, closed 76, 98, 83, 105
    if (mouseX > 75 && mouseX < 84 && mouseY > 97 && mouseY < 106) {
      [ is ego close enough?
      if (obj.in.box(ego, 73, 117, 93, 122)) {
        :openmiddle
        if (storeFileDrStatus == CLOSED) {
          position(oFileDrawer, 76, 109);
          set.loop(oFileDrawer, 3);
          set.cel(oFileDrawer, 0);
          draw(oFileDrawer);
          end.of.loop(oFileDrawer, fFileDrawer);
          storeFileDrStatus = OPENING;
          [ play sound if walkman not active and no chimes
          if ((currentTrack == 0 || currentTrack > 128) && !clockChiming) {
            call(lgc.SetSound);
            sound(s.OpenDrawer, soundDone);
          }
        } else {
          if (storeFileDrStatus == OPEN2) {
            [ only provide message if not a mouse click
            if (!controller(cLeftClick)) {
              print("It's already open.");
            } else {
             [ check for click on drawer
             goto(checkdrawerclick);
            }
          } else {
            print("It's not safe to open more than one drawer at a time.");
          }
        }
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }
    
    [ bottom file cabinet drawer, closed 76, 107, 83, 114
    if (mouseX > 75 && mouseX < 84 && mouseY > 106 && mouseY < 115) {
      [ is ego close enough?
      if (obj.in.box(ego, 73, 117, 93, 122)) {
        :openbottom
        if (storeFileDrStatus == CLOSED) {
          position(oFileDrawer, 76, 118);
          set.loop(oFileDrawer, 3);
          set.cel(oFileDrawer, 0);
          draw(oFileDrawer);
          end.of.loop(oFileDrawer, fFileDrawer);
          storeFileDrStatus = OPENING;
          [ play sound if walkman not active and no chimes
          if ((currentTrack == 0 || currentTrack > 128) && !clockChiming) {
            call(lgc.SetSound);
            sound(s.OpenDrawer, soundDone);
          }
        } else {
          if (storeFileDrStatus == OPEN3) {
            [ only provide message if not a mouse click
            if (!controller(cLeftClick)) {
              print("It's already open.");
            } else {
             [ check for click on drawer
             goto(checkdrawerclick);
            }
          } else {
            print("It's not safe to open more than one drawer at a time.");
          }
        }
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }
    
    :checkdrawerclick
    [ file cabinet drawer, when drawer is open 
    if (posn(oFileDrawer, ON.OBJ, 0, &mouseX, &mouseY) && 
        storeFileDrStatus != CLOSING) {
      [ is ego close enough?
      if (obj.in.box(ego, 73, 117, 93, 122)) {
        [ contents check
        if (storeFileDrStatus== OPEN1 && mouseY < 93) {
          [ skip if clicking in drawer; it's empty
          goto(doneclick);
        }
        if (storeFileDrStatus== OPEN2 && mouseY < 102) {
          [ skip if clicking in drawer; it's empty
          goto(doneclick);
        }
        if (storeFileDrStatus== OPEN3 && mouseY < 111) {
          if (!has("cassette tape")) {
            :getcassette
            [ play sound if walkman not active and no chimes
            if ((currentTrack == 0 || currentTrack > 128) && !clockChiming) {
              call(lgc.SetSound);
              sound(s.GetItem, soundDone);
            }
            get("cassette tape");
            work1 = 4;
            call(lgc.ScoreHandler);
            print("You take the mix tape, wondering what might be on it.");
            set.loop(oFileDrawer, 3);
            set.cel(oFileDrawer, 2);
            force.update(oFileDrawer);      
          }
          [ if clicking in drawer, nothing else to do
          goto(doneclick);
        }
        :closefiledrawer
        set.loop(oFileDrawer, 3);
        set.cel(oFileDrawer, 2);
        reverse.loop(oFileDrawer, fFileDrawer);
        storeFileDrStatus= CLOSING;
        [ play sound if walkman not active and no chimes
        if ((currentTrack == 0 || currentTrack > 128) && !clockChiming) {
          call(lgc.SetSound);
          sound(s.CloseDrawer, soundDone);
        }
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }

    [ blocked file cabinets
    if (mouseX > 69 && mouseX < 75 && mouseY > 85 && mouseY < 99) {
      set(fCheckClick);
    }
    if (mouseX > 84 && mouseX < 93 && mouseY > 83 && mouseY < 113) {
      set(fCheckClick);
    }
    if (fCheckClick) {
      reset(fCheckClick);
      if (posn(ego, 77, 110, 96, 119)) {
        print("You can't open the drawers in these cabinets. They are "
              "blocked by the file cabinet in the front.");
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }
    
    [ overhead light - always out of reach
    if (mouseX > 71 && mouseX < 81 && mouseY > 57 && mouseY < 64) {
      print("The light is way beyond your reach.");
      goto(doneclick);
    }

    [ wall mirror - always beyond reach
    if (mouseX > 78 && mouseX < 93 && mouseY > 45 && mouseY < 76) {
      print("The wall mirror is too high to reach.");
      goto(doneclick);
    }
    
    [ desk drawer when closed 100, 102, 106, 108
    if (mouseX > 99 && mouseX < 107 && mouseY > 101 && mouseY < 109 &&
        storeDeskDrStatus == CLOSED) {
      :opendeskdrawer
      [ is ego close to desk?
      if (obj.in.box(ego, 94, 121, 112, 126)) {
        set.loop(oDeskDrawer, 5);
        set.cel(oDeskDrawer, 0);
        draw(oDeskDrawer);
        end.of.loop(oDeskDrawer, fDeskDrawer);
        storeDeskDrStatus = OPENING;
        [ play sound if walkman not active and no chimes
        if ((currentTrack == 0 || currentTrack > 128) && !clockChiming) {
          call(lgc.SetSound);
          sound(s.OpenDrawer, soundDone);
        }
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }
    
    [ desk drawer when open
    if (posn(oDeskDrawer, ON.OBJ, OBJ_FRAME, &mouseX, &mouseY) && 
        storeDeskDrStatus != CLOSING) {
      [ is ego close enough?
      if (obj.in.box(ego, 94, 121, 112, 126)) {
        [ contents check
        if (storeFileDrStatus== OPEN && mouseY < 111) {
          [ nothing in this drawer
          goto(doneclick);
        }
        :closedeskdrawer
        set.loop(oDeskDrawer, 5);
        set.cel(oDeskDrawer, 4);
        reverse.loop(oDeskDrawer, fDeskDrawer);
        storeDeskDrStatus= CLOSING;
        [ play sound if walkman not active and no chimes
        if ((currentTrack == 0 || currentTrack > 128) && !clockChiming) {
          call(lgc.SetSound);
          sound(s.CloseDrawer, soundDone);
        }
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }
    
    [ birdcage - always out of reach
    if (mouseX > 108 && mouseX < 116 && mouseY > 33 && mouseY < 52) {
      [ check pixel color
      block(GET.PIXEL, &mouseX, &mouseY, &work1); [ get.pixel(vX, vY, vRESULT)
      if ((work1 == 69 || work1 == 77)) { [69/77=magenta/lt magenta vis & red pri)
        print("The bird cage is too high to reach.");
      }
      goto(doneclick);
    }

    [ desk mirror
    if (mouseX > 98 && mouseX < 108 && mouseY > 64 && mouseY < 96) {
      if (posn(ego, 93, 114, 113, 124)) {
        print("After touching the mirror, all you did was leave behind "
              "some smudged fingerprints.");
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }

    [ pitcher and basin
    if (mouseX > 117 && mouseX < 128 && mouseY > 91 && mouseY < 106) {
      if (posn(ego, 103, 115, 119, 126)) {
        print("You have no need for the pitcher and basin.");
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }

    [ banner - always out of reach
    if (mouseX > 121 && mouseX < 140 && mouseY > 46 && mouseY < 115) {
      if (posn(ego, 108, 120, 136, 141)) {
        print("The banner is just out of reach.");
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }
    
    [ cabinet door (when closed)
    if ((vDoorState == CLOSED || vDoorState == CLOSING)) {
      if (mouseX > 129 && mouseX < 133 && mouseY > 118 && mouseY < 143) {
        set(fCheckClick);
      }
      if (mouseX > 132 && mouseX < 137 && mouseY > 122 && mouseY < 147) {
        set(fCheckClick);
      }
      if (fCheckClick) {
        reset(fCheckClick);
        :opencabinet
        [ is ego close to cabinet?
        if ((posn(ego, 120, 146, 132, 150) || posn(ego, 122, 151, 131, 156))) {
          [ if closed
          if (vDoorState == CLOSED) {
            [ animate it first
            if (has("music sheet")) {
              set.loop(oCabinetDoor, 6);
            } else {
              set.loop(oCabinetDoor, 12);
            }
            set.cel(oCabinetDoor, 0);
            position(oCabinetDoor, 125, 149);
            set.priority(oCabinetDoor, 13);
            draw(oCabinetDoor);
          }
          end.of.loop(oCabinetDoor, fDoor);
          vDoorState = OPENING;
          [ play sound if walkman not active and no chimes
          if ((currentTrack == 0 || currentTrack > 128) && !clockChiming) {
            call(lgc.SetSound);
            sound(s.OpenDrawer, soundDone);
          }
        } else {
          print("Move closer.");
        }
        goto(doneclick);
      }
    }

    [ cabinet door (when opened)
    if ((vDoorState == OPEN || vDoorState == OPENING)) {
      [ item check
      if (vDoorState == OPEN && mouseX > 129 && mouseX < 134 && mouseY > 120 && mouseY < 143) {
        :getmusic
        if (!has("music sheet")) {
          [ play sound if walkman not active and no chimes
          if ((currentTrack == 0 || currentTrack > 128) && !clockChiming) {
            call(lgc.SetSound);
            sound(s.GetItem, soundDone);
          }
          get("music sheet");
          print("You take the sheet from the cabinet.");
          [ + 3 points
          work1 = 3;
          call(lgc.ScoreHandler);
          [ remove it from screen
          set.loop(oCabinetDoor, 6);
        }
        goto(doneclick);
      }
      if (mouseX > 124 && mouseX < 130 && mouseY > 118 && mouseY < 137) {
        set(fCheckClick);
      }
      if (mouseX > 133 && mouseX < 137 && mouseY > 126 && mouseY < 150) {
        set(fCheckClick);
      }
      if (fCheckClick) {
        reset(fCheckClick);
        :closecabinet
        [ if open, ego must be close enough, so just close it without further checks
        reverse.loop(oCabinetDoor, fDoor);
        [ play sound if walkman not active and no chimes
        if ((currentTrack == 0 || currentTrack > 128) && !clockChiming) {
          call(lgc.SetSound);
          sound(s.CloseDrawer, soundDone);
        }
        goto(doneclick);
      }
    }
    
    [ bureau drawer when closed 115, 110, 118, 126 and 119, 116, 122, 131
    if (storeBureauDrStatus == CLOSED) {
      if (mouseX > 114 && mouseX < 119 && mouseY > 109 && mouseY < 127) {
        set(fCheckClick);
      }
      if (mouseX > 118 && mouseX < 123 && mouseY > 115 && mouseY < 132) {
        set(fCheckClick);
      }
      if (fCheckClick) {
        reset(fCheckClick);
        [ is ego close enough?
        if ((obj.in.box(ego, 107, 122, 117, 129) || 
             obj.in.box(ego, 108, 130, 120, 138))) {
          :openbureaudrawer
          position(oBureauDrawer, 109, 129);
          set.loop(oBureauDrawer, 4);
          set.cel(oBureauDrawer, 0);
          draw(oBureauDrawer);
          end.of.loop(oBureauDrawer, fBureauDrawer);
          storeBureauDrStatus = OPENING;
          [ play sound if walkman not active and no chimes
          if ((currentTrack == 0 || currentTrack > 128) && !clockChiming) {
            call(lgc.SetSound);
            sound(s.OpenDrawer, soundDone);
          }
          [ if ego is too close, backup
          work1 = egoY;  [108,122 - 115,136 dx/dy=7/14=1/2
                         [101       108
          work1 -= 122; [ adjust for ego width
          work1 /= 2; 
          work1 += 101; [ x = (y - y0)*dx/dy + x0
                       
          if (egoY >= work1) {
            work1 -= 2;
            work2 = 2;
            set.loop(ego, 0);
            fix.loop(ego);
            move.obj.v(ego, work1, egoY, work2, fEgoBackup);
          }
        } else {
          print("Move closer.");
        }
        goto(doneclick);
      }
    }
    
    [ bureau drawer when open
    if (posn(oBureauDrawer, ON.OBJ, OBJ_FRAME, &mouseX, &mouseY) && 
        storeBureauDrStatus!= CLOSING) {
      [ is ego close enough?
      if ((obj.in.box(ego, 101, 122, 114, 130) || 
           obj.in.box(ego, 104, 131, 120, 138))) {
        [ contents check
        if (storeBureauDrStatus== OPEN && mouseY < 111) {
          goto(doneclick);
        }
        :closebureaudrawer
        set.loop(oBureauDrawer, 4);
        set.cel(oBureauDrawer, 3);
        reverse.loop(oBureauDrawer, fBureauDrawer);
        storeBureauDrStatus= CLOSING;
        [ play sound if walkman not active and no chimes
        if ((currentTrack == 0 || currentTrack > 128) && !clockChiming) {
          call(lgc.SetSound);
          sound(s.CloseDrawer, soundDone);
        }
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }
    
    [ bureau
    if (mouseX > 113 && mouseX < 136 && mouseY > 99 && mouseY < 140) {
      [ check pixel color
      block(GET.PIXEL, &mouseX, &mouseY, &work1); [ get.pixel(vX, vY, vRESULT)
      block(BIT.AND, BYNUM, &work1, 15); [ bit.and(FN_MODE, VAR, MASK)
      if ((work1 == LT_RED || work1 == BROWN || work1 == YELLOW)) {
        if (posn(ego, 103, 115, 119, 126)) {
          print("There is nothing else of interest in the bureau.");
        } else {
          print("Move closer.");
        }
        goto(doneclick);
      }
    }
    
    [ wardrobe - always out of reach 96, 49, 119, 100
    if (mouseX > 95 && mouseX < 120 && mouseY > 48 && mouseY < 101) {
      print("The wardrobe is blocked by the desk. You can't reach it.");
      goto(doneclick);
    }

    [ robots
    if (mouseX > 135 && mouseX < 147 && mouseY > 132 && mouseY < 159) {
      if (posn(ego, 127, 150, 141, 167)) {
        print("These robots are far too large to carry, even with your "
              "enormously oversized pockets.");
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }

    [ chair
    if (mouseX > 77 && mouseX < 96 && mouseY > 126 && mouseY < 154) {
      [ check pixel color
      block(GET.PIXEL, &mouseX, &mouseY, &work1); [ get.pixel(vX, vY, vRESULT)
      work1 /= 16; [ get priority color only
      if ((work1 == LT_MAGENTA || work1 == BLACK)) {
        if (posn(ego, 71, 142, 100, 156)) {
          print("You gently caress the soft, cushiony chair.");
        } else {
          print("Move closer.");
        }
        goto(doneclick);
      }
    }
    
    [ arcade
    if (mouseX > 53 && mouseX < 63 && mouseY > 125 && mouseY < 150) {
      [ check pixel color
      block(GET.PIXEL, &mouseX, &mouseY, &work1); [ get.pixel(vX, vY, vRESULT)
      block(BIT.AND, BYNUM, &work1, 15); [ bit.and(FN_MODE, VAR, MASK)
      if ((work1 == BLACK || work1 == BLUE || work1 == LT_BLUE)) {
        if (posn(ego, 56, 140, 66, 156)) {
          print("It's not plugged in. There's nothing you can do with "
                "the arcade.");
        } else {
          print("Move closer.");
        }
        goto(doneclick);
      }
    }

    [ chest when closed
    if (posn(oChest, ON.OBJ, OBJ_VISIBLE, &mouseX, &mouseY) && 
       (storeChestStatus == CLOSED || storeChestStatus == CLOSING)) {
      :openchest
      [ is ego close enough?
      if (obj.in.box(ego, 111, 147, 138, 166)) {
        if (egoX > 125) {
          print("The chest opens from the other side.");
          goto(doneclick);
        }
        [ open it
        set.cel(oChest, 0);
        end.of.loop(oChest, fChest);
        storeChestStatus= OPENING;
        [ play sound if walkman not active and no chimes
        if ((currentTrack == 0 || currentTrack > 128) && !clockChiming) {
          call(lgc.SetSound);
          sound(s.OpenDrawer, soundDone);
        }
        if (!scoreChest) {
          set(scoreChest);
          work1 = 1;
          call(lgc.ScoreHandler);
        }
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }
    
    [ chest when open
    if (posn(oChest, ON.OBJ, OBJ_VISIBLE, &mouseX, &mouseY) && 
       (storeChestStatus == OPEN || storeChestStatus == OPENING)) {
      :closechest
      [ is ego close enough?
      if (obj.in.box(ego, 111, 147, 138, 166)) {
        [ contents check 121,147 128,152
        if (storeChestStatus == OPEN && mouseX > 120 && mouseX < 129 && mouseY > 146 && mouseY < 166) {
          if (!has("scroll")) {
            :getscroll
            [ play sound if walkman not active and no chimes
            if ((currentTrack == 0 || currentTrack > 128) && !clockChiming) {
              call(lgc.SetSound);
              sound(s.GetItem, soundDone);
            }
            get("scroll");
            work1 = 3;
            call(lgc.ScoreHandler);
            print("You carefully lift the scroll out of the chest.");
            set.loop(oChest, 1);
            force.update(oFileDrawer);      
          }
          goto(doneclick);
        }
        [ close it
        set.cel(oChest, 3);
        reverse.loop(oChest, fChest);
        storeChestStatus= CLOSING;
        [ play sound if walkman not active and no chimes
        if ((currentTrack == 0 || currentTrack > 128) && !clockChiming) {
          call(lgc.SetSound);
          sound(s.CloseDrawer, soundDone);
        }
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }
    
    [ coffin (when closed)
    if ((vCoffinState == CLOSED || vCoffinState == CLOSING)) {
      if (mouseX > 27 && mouseX < 54 && mouseY > 142 && mouseY < 157) {
        :openCoffin
        [ is ego on wrong side?
        if (posn(ego, 28, 141, 54, 149)) {
          print("The coffin opens from the other side.");
          goto(doneclick);
        }
        [ is ego close enough?
        if (posn(ego, 24, 156, 54, 161)) {
          [ if closed
          if (vCoffinState == CLOSED) {
            [ draw it first
            set.loop(oCoffin, 2);
            set.cel(oCoffin, 0);
            set.priority(oCoffin, 14);
            position(oCoffin, 28, 155);
            draw(oCoffin);
            [ play sound if walkman not active and no chimes
            if ((currentTrack == 0 || currentTrack > 128) && !clockChiming) {
              call(lgc.SetSound);
              sound(s.OpenCoffin, soundDone);
            }
          }
          vCoffinState = OPENING;
          end.of.loop(oCoffin, fCoffin);
        } else {
          print("Move closer.");
        }
        goto(doneclick);
      }
    }
    [ coffin and lid (when open)
    if ((vCoffinState == OPEN || vCoffinState == OPENING)) {
      if (mouseX > 27 && mouseX < 54 && mouseY > 136 && mouseY < 147) {
        [ if open, ego must be close enough, so just close it without further checks
        :closeCoffin
        vCoffinState = CLOSING;
        reverse.loop(oCoffin, fCoffin);
        [ play sound if walkman not active and no chimes
        if ((currentTrack == 0 || currentTrack > 128) && !clockChiming) {
          call(lgc.SetSound);
          sound(s.CloseCoffin, soundDone);
        }
        goto(doneclick);
      }
    }
    
    [ coat hanger
    if (mouseX > 14 && mouseX < 24 && mouseY > 90 && mouseY < 126) {
      if (posn(ego, 19, 135, 28, 147)) {
        print("The coat rack is just outside of your reach.");
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }
    
    [ boxes
    if (mouseX > 9 && mouseX < 30 && mouseY > 126 && mouseY < 159) {
      set(fCheckClick);
    }
    if (mouseX > 53 && mouseX < 62 && mouseY > 150 && mouseY < 160) {
      set(fCheckClick);
    }
    if (mouseX > 69 && mouseX < 81 && mouseY > 146 && mouseY < 160) {
      set(fCheckClick);
    }
    if (mouseX > 90 && mouseX < 103 && mouseY > 152 && mouseY < 160) {
      set(fCheckClick);
    }
    if (mouseX > 104 && mouseX < 116 && mouseY > 143 && mouseY < 161) {
      set(fCheckClick);
    }
    if (fCheckClick) {
      reset(fCheckClick);
      if (posn(ego, 10, 154, 119, 167)) {
        print("The boxes are all taped securely shut. You have no "
              "way to open them.");
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }
  }

  :doneclick
  set.key(CLR.CTRL, CLR.CTRL, cLeftClick); [ clear.controller(cLeftClick);
}

[***************************************
[ CHECK FOR AN EXIT CONDITION
[***************************************
:exit

if (egoHitSpecial && egoX < 30) {
  [ show wait cursor
  cursoricon = C_WAIT;
  set.key(BYVAR, &cursoricon, mouse); [ set.cursor(FN_MODE, MSGNUM);
  [ fade out, then change room
  block(FADE.OUT, BYNUM, FADECOUNT, BLACK); [ fade.out(FN_MODE, DELAY, COLOR)
  new.room(rm.ControlRoom);  [ ##LE001##
}
return();

[***************************************
[ DECLARED MESSAGES
[***************************************
#message 1 "%g20"
#message 2 "%g21"
#message 3 "%g22"
#message 4 "%g23"
#message 5 "%g24"
#message 6 "%g25"
#message 7 "%g26"
#message 8 "%g27"
