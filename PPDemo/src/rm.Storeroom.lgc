[ ********************************************************************
[
[ rm.Storeroom
[
[ 
[
[ ********************************************************************

#define oClockHour      o1
#define oClockMinute    o2
#define oPendulum       o3
#define oCoffin         o4
#define oCabinetDoor    o4 [ reuse o4 for cabinet door
#define oChest          o5
#define oChestDrawer    o6
#define oFileDrawer     o7 [ green file cabinet
#define oDeskDrawer     o8 [ under mirror

#define vCheckSecond  v220
#define vClockHour    v221
#define vClockMin     v222
#define vClockSec     v223
#define vCoffinState  v224 [ coffin and cabinet door close automatically
#define vDoorState    v225 [ so only local variables needed to track state

#define fCoffin       f220
#define fCheckClick   f221
#define fDoor         f222
#define fFileDrawer   f223
#define fDeskDrawer   f224
#define fChestDrawer  f225
#define fChest        f226

if (newRoom) {
  [ this is the first cycle through this room
  [ load, draw and discard the picture resource for the current room
  load.pic(currentRoom);
  draw.pic(currentRoom);
  discard.pic(currentRoom);
  
  [ default horizon is ok
  
  [ add additional room initialization here
  load.view(vw.StorageRoomArt);
  
  [ large green chair
  add.to.pic(vw.StorageRoomArt, 0, 0, 78, 148, 13, 4);
  
  [ clock
  animate.obj(oPendulum);
  set.view(oPendulum, vw.StorageRoomArt);
  set.loop(oPendulum, 7);
  ignore.objs(oPendulum);
  position(oPendulum, 39, 96);
  ignore.objs(oPendulum);
  set.priority(oPendulum, 11);
  work1 = 2;
  cycle.time(oPendulum, work1);
  draw(oPendulum);
  animate.obj(oClockHour);
  set.view(oClockHour, vw.StorageRoomArt);
  set.loop(oClockHour, 9);
  ignore.objs(oClockHour);
  stop.cycling(oClockHour);
  position(oClockHour, 39, 76);
  set.priority(oClockHour, 11);
  animate.obj(oClockMinute);
  set.view(oClockMinute, vw.StorageRoomArt);
  set.loop(oClockMinute, 8);
  ignore.objs(oClockMinute);
  stop.cycling(oClockMinute);
  position(oClockMinute, 39, 76);
  set.priority(oClockMinute, 11);
  [ get current time
  block(GET.TIME, &vClockHour, &vClockMin, &vClockSec); [ get.time(vHOUR, vMINUTE, vSECOND)
  if (vClockHour > 11) {
   vClockHour -= 12;
  }
  set.cel.v(oClockHour, vClockHour);
  [ round minutes to multiples of 2.5
  work1 = vClockMin; [ 0-59
  work1 *= 2; [ 0 - 118
  if (vClockSec > 29) {
    ++work1;
  }
  work1 /= 5;
  set.cel.v(oClockMinute, work1);
  draw(oClockHour);
  draw(oClockMinute);
  vCheckSecond = elapsedSeconds;
  
  [ coffin lid
  animate.obj(oCoffin);
  set.view(oCoffin, vw.StorageRoomArt);
  stop.cycling(oCoffin);
  ignore.objs(oCoffin);
  ignore.blocks(oCoffin);

  [ cabinet door (uses same object as the coffin)

  [ chest
  animate.obj(oChest);
  set.view(oChest, vw.StorageRoomArt);
  set.loop(oChest, 1);
  set.cel(oChest, 0);
  stop.cycling(oChest);
  ignore.objs(oChest);
  ignore.blocks(oChest);
  position(oChest, 119, 162);
  draw(oChest);

  [ chest drawer
  animate.obj(oChestDrawer);
  set.view(oChestDrawer, vw.StorageRoomArt);
  set.loop(oChestDrawer, 4);
  set.cel(oChestDrawer, 0);
  stop.cycling(oChestDrawer);
  ignore.objs(oChestDrawer);
  ignore.blocks(oChestDrawer);
  
  [ green file cabinet drawers
  animate.obj(oFileDrawer); 
  set.view(oFileDrawer, vw.StorageRoomArt);
  stop.cycling(oFileDrawer);
  ignore.objs(oFileDrawer);
  ignore.blocks(oFileDrawer);
  if (officeFileDrStatus != CLOSED) {
    if (officeFileDrStatus == OPEN1) {
      position(oFileDrawer, 76, 100);
      set.loop(oFileDrawer, 3);
      set.cel(oFileDrawer, 2);
    }
    if (officeFileDrStatus == OPEN2) { 
      position(oFileDrawer, 76, 109);
[[      if (has("notebook")) {
        set.loop(oFileDrawer, 3);
        set.cel(oFileDrawer, 2);
[[      } else {
[[        set.loop(oFileDrawer, 5);
[[        set.cel(oFileDrawer, 5);
[[      }
    }
    if (officeFileDrStatus == OPEN3) { 
      position(oFileDrawer, 76, 118);
[[      if (has("floppy disk")) {
        set.loop(oFileDrawer, 3);
        set.cel(oFileDrawer, 2);
[[      } else {
[[        set.loop(oFileDrawer, 5);
[[        set.cel(oFileDrawer, 6);
[[      }
    }
    draw(oFileDrawer);
  }
  
  [ desk drawer (under mirror)
  animate.obj(oDeskDrawer);
  set.view(oDeskDrawer, vw.StorageRoomArt);
  stop.cycling(oDeskDrawer);
  ignore.objs(oDeskDrawer);
  if (storeFileDrStatus == OPEN) {
    position(oDeskDrawer, 76, 100);
    set.loop(oDeskDrawer, 5);
    set.cel(oDeskDrawer, 2);
    draw(oDeskDrawer);
  }
  
  [ add toolbar buttons
  load.view(vw.Toolbar);
  call(lgc.InitToolbar);
  
  [ add ego to the room
  position(ego, 24, 139);
  draw(ego);
  egoDir = STOPPED;
  
  [ display the picture on screen
  show.pic();
  [ fade in
  block(FADE.IN, 0, 25, 0); [ fade.in(BYVAR, DELAY, COLOR)
  [ restore cursor
  cursoricon = cursormode;
  set.key(1, &cursoricon, mouse); [ set.cursor(BYVAR, MSGNUM);
  
  return();
}

[*****
:handleInput       [ check for input from player
[*****
if (haveInput && !haveMatch && unknownWordNum == 0) {
  [ place said tests here
  if (said("look")) {
    print("You see nothing of interest.");
  }
  
  if (said("open", "coffin")) {
    if ((vCoffinState == OPEN || vCoffinState == OPENING)) {
      print("It's already open.");
    } else {
      goto(openCoffin);
    }
  }
  if (said("close", "coffin")) {
    if ((vCoffinState == CLOSED || vCoffinState == CLOSING)) {
      print("It's already shut.");
    } else {
      goto(closeCoffin);
    }
  }
}


[*****
:noInput           [  all non-input related code goes here 
[*****

[ priority adjustments
if ((posn(ego, 70, 152, 84, 155) || posn(ego, 50, 150, 58, 156))) {
  set.priority(ego, 14);
} else {
  if (posn(ego, 71, 143, 95, 148)) {
    set.priority(ego, 12);
  } else {
    release.priority(ego);
  }
}
[ treasure chest- on left, use 14
if (posn(ego, 112, 154, 123, 162)) {
  set.priority(oChest, 14);
} else {
  release.priority(oChest);
}


[ clock - check every second
if (vCheckSecond != elapsedSeconds) {
  vCheckSecond = elapsedSeconds;
  [ increment clock seconds
  ++vClockSec;
  if (vClockSec == 60) {
    vClockSec = 0;
    ++vClockMin;
    if (vClockMin == 60) {
      vClockMin = 0;
      ++vClockHour;
      if (vClockHour == 12) {
        vClockHour = 0;
      }
    }
  }
  if ((vClockSec == 0 || vClockSec == 30)) {
    set.cel.v(oClockHour, vClockHour);
    [ round minutes to multiples of 2.5
    work1 = vClockMin; [ 0-59
    work1 *= 2; [ 0 - 118
    if (vClockSec > 29) {
      ++work1;
    }
    work1 /= 5;
    set.cel.v(oClockMinute, work1);
    draw(oClockHour);
    draw(oClockMinute);
  }
}


[ if NOT clicking on the actual toolbar, check for
[ clicks on ingame items
if (mouseY > 25 && controller(cLeftClick)) {
  [ look
  if (cursormode == C_LOOK) {
    [ ego
    if (posn(ego, ON.OBJ, 1, &mouseX, &mouseY)) {
      print("You see you.");
      goto(doneclick);
    }
    
    [anything else is the whole room
    print("There is a ton of stuff in this room.");
    goto(doneclick);
  }
  
  [ talk
  if (cursormode == C_TALK) {
    [ ego
    if (posn(ego, ON.OBJ, 1, &mouseX, &mouseY)) {
      print("You have nothing to say.");
    } else {
      print("There is no one here to talk to.");
    }
    goto(doneclick);
  }
  
  [ use
  if (cursormode == C_USE) {
    [ ego
    if (posn(ego, ON.OBJ, 1, &mouseX, &mouseY)) {
      print("Please don't touch yourself. Not even when you're alone.");
      goto(doneclick);
    }
    if (mouseX > 27 && mouseX < 54 && mouseY > 150 && mouseY < 165) {
    }
    [ coffin (when closed)
    if ((vCoffinState == CLOSED || vCoffinState == CLOSING)) {
      if (mouseX > 27 && mouseX < 54 && mouseY > 150 && mouseY < 165) {
[ TODO: use labels to manage 'said' statements that duplicate clicks
        :openCoffin
        [ is ego on wrong side?
        if (posn(ego, 28, 141, 54, 149)) {
          print("The coffin opens from the other side.");
          goto(doneclick);
        }
        [ is ego close enough?
        if (posn(ego, 24, 156, 54, 161)) {
          [ if closed
          if (vCoffinState == CLOSED) {
            [ draw it first
            set.loop(oCoffin, 2);
            set.cel(oCoffin, 0);
            set.priority(oCoffin, 14);
            position(oCoffin, 28, 155);
            draw(oCoffin);
          }
          vCoffinState = OPENING;
          end.of.loop(oCoffin, fCoffin);
        } else {
          print("Move closer.");
        }
        goto(doneclick);
      }
    }
    [ coffin and lid (when open)
    if ((vCoffinState == OPEN || vCoffinState == OPENING)) {
      if (mouseX > 27 && mouseX < 54 && mouseY > 144 && mouseY < 155) {
        [ if open, ego must be close enough, so just close it without further checks
        :closeCoffin
        reverse.loop(oCoffin, fCoffin);
        goto(doneclick);
      }
    }
    
    [ cabinet door (when closed)
    if ((vDoorState == CLOSED || vDoorState == CLOSING)) {
      if (mouseX > 129 && mouseX < 133 && mouseY > 126 && mouseY < 151) {
        set(fCheckClick);
      }
      if (mouseX > 132 && mouseX < 137 && mouseY > 130 && mouseY < 155) {
        set(fCheckClick);
      }
      if (fCheckClick) {
        reset(fCheckClick);
        [ is ego close enough?
        if ((posn(ego, 120, 146, 132, 150) || posn(ego, 122, 151, 131, 156))) {
          [ if closed
          if (vDoorState == CLOSED) {
            [ animate it first
            set.loop(oCabinetDoor, 6);
            set.cel(oCabinetDoor, 0);
            position(oCabinetDoor, 125, 149);
            set.priority(oCabinetDoor, 13);
            draw(oCabinetDoor);
          }
          vDoorState = OPENING;
          end.of.loop(oCabinetDoor, fDoor);
        } else {
          print("Move closer.");
        }
        goto(doneclick);
      }
    }

    [ cabinet door (when opened)
    if ((vDoorState == OPEN || vDoorState == OPENING)) {
      if (mouseX > 124 && mouseX < 130 && mouseY > 126 && mouseY < 145) {
        set(fCheckClick);
      }
      if (mouseX > 133 && mouseX < 137 && mouseY > 134 && mouseY < 158) {
        set(fCheckClick);
      }
      if (fCheckClick) {
        reset(fCheckClick);
        [ if open, ego must be close enough, so just close it without further checks
        reverse.loop(oCabinetDoor, fDoor);
        goto(doneclick);
      }
    }
    
    [ file drawer, when drawer is open 
    if (posn(oFileDrawer, ON.OBJ, 0, &mouseX, &mouseY) && 
        storeFileDrStatus!= CLOSING) {
      [ is ego close enough?
      if (obj.in.box(ego, 73, 117, 93, 122)) {
        [ contents check
        if (storeFileDrStatus== OPEN1 && mouseY < 101) {
          goto(doneclick);
        }
        if (storeFileDrStatus== OPEN2 && mouseY < 110) {
[          if (!has("notebook")) {
[            get("notebook");
[            currentScore += 3;
[            print("This notebook might come in handy.");
[            set.loop(oFileDrawer, 3);
[            set.cel(oFileDrawer, 2);
[            force.update(oFileDrawer);      
[          }
          goto(doneclick);
        }
        if (storeFileDrStatus== OPEN3 && mouseY < 119) {
          goto(doneclick);
        }
        set.loop(oFileDrawer, 3);
        set.cel(oFileDrawer, 2);
        reverse.loop(oFileDrawer, fFileDrawer);
        storeFileDrStatus= CLOSING;
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }

    [ top file drawer, closed  76, 89, 83, 95
    if (mouseX > 75 && mouseX < 84 && mouseY > 96 && mouseY < 104 &&
        officeFileDrStatus == CLOSED) {
      [ is ego close enough?
      if (obj.in.box(ego, 73, 117, 93, 122)) {
        position(oFileDrawer, 76, 100);
        set.loop(oFileDrawer, 3);
        set.cel(oFileDrawer, 0);
        draw(oFileDrawer);
        end.of.loop(oFileDrawer, fFileDrawer);
        officeFileDrStatus = OPENING;
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }
      
    [ middle file drawer, closed 76, 98, 83, 105
    if (mouseX > 75 && mouseX < 84 && mouseY > 105 && mouseY < 114 &&
        officeFileDrStatus == CLOSED) {
      [ is ego close enough?
      if (obj.in.box(ego, 73, 117, 93, 122)) {
        position(oFileDrawer, 76, 109);
        set.loop(oFileDrawer, 3);
        set.cel(oFileDrawer, 0);
        draw(oFileDrawer);
        end.of.loop(oFileDrawer, fFileDrawer);
        officeFileDrStatus = OPENING;
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }
    
    [ bottom file drawer, closed 76, 107, 83, 114
    if (mouseX > 75 && mouseX < 84 && mouseY > 114 && mouseY < 123 &&
        officeFileDrStatus == CLOSED) {
      [ is ego close enough?
      if (obj.in.box(ego, 73, 117, 93, 122)) {
        position(oFileDrawer, 76, 118);
        set.loop(oFileDrawer, 3);
        set.cel(oFileDrawer, 0);
        draw(oFileDrawer);
        end.of.loop(oFileDrawer, fFileDrawer);
        officeFileDrStatus = OPENING;
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }
    
    [ chest drawer
    if (posn(oChestDrawer, ON.OBJ, 0, &mouseX, &mouseY) && 
        storeChestDrStatus!= CLOSING) {
      [ is ego close enough?
      if (obj.in.box(ego, 108, 122, 122, 139)) {
        [ contents check
        if (storeChestDrStatus== OPEN && mouseY < 119) {
[          if (!has("notebook")) {
[            get("notebook");
[            currentScore += 3;
[            print("This notebook might come in handy.");
[            set.loop(oFileDrawer, 3);
[            set.cel(oFileDrawer, 2);
[            force.update(oFileDrawer);      
[          }
          goto(doneclick);
        }
        set.loop(oChestDrawer, 4);
        set.cel(oChestDrawer, 3);
        reverse.loop(oChestDrawer, fChestDrawer);
        storeChestDrStatus= CLOSING;
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }
    
    [ chest drawer when closed 115, 110, 118, 126 and 119, 116, 122, 131
    if (storeChestDrStatus == CLOSED) {
      if (mouseX > 114 && mouseX < 119 && mouseY > 117 && mouseY < 135) {
        set(fCheckClick);
      }
      if (mouseX > 118 && mouseX < 123 && mouseY > 123 && mouseY < 140) {
        set(fCheckClick);
      }
      if (fCheckClick) {
        reset(fCheckClick);
        [ is ego close enough?
        if (obj.in.box(ego, 94, 121, 112, 126)) {
          position(oChestDrawer, 109, 129);
          set.loop(oChestDrawer, 4);
          set.cel(oChestDrawer, 0);
          draw(oChestDrawer);
          end.of.loop(oChestDrawer, fChestDrawer);
          storeChestDrStatus = OPENING;
        } else {
          print("Move closer.");
        }
        goto(doneclick);
      }
    }
    
    [ desk drawer when open
    if (posn(oDeskDrawer, ON.OBJ, 0, &mouseX, &mouseY) && 
        storeDeskDrStatus!= CLOSING) {
      [ is ego close enough?
      if (obj.in.box(ego, 94, 121, 112, 126)) {
        [ contents check
        if (storeFileDrStatus== OPEN && mouseY < 119) {
[          if (!has("notebook")) {
[            get("notebook");
[            currentScore += 3;
[            print("This notebook might come in handy.");
[            set.loop(oFileDrawer, 3);
[            set.cel(oFileDrawer, 2);
[            force.update(oFileDrawer);      
[          }
          goto(doneclick);
        }
        set.loop(oDeskDrawer, 5);
        set.cel(oDeskDrawer, 3);
        reverse.loop(oDeskDrawer, fDeskDrawer);
        storeFileDrStatus= CLOSING;
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }
    
    [ desk drawer when closed 100, 102, 106, 108
    if (mouseX > 99 && mouseX < 107 && mouseY > 109 && mouseY < 117 &&
        storeDeskDrStatus == CLOSED) {
      [ is ego close enough?
      if (obj.in.box(ego, 94, 121, 112, 126)) {
        position(oDeskDrawer, 99, 112);
        set.loop(oDeskDrawer, 5);
        set.cel(oDeskDrawer, 0);
        draw(oDeskDrawer);
        end.of.loop(oDeskDrawer, fDeskDrawer);
        storeDeskDrStatus = OPENING;
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }
    
    [ chest  119, 163
    if (posn(oChest, ON.OBJ, 1, &mouseX, &mouseY)) {
      [ is ego close enough?
      if (obj.in.box(ego, 111, 155, 131, 165)) {
        [ contents check 121,147 128,152
        if (storeChestStatus == OPEN && mouseX > 120 && mouseX < 129 && mouseY > 154 && mouseY < 174) {
[          if (!has("notebook")) {
[            get("notebook");
[            currentScore += 3;
[            print("This notebook might come in handy.");
[            set.loop(oFileDrawer, 3);
[            set.cel(oFileDrawer, 2);
[            force.update(oFileDrawer);      
[          }
          goto(doneclick);
        }
        
        [ open or close, depending on current state
        set.loop(oChest, 1);
        if ((storeChestStatus == OPEN || storeChestStatus == OPENING)) {
          set.cel(oChest, 3);
          reverse.loop(oChest, fChest);
          storeChestStatus= CLOSING;
        } else {
          set.cel(oChest, 0);
          end.of.loop(oChest, fChest);
          storeChestStatus= OPENING;
        }
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }
  }
  
  :doneclick
  set.key(-1, -1, cLeftClick); [ clear.controller(cLeftClick);
}

[ check coffin cycling
if (fCoffin) {
  reset(fCoffin);
  if (vCoffinState == OPENING) {
    vCoffinState = OPEN;
  } else {
    vCoffinState = CLOSED;
    erase(oCoffin);
  }
}

[ close coffin if ego moves away
if ((vCoffinState == OPEN || vCoffinState == OPENING)) {
  if (!posn(ego, 24, 156, 54, 161)) {
    vCoffinState = CLOSING;
    reverse.loop(oCoffin, fCoffin);
  }
}

[ check cabinet door cycling
if (fDoor) {
  reset(fDoor);
  if (vDoorState == OPENING) {
    vDoorState = OPEN;
  } else {
    vDoorState = CLOSED;
    erase(oCabinetDoor);
  }
}

[ close cabinet door if ego moves away
if ((vDoorState == OPEN || vDoorState == OPENING)) {
  if (!posn(ego, 120, 146, 132, 156)) {
    vDoorState = CLOSING;
    reverse.loop(oCabinetDoor, fDoor);
  }
}

[ file drawer
if (fFileDrawer) {
  reset(fFileDrawer);
  if (storeFileDrStatus == CLOSING) {
    erase(oFileDrawer);
    storeFileDrStatus = CLOSED;
  } else {
    get.posn(oFileDrawer, work1, work2);
    if (work2 == 100) {
      storeFileDrStatus = OPEN1;
[      if (!findEmptyDrawer) {
[        set(findEmptyDrawer);
[        print("This drawer is empty.");
[      }
    } else {
      if (work2 == 109) {
        storeFileDrStatus = OPEN2;
[        if (!has("notebook")) {
[          set.loop(oFileDrawer, 5);
[          set.cel(oFileDrawer, 5);
[          force.update(oFileDrawer);
[          if (!findNotebook) {
[            set(findNotebook);
[            print("A small notebook is in this drawer.");
[          }
[        }
      } else {
        storeFileDrStatus = OPEN3;
[        if (!has("floppy disk")) {
[          set.loop(oFileDrawer, 5);
[          set.cel(oFileDrawer, 6);
[          force.update(oFileDrawer);
[          if (!findDisk) {
[            set(findDisk);
[            print("There's a box of blank floppy disks here.");
[          }
[        }
      }
    }
  }
}

[ desk drawer
if (fDeskDrawer) {
  reset(fFileDrawer);
  if (storeDeskDrStatus == CLOSING) {
    erase(oDeskDrawer);
    storeDeskDrStatus = CLOSED;
  } else {
    storeDeskDrStatus = OPEN;
[        if (!has("notebook")) {
[          set.loop(oFileDrawer, 5);
[          set.cel(oFileDrawer, 5);
[          force.update(oFileDrawer);
[          if (!findNotebook) {
[            set(findNotebook);
[            print("A small notebook is in this drawer.");
[          }
[        }
  }
}

[ chest drawer
if (fChestDrawer) {
  reset(fChestDrawer);
  if (storeChestDrStatus == CLOSING) {
    erase(oChestDrawer);
    storeChestDrStatus = CLOSED;
  } else {
    storeChestDrStatus = OPEN;
[        if (!has("notebook")) {
[          set.loop(oFileDrawer, 5);
[          set.cel(oFileDrawer, 5);
[          force.update(oFileDrawer);
[          if (!findNotebook) {
[            set(findNotebook);
[            print("A small notebook is in this drawer.");
[          }
[        }
  }
}

[ chest
if (fChestDrawer) {
  reset(fChestDrawer);
  if (storeChestDrStatus == CLOSING) {
    storeChestDrStatus = CLOSED;
  } else {
    storeChestDrStatus = OPEN;
[        if (!has("notebook")) {
[          set.loop(oFileDrawer, 5);
[          set.cel(oFileDrawer, 5);
[          force.update(oFileDrawer);
[          if (!findNotebook) {
[            set(findNotebook);
[            print("A small notebook is in this drawer.");
[          }
[        }
  }
}

[*****
:exit              [  test for leaving the room
[*****

[ add exit checks here (or use layout editor)

if (egoHitSpecial) {
  [ show wait cursor
  cursoricon = C_WAIT;
  set.key(1, &cursoricon, mouse); [ set.cursor(BYVAR, MSGNUM);
  [ fade out, then change room
  block(FADE.OUT, 0, FADECOUNT, BLACK); [ fade.out(BYVAR, DELAY, COLOR)
  new.room(rm.ControlRoom);  [ ##LE001##
}
return();

[*****
[ messages         [  declared messages go here
[*****
#message 1 "%l90|40"
#message 2 "%l90|41"
#message 3 "%l90|42"
#message 4 "%l90|43"
#message 5 "%l90|44"
#message 6 "%l90|45"
#message 7 "You see nothing of interest." 