[ ********************************************************************
[
[ rm.SafeDoor
[
[ 
[
[ ********************************************************************

if (newRoom) {
  [ this is the first cycle through this room
  [ load, draw and discard the picture resource for the current room
  load.pic(currentRoom);
  draw.pic(currentRoom);
  discard.pic(currentRoom);
  
  [ the horizon defines the upper limit of ego's movement
  set.horizon(1);
  
  [ no ego, and no input (mouse only)
  set(disableGameFunctions);
  prevent.input();
  
  [ access to cursor icons
  load.logics(lgc.GameFunctions);
  
  [ display the picture on screen
  show.pic();
  
  [ use hand cursor
  cursoricon = C_USE; [cursormode;
  set.key(1, &cursoricon, mouse); [ set.cursor(BYVAR, MSGNUM);
  [ fade in
  block(FADE.IN, 0, FADECOUNT, BLACK); [ fade.in(BYVAR, DELAY, COLOR)
  return();
}

[*****
:handleInput       [ check for input from player
[*****

[TODO: add all code to control combo lock
if (controller(cLeftClick)) {
  set(fOpenSafe);  
}

[*****
:noInput           [  all non-input related code goes here 
[*****

[ add other room specific statements here


[ righ-click to cancel and exit
if ((fOpenSafe || controller(cRightClick))) {
  [ reenable input
  accept.input();
  reset(disableGameFunctions);
  [ show wait cursor
  cursoricon = C_WAIT;
  set.key(1, &cursoricon, mouse); [ set.cursor(BYVAR, MSGNUM);
  [ fade out to black (faster than room fade)
  block(FADE.OUT, 0, 10, BLACK); [ fade.out(BYVAR, DELAY, COLOR)

  new.room.v(previousRoom);
}

[ add exit checks here (or use layout editor)
return();

[*****
[ messages         [  declared messages go here
[*****
#message 1 "%l90|40"
#message 2 "%l90|41"
#message 3 "%l90|42"
#message 4 "%l90|43"
#message 5 "%l90|44"
#message 6 "%l90|45"