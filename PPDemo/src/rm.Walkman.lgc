[ 
[ rm.Walkman
[ 
[ close up of the walkman; player can press start/pause,
[ rewind, fast forward and eject
[
[ no script entries for this sequence
set(noScript);
[ no regular input either
prevent.input();
status.line.off();

[ fade out until done loading
block(FADE.OUT, 0, 5, BLACK); [ fade.out(BYVAR, DELAY, COLOR)
[ use default mouse cursor
cursoricon = C_DEFAULT;
set.key(1, &cursoricon, mouse); [ set.cursor(BYVAR, MSGNUM);

[ hide objects while showing manual
block(HIDE.OBJS, 1, 0, 0); [ hide.objs(MODE);

work1 = pic.Walkman;
load.pic(work1);
draw.pic(work1);
show.pic();
discard.pic(work1);

[ fade back in
block(FADE.IN, 0, 5, BLACK); [ fade.in(BYVAR, DELAY, COLOR)

[ main input loop; wait until a key is pressed
lastChar = 0;
:waitforit

  [ check for mouse click (mouse press, since events aren't 
  [ triggered unless main loop is used)
  if (mouseBtn == 1) {
    [ get button by priority color
    block(GET.PIXEL, &mouseX, &mouseY, &work1); [ get.pixel(vX, vY, vRESULT)
    work1 /= 64;
    
    if (work1 == 5) {
      [ play
    }
    if (work1 == 6) {
      [ pause/stop
    }
    if (work1 == 7) {
      [ rewind
    }
    if (work1 == 8) {
      [ fast forward
    }
    if (work1 == 9) {
      [ eject
    }
  }
  
if (!have.key()) {
  goto(waitforit);
}
[ any key will exit

[if (!scorePlayTape) {
[  set(scorePillow);
[  work1 = 3;
[  call(lgc.ScoreHandler);
[}

[ fade out during the switch
block(FADE.OUT, 0, 5, BLACK); [ fade.out(BYVAR, DELAY, COLOR)



return();

[*****
[ messages         [  declared messages go here
[*****