[ ********************************************************************
[
[ rm.ParkingLot
[
[ 
[
[ ********************************************************************

#define egoCar        o1
#define patient       o2
#define patientCar    o3
#define btnYes        o4
#define btnNo         o5

#define egoCarSeq    v220
#define patientSeq   v221
#define patientTimer v222
#define carX         v223
#define carY         v224

#define fCarDone     f220
#define fPatientDone f221
#define fPatientHere f222
#define f2ndspot     f223
#define fEgoDead     f224
#define fDeadDone    f225
#define fClickOn     f226
#define fSkip1       f227

if (newRoom) {
  [ run initialization code
  call(lgc.RoomInit);
  
  [ this is the first cycle through this room
  [ load, draw and discard the picture resource for the current room
  load.pic(currentRoom);
  draw.pic(currentRoom);
  discard.pic(currentRoom);
  
  [ the horizon defines the upper limit of ego's movement
  set.horizon(117);
  
  load.view(vw.Cars);
  [ add permanently parked cars
  #define tmpView     v220
  #define tmpLoop     v221
  #define tmpCel      v222
  #define tmpX        v223
  #define tmpY        v224
  #define tmpPri      v225
  #define tmpMgn      v226
 
  [ parking spot 1
  tmpView = vw.Cars;
  tmpLoop = car0car1;
  tmpLoop /= 16;
  tmpLoop += 19;
  tmpCel = 0;
  tmpX = 106;
  tmpY = 141;
  tmpPri = 13;
  tmpMgn = 4;
  add.to.pic.v(tmpView, tmpLoop, tmpCel, tmpX, tmpY, tmpPri, tmpMgn);
  [ parking spot 2
  tmpLoop = car0car1;
  block(BIT.AND, 0, &tmpLoop, 15); [ bit.and(BYVAL, VAR, AMOUNT)
  tmpX = 92;
  tmpY = 154;
  tmpPri = 14;
  add.to.pic.v(tmpView, tmpLoop, tmpCel, tmpX, tmpY, tmpPri, tmpMgn);
  [ parking spot 3
  tmpLoop = car2car3;
  tmpLoop /= 16;
  tmpLoop += 19;
  tmpX = 51;
  tmpY = 167;
  tmpPri = 15;
  add.to.pic.v(tmpView, tmpLoop, tmpCel, tmpX, tmpY, tmpPri, tmpMgn);
  [ parking spot 4
  tmpLoop = car2car3;
  block(BIT.AND, 0, &tmpLoop, 15); [ bit.and(BYVAL, VAR, AMOUNT)
  tmpLoop += 19;
  tmpX = 46;
  tmpY = 155;
  tmpPri = 14;
  add.to.pic.v(tmpView, tmpLoop, tmpCel, tmpX, tmpY, tmpPri, tmpMgn);
  [ parking spot 5
  tmpLoop = car4car5;
  tmpLoop /= 16;
  tmpX = 26;
  tmpY = 156;  
  tmpPri = 0;
  add.to.pic.v(tmpView, tmpLoop, tmpCel, tmpX, tmpY, tmpPri, tmpMgn);
  
  [ ego's car
  animate.obj(egoCar);
  tmpLoop = car4car5;
  block(BIT.AND, 0, &tmpLoop, 15); [ bit.and(BYVAL, VAR, AMOUNT)
  set.view(egoCar, vw.Cars);
  set.loop.v(egoCar, tmpLoop);
  ignore.blocks(egoCar);
  
  [ done with temp variables; reset module variables as needed
  patientSeq = 0;
  
  [ tiny ego view
  load.view(vw.EgoSmall);
  set.view(ego, vw.EgoSmall);
  
  [ patient car
  animate.obj(patientCar);
  set.view(patientCar, vw.Cars);
  ignore.objs(patientCar);
  [ don't draw until needed
  
  [ tiny patient view
  animate.obj(patient);
  load.view(vw.SmallPerson1);
  load.view(vw.SmallPerson2);
  load.view(vw.SmallPerson3);
  load.view(vw.SmallPerson4); 
  load.view(vw.SmallPerson5);
  [ don't draw until needed
  
  [ buttons for end game msgbox
  load.view(vw.ParkingLotArt);
  animate.obj(btnYes);
  animate.obj(btnNo);
  set.view(btnYes, vw.ParkingLotArt);
  set.view(btnNo, vw.ParkingLotArt);
  ignore.objs(btnYes);
  ignore.objs(btnNo);
  ignore.blocks(btnYes);
  ignore.blocks(btnNo);
  ignore.horizon(btnYes);
  ignore.horizon(btnNo);
  position(btnYes, 62, 97);
  set.priority(btnYes, 15);
  position(btnNo, 81, 97);
  set.priority(btnNo, 15);
  [ don't draw until needed
  
  [ set timer to random amount
  random(140, 250, patientTimer);
random(10, 20, patientTimer);
  
  [ if starting (coming from intro screen)
  if (previousRoom == rm.Title) {
    [ begin opening sequence
    egoCarSeq = 1;
  } else {
    [ skip opening sequence
    egoCarSeq = 0;
    [ car is in parking spot
    position(egoCar, 41, 143);
    draw(egoCar);
    stop.cycling(egoCar);
    [ if restarting 
    if (previousRoom == 0)  {
      [ add ego next to car
      position(ego, 50, 139);
    } else {
      [ coming from lobby
      position(ego, 54, 121);
    }
    egodir = STOPPED;
    draw(ego);
  }
  
  [ add toolbar buttons
  load.view(vw.Toolbar);
  call(lgc.InitToolbar);
  
  [ display the picture on screen
  show.pic();
  [ fade in
  block(FADE.IN, 0, 25, 0); [ fade.in(BYVAR, DELAY, COLOR)
  [ restore cursor
  cursoricon = cursormode;
  set.key(1, &cursoricon, mouse); [ set.cursor(BYVAR, MSGNUM);
  return();
}

[*****
:noInput           [  all non-input related code goes here 
[*****

if (egoCarSeq) {
  [ ego arrives
  if (egoCarSeq == 1) {
    [ move car to parking spot
    ++egoCarSeq;
    position(egoCar, 0, 131);
    draw(egoCar);
    move.obj(egoCar, 40, 143, 1, fCarDone);
    print("At long last, Drew has finally made it to Oakhurst, "
          "California to visit the original Sierra On-Line headquarters "
          "building.");
    print("It has been a long drive, but Drew is super excited as he "
          "pulls into the parking lot.");
  }
  if (egoCarSeq == 2 && fCarDone) {
    [ ego gets out
    reset(fCarDone);
    egoCarSeq = 0;
    stop.cycling(egoCar);
    position(ego, 50, 139);
    draw(ego);
    print("The building is now a medical office. There aren't too many "
          "cars in the parking lot. So Drew decides to go inside and "
          "take a look around.");
    print("Who knows? Maybe he might find some original Sierra memorabilia "
          "or other signs of long past gaming history.");
  }
  [ skip rest of room logic until opening sequence is finished
  if (egoCarSeq < 3) {
    return();
  }
  
  [ ego drives away
  if (egoCarSeq == 10) {
    [ ego drives away
    egoCarSeq = 11;
    start.cycling(egoCar);
    move.obj(egoCar, 143, 126, 2, fCarDone);
  }
  if (egoCarSeq == 11 && fCarDone) {
    reset(fCarDone);
    egoCarSeq = 0;
    erase(egoCar);
  }  
}

[ timing bug with controllers
if (fSkip1) {
  reset(fSkip1);
  set.key(-1, -1, cLeftClick); [ clear.controller(cNUM);  
}

[ parked cars in rightside parking lot don't quite align with priority bands
get.posn(ego, work1, work2);
if (work1 > 102 && work1 < 121 && work2 > 141 && work2 < 145) {
  set.priority(ego, 13);
} else {
  if (work1 > 88 && work1 < 108 && work2 >154 && work2 < 157) {
    set.priority(ego, 14);
  } else {
    release.priority(ego);
  }
}

[ check for random patient arriving or leaving
if (patientTimer == 0) {
  [ reset the timer
  random(140, 250, patientTimer);
random(10, 20, patientTimer);

  if (fPatientHere) {
    [ time for patient to leave
      position(patient, 55, 117);
      if (f2ndspot) {
        [ go back to parking spot 2
        move.obj(patient, 55, 127, 1, fPatientDone);
        patientSeq = 16;
      } else {
        [ go back to parking spot 1
        move.obj(patient, 55, 127, 1, fPatientDone);
        patientSeq = 4;
      }
      draw(patient);
  } else {
    [ time for patient to arrive
    random(0, 1, work1);
    if (work1 == 0) {
      reset(f2ndspot);
      patientSeq = 1; [ got to spot #1
      random(0, 18, work1);
      set.loop.v(patientCar, work1);
      position(patientCar, 0, 131);
      move.obj(patientCar, 18, 143, 2, fPatientDone);
    } else {
      set(f2ndspot);
      patientSeq = 10; [ go to spot #2
      random(19, 37, work1);
      set.loop.v(patientCar, work1);
      position(patientCar, 143, 128);
      move.obj(patientCar, 99, 128, 2, fPatientDone);
    }
    draw(patientCar);
    [ choose a random patient
    random(2, 6, work1);
[ TODO: add more patient views
random(2, 4, work1);
    set.view.v(patient, work1);
  }
} else {
  if (patientSeq == 0) {
    [ countdown
    --patientTimer;
  }
}
if (fPatientDone) {
  [ parking spot 2
  if (patientSeq == 20) {
    erase(patientCar);
    reset(fPatientHere);
    reset(fPatientDone);
    patientSeq = 0;
    unblock();
  }
  if (patientSeq == 19) {
    move.obj(patientCar, 0, 131, 2, fPatientDone);
    ++patientSeq;
  }
  if (patientSeq == 18) {
    erase(patient);
    start.cycling(patientCar);
    move.obj(patientCar, 61, 131, 1, fPatientDone);
    unblock();
    ++patientSeq;
  }
  if (patientSeq == 17) {
    move.obj(patient, 88, 142, 1, fPatientDone);
    ++patientSeq;  
  }
  if (patientSeq == 16) {
    move.obj(patient, 70, 142, 1, fPatientDone);
    ++patientSeq;  
  }
  if (patientSeq == 15) {
    erase(patient);
    patientSeq = 0;
    set(fPatientHere);
    reset(fPatientDone);
  }
  if (patientSeq == 14) {
    move.obj(patient, 55, 117, 1, fPatientDone);
    ++patientSeq;  
  }
  if (patientSeq == 13) {
    stop.cycling(patientCar);
    ignore.blocks(patientCar);
    block(78, 138, 99, 142);
    position(patient, 88, 142);
    draw(patient);
    move.obj(patient, 72, 142, 1, fPatientDone);
    ++patientSeq;
  }
  if (patientSeq == 12) {
    ++patientSeq;  
    move.obj(patientCar, 83, 141, 1, fPatientDone);
  }
  if (patientSeq == 11) {
    ++patientSeq;  
    move.obj(patientCar, 61, 141, 1, fPatientDone);
  }
  if (patientSeq == 10) {
    ++patientSeq;  
    move.obj(patientCar, 75, 129, 2, fPatientDone);
  }
  
  [ parking spot 1
  if (patientSeq == 8) {
    erase(patientCar);
    reset(fPatientHere);
    reset(fPatientDone);
    patientSeq = 0;
  }
  if (patientSeq == 7) {
    move.obj(patientCar, 143, 128, 2, fPatientDone);
    ++patientSeq;
  }
  if (patientSeq == 6) {
    erase(patient);
    start.cycling(patientCar);
    move.obj(patientCar, 5, 143, 1, fPatientDone);
    unblock();
    ++patientSeq;
  }
  if (patientSeq == 5) {
    move.obj(patient, 25, 140, 1, fPatientDone);
    ++patientSeq;
  }
  if (patientSeq == 4) {
    move.obj(patient, 38, 127, 1, fPatientDone);
    ++patientSeq;
  }
  if (patientSeq == 3) {
    erase(patient);
    patientSeq = 0;
    set(fPatientHere);
    reset(fPatientDone);
  }
  if (patientSeq == 2) {
    move.obj(patient, 55, 117, 1, fPatientDone);
    ++patientSeq;
  }
  if (patientSeq == 1) {
    stop.cycling(patientCar);
    ignore.blocks(patientCar);
    block(14, 140, 34, 144);
    position(patient, 25, 140);
    draw(patient);
    move.obj(patient, 55, 125, 1, fPatientDone);
    ++patientSeq;
  }
}

[ check for ego getting run over
if (!fEgoDead) {
  get.posn(patientCar, carX, carY);
  work1 = carY;
  work1 -= 2;
  if (egoY >= work1 && egoY <= carY) {
    work1 = egoX;
    work1 += 3;
    work2 = carX;
    work2+= 15;
    if (work1 >= carX && egoX <= work2) {
    [ if ego is on or in front of the car, force priority
      if (egoY == carY) {
        get.priority(ego, work1);
        ++work1;
        set.priority.v(ego, work1);
      }
      set(fEgoDead);
      patientSeq = 99;
      stop.motion(patientCar);
      stop.cycling(patientCar);
      load.view(vw.EgoDead);
      set.view(ego, vw.EgoDead);
      egoDir = STOPPED;
      program.control();
      prevent.input();
      [ turn off auto-cycle to allow cycle-at-rest
      work1 = 0;
      set.upper.left(&ego, &work1);
      work1 = 2;
      cycle.time(ego, work1);
      end.of.loop(ego, fDeadDone);
      print("Uh oh! That car just hit you!");
    }
  }
}

[ check for end of death cycle
if (fDeadDone) {
  reset(fDeadDone);
  deathType = 1;
  work1 = 1;
  cycle.time(ego, work1);
  accept.input();
}

[ if dead, skip player input
if (fEgoDead) {
  return();
}

[*****
:handleInput       [ check for input from player
[*****
if (haveInput && !haveMatch && unknownWordNum == 0) {
  [ place said tests here
  if (said("look")) {
    print("You are in the Sierra building parking lot.");
  }
  
}

[ if NOT clicking on the actual toolbar, check for
[ clicks on ingame items (unless wait cursor is active)

if (cursoricon != C_WAIT && controller(cLeftClick)) {
  [ ignore toolbar
  if (mouseX > 13 && mouseX < 146 && mouseY < 26) {
  } else {
    if (cursormode == C_LOOK) {
      [ same as 'look'
      [ check for objects first
      
      [ ego
      if (posn(ego, ON.OBJ, 0, &mouseX, &mouseY)) {
        print("Yes, Drew is a handsome fellow. Easy on the eyes.");
        goto(doneclick);
      }
      
      [ ego car
      if (posn(egoCar, ON.OBJ, 0, &mouseX, &mouseY)) {
        current.loop(egoCar, work1);
        if (work1 > 18) {
          work1 -= 19;
        }
        if (work1 < 8) {
          print("This is your car. You drove it here.");
        } else {
          if (work1 < 12) {
            print("Your minivan is great to have on long road trips like this one.");
          } else {
            if (work1 < 17) {
              print("Your truck doesn't get the best mileage, but it's great for hauling stuff.");
            } else {
              if (work1 == 17) {
                print("This is your red sportcar. You love to go fast!");
              } else {
                print("Yeah, this is your batmobile. How cool is that?");
              }
            }
          }
        }
        goto(doneclick);
      }
      
      [ patient
      if (posn(patient, ON.OBJ, 0, &mouseX, &mouseY)) {
        [ coming or going?
        if ((patientSeq == 4 || patientSeq == 5 ||
             patientSeq == 13 || patientSeq == 14)) {
          print("This person is leaving.");
        } else {
          print("This person must have an appointment. They seem to be in a hurry.");
        }
        goto(doneclick);
      }
      
      [ patient car
      if (posn(patientCar, ON.OBJ, 0, &mouseX, &mouseY)) {
        current.loop(patientCar, work1);
        if (work1 > 18) {
          work1 -= 19;
        }
        if (work1 < 8) {
          print("It's a patient's car.");
        } else {
          if (work1 < 12) {
            print("This minivan belongs to one of the patients.");
          } else {
            if (work1 < 17) {
              print("It's a truck belonging to one of the patients.");
            } else {
              if (work1 == 17) {
                print("This sportscar belongs to one of the patients.");
              } else {
                print("A batmobile? Who drives a batmobile to a doctor's appointment?");
              }
            }
          }
        }
        goto(doneclick);
      }

      [ parked cars
      reset(fClickOn);
      if (mouseX > 26 && mouseX < 41 && mouseY > 153 && mouseY < 165) {
        set(fClickOn);
      }
      if (mouseX > 46 && mouseX < 61 && mouseY > 152 && mouseY < 163) {
        set(fClickOn);
      }
      if (mouseX > 51 && mouseX < 66 && mouseY > 164 && mouseY < 175) {
        set(fClickOn);
      }
      if (mouseX > 106 && mouseX < 121 && mouseY > 138 && mouseY < 149) {
        set(fClickOn);
      }
      if (mouseX > 92 && mouseX < 107 && mouseY > 151 && mouseY < 162) {
        set(fClickOn);
      }
      if(fClickOn) {
        print("There are a several cars in the parking lot. Only one is yours. This is not the one.");
        goto(doneclick);
      }
      
      [ then check background
      [ pixel color can help with discriminating what was clicked
      block(GET.PIXEL, &mouseX, &mouseY, &work1); [ get.pixel(vX, vY, vRESULT)

      if (work1 > 239) {
        [ foreground tree
        print("Giant evergreen trees surround the parking lot.");
        goto(doneclick);
      }
      
      if (work1 > 111) { 
        [ forest/mountain/sky
        print("The forest and mountain are beautiful to look at.");
        goto(doneclick);
      }
      if (work1 > 95) {
        [ lawn/sidewalk
        print("The lawn and shrubbery is well maintained.");
        goto(doneclick);
      }
      if (work1 > 79) {
        [ building
        [ door
        if (mouseX > 53 && mouseX < 60 && mouseY < 127 && mouseY > 112) {
          print("There is a large automatic glass door at the entrance to building.");
        } else {
          print("The building looks almost the same as it did thirty years ago.");
        }
        goto(doneclick);
      }
      [ if nothing else, must be parking lot
      print("It's a parking lot. What else do you want me to say?");
      goto(doneclick);
    }
  
    if (cursormode == C_TALK) {
      [ same as 'talk to'

      [ ego
      if (posn(ego, ON.OBJ, 0, &mouseX, &mouseY)) {
        print("You have nothing to say to yourself.");
        goto(doneclick);
      }
      
      [ ego car
      if (posn(egoCar, ON.OBJ, 0, &mouseX, &mouseY)) {
        print("Your car has nothing to say.");
        goto(doneclick);
      }
      
      [ patient
      if (posn(patient, ON.OBJ, 0, &mouseX, &mouseY)) {
        distance(ego, patient, work1);
        if (work1 <= 20) {
          [ coming or going?
          if ((patientSeq == 4 || patientSeq == 5 ||
               patientSeq == 13 || patientSeq == 14)) {
            print("\"Sorry, gotta run!\"");
          } else {
            print("\"Can't talk now, I'm late for my appointment.\"");
          }
        } else {
          print("The person is too far away to hear you.");
        }
        
        goto(doneclick);
      }
      
      [ patient car
      if (posn(patientCar, ON.OBJ, 0, &mouseX, &mouseY)) {
        print("The car has nothing to say.");
        goto(doneclick);
      }

      [ parked cars
      reset(fClickOn);
      if (mouseX > 26 && mouseX < 41 && mouseY > 153 && mouseY < 165) {
        set(fClickOn);
      }
      if (mouseX > 46 && mouseX < 61 && mouseY > 152 && mouseY < 163) {
        set(fClickOn);
      }
      if (mouseX > 51 && mouseX < 66 && mouseY > 164 && mouseY < 175) {
        set(fClickOn);
      }
      if (mouseX > 106 && mouseX < 121 && mouseY > 138 && mouseY < 149) {
        set(fClickOn);
      }
      if (mouseX > 92 && mouseX < 107 && mouseY > 151 && mouseY < 162) {
        set(fClickOn);
      }
      if(fClickOn) {
        print("The car has nothing to say.");
        goto(doneclick);
      }
      
      [ ignore anything else that's clicked on
      goto(doneclick);
    }

    if (cursormode == C_USE) {
      [ same as 'use item'
      [ ego
      if (posn(ego, ON.OBJ, 0, &mouseX, &mouseY)) {
        print("Please don't touch yourself in public. There may be children watching.");
        goto(doneclick);
      }
      
      [ ego car
      if (posn(egoCar, ON.OBJ, 0, &mouseX, &mouseY)) {
        if (posn(ego, 39, 132, 56, 146)) {
[ TODO: game ending sequences
          [ display a msgbox with 'yes/no' buttons
          set(leaveWindow);
          print("Are you sure you want to \nleave?\n\n");
          draw(btnYes);
          draw(btnNo);
          [ need to force update so the buttons get drawn right now
          force.update(btnYes);
          [ add button text
          set.text.attribute(-1, 0);
          set.text.attribute(BLACK, WHITE);
          display(12, 33, "Yes");
          display(12, 43, "No");
          set.text.attribute(0, -1);
          [ change to default cursor (it will change back 
          [ after dialog box is dismissed)
          if (cursoricon != C_DEFAULT) {
            [ change it
            cursoricon = C_DEFAULT;
            set.key(0, &m1, mouse); [ set.cursor(BYVAR, MSGNUM);
            [ disable click2move
            reset(click2move);
          }
          [ clear input and controller before starting wait loop
          set.key(-1, -1, cLeftClick); [ clear.controller(cNUM);  
          lastChar = 0;
          work1 = 0;
          :wait
          if (!have.key() && mouseBtn != 1) {
            goto(wait);
          }
          [ if left button was pressed, check buttons
          if (mouseBtn == 1) {
            lastChar = 0;
            if (posn(btnYes, ON.OBJ, 0, &mouseX, &mouseY)) {
              work1 = 1;
            } else {
              if (posn(btnNo, ON.OBJ, 0, &mouseX, &mouseY)) {
                work1 = 2;
              }
            }
          } else {
            [ 'ENTER', 'Y' or 'y' for YES
            if ((lastChar == 13 || lastChar == 89 || lastChar == 121)) {
              work1 = 1;
            }
            [ 'ESC', 'N' or 'n' for NO
            if ((lastChar == 27 || lastChar == 78 || lastChar == 110)) {
              work1 = 2;
            }
          }
          [ if wrong keypress, or click was not on button, continue waiting
          if (work1 == 0) {
            goto(wait);
          }
          [ hide buttons, then close print window
          erase(btnYes);
          erase(btnNo);
          close.window();
          [ if 'NO', do nothing; if 'YES', end the game
          if (work1 == 1) {
            erase(ego);
            print("You get in your car and drive away.");
            deathType = 99;
            egoCarSeq = 10;
            set(fEgoDead);
          }
          [ there is a timing glitch in AGI (not sure if it's a DOSBox thing
          [ or inherent to MSDOS/AGI; but on occasion, a second 'ghost click'
          [ will set the left-click controller when the dialog is dismissed
          [ to fix this, skip the controller on the very next cycle
          set(fSkip1);
        } else {
          print("You are too far away to get in your vehicle from here.");
        }
        goto(doneclick);
      }
      
      [ patient
      if (posn(patient, ON.OBJ, 0, &mouseX, &mouseY)) {
        distance(ego, patient, work1);
        if (work1 < 6) {
          print("Get your ands off me, you big jerk!");
        } else {
          print("You are too far away to touch that person.");
        }
        goto(doneclick);
      }
      
      [ patient car
      if (posn(patientCar, ON.OBJ, 0, &mouseX, &mouseY)) {
        [ is car moving?
        if ((patientSeq > 18 || patientSeq == 10 || patientSeq == 11 || 
            patientSeq == 12 || patientSeq == 13 || patientSeq == 7 || 
            patientSeq == 8 || patientSeq == 1)) {
          print("It's not a good idea to touch a moving vehicle.");
        } else {
          distance(ego, patientCar, work1);
          if (work1 < 14) {
            current.loop(patientCar, work1);
            if (work1 > 18) {
              work1 -= 19;
            }
            if (work1 < 8) {
              print("This is not your car. It's locked anyway.");
            } else {
              if (work1 < 12) {
                print("The owner of this minivan would not appreciate you stealing it.");
              } else {
                if (work1 < 17) {
                  print("There's nothing worth taking from this truck.");
                } else {
                  if (work1 == 17) {
                    print("This sportcar is really neat, but that's no reason to steal it.");
                  } else {
                    print("Yikes! This batmobile has an anti-theft system!");
  [ TODO: add death sequence for touching the batmobile
                    deathType = 5;
                  }
                }
              }
            }
          } else {
            print("You are too far away to touch that vehicle.");
          }
        }
        goto(doneclick);
      }

      [ parked cars
      reset(fClickOn);
      if (mouseX > 26 && mouseX < 41 && mouseY > 153 && mouseY < 165) {
        set(fClickOn);
      }
      if (mouseX > 46 && mouseX < 61 && mouseY > 152 && mouseY < 163) {
        set(fClickOn);
      }
      if (mouseX > 51 && mouseX < 66 && mouseY > 164 && mouseY < 175) {
        set(fClickOn);
      }
      if (mouseX > 106 && mouseX < 121 && mouseY > 138 && mouseY < 149) {
        set(fClickOn);
      }
      if (mouseX > 92 && mouseX < 107 && mouseY > 151 && mouseY < 162) {
        set(fClickOn);
      }
      if(fClickOn) {
        print("There's nothing you can do with this car.");
        goto(doneclick);
      }
      
      [ then check background
      [ pixel color can help with discriminating what was clicked
      block(GET.PIXEL, &mouseX, &mouseY, &work1); [ get.pixel(vX, vY, vRESULT)

      if (work1 > 239) {
        [ foreground tree
        print("The trees are covered in sap. You should probably wash your hands when you get a chance.");
[ TODO: set flag to indicate hands dirty; can be washed in sink in closet.
        goto(doneclick);
      }
      
      if (work1 > 111) { 
        [ forest/mountain/sky
        [ nothing
        goto(doneclick);
      }
      if (work1 > 95) {
        [ lawn/sidewalk
        print("There's nothing you can do with the shrubbery or lawn. Leave it be.");
        goto(doneclick);
      }
      if (work1 > 79) {
        [ building
        if (egoX < 71 && egoY < 121) {
          [ door
          if (mouseX > 53 && mouseY < 60 && mouseY > 113) {
            print("The door will open automatically when you approach.");
          } else {
            print("You run your hands over the weathered building exterior. It's rough.");
          }
        } else {
          print("You are not close enough to touch the building.");
        }
      }
    }
    
    :doneClick
    set.key(-1, -1, cLeftClick); [ clear.controller(cNUM);  
  }
}

[*****
:exit              [  test for leaving the room
[*****

[ add exit checks here (or use layout editor)

if (egoHitSpecial) {
  [ show wait cursor
  cursoricon = C_WAIT;
  set.key(1, &cursoricon, mouse); [ set.cursor(BYVAR, MSGNUM);
  [ fade out, then change room
  block(FADE.OUT, 0, FADECOUNT, BLACK); [ fade.out(BYVAR, DELAY, COLOR)
  [ move to lobby
  new.room(rm.Lobby);  [ ##LE001##
}

return();


[ **************************************
[ DECLARED MESSAGES
[ **************************************
#message 1 "%g40"
#message 2 "%g41"
#message 3 "%g42"
#message 4 "%g43"
#message 5 "%g44"
#message 6 "%g45"
#message 7 "You are in the Sierra building parking lot."
#message 8 "You see nothing of interest."
#message 9 "There is no one here to talk to."
#message 10 "There is nothing to manipulate here."