[ ********************************************************************
[
[ rm.ParkingLot
[
[ 
[
[ ********************************************************************

#define egoCar        o1

#define openSequence v220

#define fCarDone     f220


if (newRoom) {
  [ run initialization code
  call(lgc.RoomInit);
  
  [ this is the first cycle through this room
  [ load, draw and discard the picture resource for the current room
  load.pic(currentRoom);
  draw.pic(currentRoom);
  discard.pic(currentRoom);
  
  [ the horizon defines the upper limit of ego's movement
  set.horizon(117);
  
  load.view(vw.Cars);
  [ add permanently parked cars
  #define tmpView     v220
  #define tmpLoop     v221
  #define tmpCel      v222
  #define tmpX        v223
  #define tmpY        v224
  #define tmpPri      v225
  #define tmpMgn      v226
 
  [ parking spot 1
  tmpView = vw.Cars;
  tmpLoop = car0car1;
  tmpLoop /= 16;
  tmpLoop += 12;
  tmpCel = 0;
  tmpX = 106;
  tmpY = 141;
  tmpPri = 13;
  tmpMgn = 4;
  add.to.pic.v(tmpView, tmpLoop, tmpCel, tmpX, tmpY, tmpPri, tmpMgn);
  [ parking spot 2
  tmpLoop = car0car1;
  block(BIT.AND, 0, &tmpLoop, 15); [ bit.and(BYVAL, VAR, AMOUNT)
  tmpX = 92;
  tmpY = 154;
  tmpPri = 14;
  add.to.pic.v(tmpView, tmpLoop, tmpCel, tmpX, tmpY, tmpPri, tmpMgn);
  [ parking spot 3
  tmpLoop = car2car3;
  tmpLoop /= 16;
  tmpLoop += 12;
  tmpX = 51;
  tmpY = 167;
  tmpPri = 15;
  add.to.pic.v(tmpView, tmpLoop, tmpCel, tmpX, tmpY, tmpPri, tmpMgn);
  [ parking spot 4
  tmpLoop = car2car3;
  block(BIT.AND, 0, &tmpLoop, 15); [ bit.and(BYVAL, VAR, AMOUNT)
  tmpLoop += 12;
  tmpX = 46;
  tmpY = 155;
  tmpPri = 14;
  add.to.pic.v(tmpView, tmpLoop, tmpCel, tmpX, tmpY, tmpPri, tmpMgn);
  [ parking spot 5
  tmpLoop = car4car5;
  tmpLoop /= 16;
  tmpX = 26;
  tmpY = 156;  
  tmpPri = 0;
  add.to.pic.v(tmpView, tmpLoop, tmpCel, tmpX, tmpY, tmpPri, tmpMgn);
  
  [ ego's car
  animate.obj(egoCar);
  tmpLoop = car4car5;
  block(BIT.AND, 0, &tmpLoop, 15); [ bit.and(BYVAL, VAR, AMOUNT)
  set.view(egoCar, vw.Cars);
  set.loop.v(egoCar, tmpLoop);
    
  [ tiny ego view
  load.view(vw.EgoSmall);
  set.view(ego, vw.EgoSmall);
  
  [ if starting (coming from intro screen)
  if (previousRoom == rm.Title) {
    [ begin opening sequence
    openSequence = 1;
  } else {
    [ skip opening sequence
    openSequence = 0;
    [ car is in parking spot
    position(egoCar, 41, 143);
    draw(egoCar);
    stop.update(egoCar);
    [ if restarting 
    if (previousRoom == 0)  {
      [ add ego next to car
      position(ego, 48, 144);
    } else {
      [ coming from lobby
      position(ego, 54, 121);
    }
    egodir = STOPPED;
    draw(ego);
  }
  
  [ add toolbar buttons
  load.view(vw.Toolbar);
  call(lgc.InitToolbar);
  
  [ display the picture on screen
  show.pic();
  [ fade in
  block(FADE.IN, 0, 25, 0); [ fade.in(BYVAR, DELAY, COLOR)
  [ restore cursor
  cursoricon = cursormode;
  set.key(1, &cursoricon, mouse); [ set.cursor(BYVAR, MSGNUM);
  return();
}

if (openSequence) {
  if (openSequence == 1) {
    [ move car to parking spot
    ++openSequence;
    position(egoCar, 0, 131);
    draw(egoCar);
    move.obj(egoCar, 41, 143, 1, fCarDone);
    print("At long last, Drew has finally made it to Oakhurst, "
          "California to visit the original Sierra On Line headquarters "
          "building.");
    print("It has been a long drive, but Drew is super excited as he "
          "pulls into the parking lot.");
  }
  
  if (openSequence == 2 && fCarDone) {
    [ ego gets out
    reset(fCarDone);
    openSequence = 0;
    stop.update(egoCar);
    position(ego, 48, 144);
    draw(ego);
    print("The building is now a medical office. There aren't too many "
          "cars in the parking lot. So Drew decides to go inside and "
          "take a look around.");
    print("Who knows? Maybe he might find some original Sierra memorabilia "
          "or other signs of long past gaming history.");  
  }
  [ begin game
  return();
}
[*****
:handleInput       [ check for input from player
[*****
if (haveInput && !haveMatch && unknownWordNum == 0) {
  [ place said tests here
  if (said("look")) {
    print("You are in the Sierra building parking lot.");
  }
  
}

[ toolbar button checks
if (controller(cLeftClick)) {
  if (cursormode == C_LOOK) {
    [ same as 'look'
    if (mouseY > 25) {
      print("You are in the Sierra building parking lot.");
      set.key(-1, -1, cLeftClick); [ clear.controller(cNUM);
    }
  }

  if (cursormode == C_TALK) {
    [ same as 'talk to'
    if (mouseY > 25) {
      print("There is no one here to talk to.");
      set.key(-1, -1, cLeftClick); [ clear.controller(cNUM);
    }
  }

  if (cursormode == C_USE) {
    [ same as 'use item'
    if (mouseY > 25) {
      print("There is nothing to manipulate here.");
      set.key(-1, -1, cLeftClick); [ clear.controller(cNUM);
    }
  }
}

[*****
:noInput           [  all non-input related code goes here 
[*****

[ paeked cars in right parking lot don't quite align with priority bands
get.posn(ego, work1, work2);
if (work1 > 102 && work1 < 121 && work2 > 141 && work2 < 145) {
  set.priority(ego, 13);
} else {
  if (work1 > 88 && work1 < 108 && work2 >154 && work2 < 157) {
    set.priority(ego, 14);
  } else {
    release.priority(ego);
  }
}

[*****
:exit              [  test for leaving the room
[*****

[ add exit checks here (or use layout editor)

if (egoHitSpecial) {
  [ show wait cursor
  cursoricon = C_WAIT;
  set.key(1, &cursoricon, mouse); [ set.cursor(BYVAR, MSGNUM);
  [ fade out, then change room
  block(FADE.OUT, 0, FADECOUNT, BLACK); [ fade.out(BYVAR, DELAY, COLOR)
  [ move to lobby
  new.room(rm.Lobby);  [ ##LE001##
}

return();


[ **************************************
[ DECLARED MESSAGES
[ **************************************
#message 1 "%g40"
#message 2 "%g41"
#message 3 "%g42"
#message 4 "%g43"
#message 5 "%g44"
#message 6 "%g45"
#message 7 "You are in the Sierra building parking lot."
#message 8 "You see nothing of interest."
#message 9 "There is no one here to talk to."
#message 10 "There is nothing to manipulate here."