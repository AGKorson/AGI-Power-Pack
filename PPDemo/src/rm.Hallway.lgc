[*********************************************************************
[
[ rm.Hallway
[
[  Four doors- a restroom (will never open; it's always 'occupied'),
[ a doctor's office (never opens, doctor is always out), and an exam
[ room (will open, but ego interrupts an exam, and the nurse will slam
[ door shut). Repeated attempts to enter exam room will get ego thrown
[ out of building, and game will end in a loss. Last door is a janitor
[ closet. Ego can go through that door to enter the hallway. Failing
[ to close the door while going further into the 'hidden' area will
[ result in ego getting trapped (i.e. lose game).
[
[*********************************************************************

[ power pack support
#include "powerpack.txt"

[***************************************
[ LOCAL DEFINES
[***************************************
#define oClosetDoor    o1
#define oExamDoor      o2
#define oReceptionist  o3
#define oNurse         o4
#define oSecurity      o3 [ receptionist and security guard never on screen at same time

#define fDoorDone      f220
#define clickOn        f221
#define examDoorDone   f222

#define examDoorSeq    v220
#define    SHUT         0
#define    OPENED       1
#define    NURSETURN    2
#define    NURSETALK    3
#define    OPEN4        4
#define gExamCount     v221
#define arrestSeq      v222
#define    NOARREST     0
#define    COPARRIVES   1
#define    GOTOEGO      2
#define    TURNTOEGO    3
#define    CUFFEGO      4
#define    EGOWALKS     5
#define    ESCORT1      6
#define    SHUTDOOR     7
#define    ESCORT2      8
#define    ARRESTED     9
#define arrestCounter  v223

[***************************************
[ FIRST CYCLE ONLY
[***************************************
if (newRoom) {
  [ load, draw and discard the picture resource for the current room
  load.pic(currentRoom);
  draw.pic(currentRoom);
  discard.pic(currentRoom);
  
  [ the horizon defines the upper limit of ego's movement
  set.horizon(0);
  
  [ add toolbar buttons
  load.view(vw.ButtonsDown);
  call(lgc.InitToolbar);
  
  [ art work used in room
  load.view(vw.HallwayArt);
  load.view(vw.Nurse);
  
  [ sound effects and music
  load.sound(s.DoorOpen);
  load.sound(s.DoorClose);
  load.sound(s.CallCops);
  load.sound(s.PerpWalk);
  
  [ add the two doors that don't open
  add.to.pic(vw.HallwayArt, 1, 0, 86, 132, 12,  4);
  add.to.pic(vw.HallwayArt, 1, 0, 126, 132, 12, 4);
    
  [ closet door
  animate.obj(oClosetDoor);
  set.view(oClosetDoor, vw.HallwayArt);
  set.loop(oClosetDoor, 0);
  set.cel(oClosetDoor, 0);
  stop.cycling(oClosetDoor);
  ignore.objs(oClosetDoor);
  set.priority(oClosetDoor, 12);
  if (closetopen) {
    set.cel(oClosetDoor, 4);
  }
  position(oClosetDoor, 18, 142);
  draw(oClosetDoor);
  
  [ exam room door
  animate.obj(oExamDoor);
  set.view(oExamDoor, vw.HallwayArt);
  set.loop(oExamDoor, 1);
  set.cel(oExamDoor, 0);
  stop.cycling(oExamDoor);
  ignore.objs(oExamDoor);
  ignore.blocks(oExamDoor);
  set.priority(oExamDoor, 12);
  position(oExamDoor, 47, 132);
  draw(oExamDoor);
  
  [ nurse
  animate.obj(oNurse);
  set.view(oNurse, vw.Nurse);
  random(0, 1, work1);
  set.loop.v(oNurse, work1);
  set.cel(oNurse, 8);
  stop.cycling(oNurse);
  ignore.objs(oNurse);
  ignore.blocks(oNurse);
  set.priority(oNurse, 11);
  position(oNurse, 49, 131);
  [don't draw yet
  
  [ ego  
  if (previousRoom == rm.Closet) {
    position(ego, 22, 141);
    egodir = STOPPED;
    set.loop(ego, 0);
  } else {
    [ if ego is in hall without permission
    if (!allowedPastLobby) {
      [ add receptionist
      load.view(vw.ReceptionistWalk);
      animate.obj(oReceptionist);
      set.view(oReceptionist, vw.ReceptionistWalk);
      set.loop(oReceptionist, 0);
      stop.cycling(oReceptionist);
      position(oReceptionist, 115, 143);
      draw(oReceptionist);
    }
    position(ego, 151, 139);
    egodir = STOPPED;
    set.loop(ego, 1);
  }
  
  [ add ego to the room
  draw(ego);
  
  [ display the picture on screen
  show.pic();
  [ fade in
  block(FADE.IN, BYNUM, FADECOUNT, BLACK); [ fade.in(FN_MODE, DELAY, COLOR)
  [ restore cursor
  cursoricon = cursormode;
  set.key(BYVAR, &cursoricon, mouse); [ set.cursor(FN_MODE, MSGNUM)
}

[***************************************
[ NON-INPUT CODE 
[***************************************

[ if ego is not allowed
if (!allowedPastLobby) {
  block(MSGBOX.COLOR, LT_MAGENTA, MAGENTA, WHITE); [ msgbox.color(BORDER, FG, BG)
  print("Excuse me sir! Only patients are allowed past the lobby. Please go back.");
  block(MSGBOX.COLOR.V, &msgBoxBorder, &msgBoxFG, &msgBoxBG); [ msgbox.color.v(vBORDER, vFG, vBG)
  goto(exit);
}

[ if ego is being escorted from the premises
if (arrestSeq > NOARREST) {
  if (arrestSeq == COPARRIVES) {
    [ cop appears
    animate.obj(oSecurity);
    load.view(vw.Security);
    set.view(oSecurity, vw.Security);
    position(oSecurity, 153, 140);
    work1 = AUTO_CYCLE;
    set.upper.left(&oSecurity, &work1); [ auto.cycle(oSOBJ, vMODE)
    draw(oSecurity);
    get.posn(ego, work1, work2);
    work2 += 2;
    work3 = 1;
    move.obj.v(oSecurity, work1, work2, work3, examDoorDone);
    arrestSeq = GOTOEGO;
  }
  if (arrestSeq == GOTOEGO && examDoorDone) {
    [ turn to ego
    get.posn(ego, work1, work2);
    ++work2;
    work3 = 1;
    move.obj.v(oSecurity, work1, work2, work3, examDoorDone);
    work1 = egoX;
    arrestSeq = TURNTOEGO;
  }
  if (arrestSeq == TURNTOEGO && examDoorDone) {
    [ 'handcuff' ego
    arrestSeq = CUFFEGO;
    arrestCounter = 15;
  }
  if (arrestSeq == CUFFEGO) {
    if (arrestCounter > 0) {
      --arrestCounter;
    } else {
      arrestSeq = EGOWALKS;
    }
  }
  if (arrestSeq == EGOWALKS) {
    [ start perp-walk music
    [ (sound settings are already correct)
    sound(s.PerpWalk, soundDone);
    set(playSound);
    [ ego starts walking
    load.view(vw.EgoArrest);
    set.view(ego, vw.EgoArrest);
    work1 = egoX;
    work2 = egoY;
    work1 += 7;
    work3 = 1;
    move.obj.v(ego, work1, work2, work3, examDoorDone);
    set.loop(oSecurity, 0);
    arrestSeq = ESCORT1;
  }
  if (arrestSeq == ESCORT1 && examDoorDone) {
    [ cop escorts ego off screen
    move.obj(ego, 159, 138, 1, examDoorDone);
    move.obj(oSecurity, 159, 140, 1, examDoorDone);
    arrestSeq = SHUTDOOR;
  }
  if (arrestSeq == SHUTDOOR && posn(ego, 65, 134, 159, 148)) {
    [ nurse shuts door
    reverse.loop(oExamDoor, examDoorDone);
    normal.cycle(oNurse);
    arrestSeq = ESCORT2;
  }
  if (arrestSeq == ESCORT2 && edgeEgoHit == RIGHT_EDGE) {
    [ done
    erase(ego);
    erase(oSecurity);
    deathType = DT_ARRESTED;
    arrestSeq = ARRESTED;
    stop.sound();
    [ restore cursor
    cursoricon = cursormode;
    set.key(BYVAR, &cursoricon, mouse); [ set.cursor(FN_MODE, MSGNUM)
  }
  if (soundDone && arrestSeq >= ESCORT1 && arrestSeq != ARRESTED) {
    [ continue perp-walk sound
    sound(s.PerpWalk, soundDone);
    set(playSound);
  }
  return();
}

[*******************
[ CLOSET DOOR
[*******************
if (fDoorDone) {
  reset(fDoorDone);
  if (closetopen) {
    reset(closetopen);
  } else {
    set(closetopen);
  }
}
    
[*******************
[ EXAM ROOM DOOR
[*******************
if (examDoorDone) {
  reset(examDoorDone);
  if (examDoorSeq == OPENED) {
    [ nurse turns around
    examDoorSeq = NURSETURN;
    reverse.loop(oNurse, examDoorDone);
    goto(doneEDoorSeq);
  }
  if (examDoorSeq == NURSETURN) {
    block(MSGBOX.COLOR, LT_BLUE, BLUE, WHITE); [ msgbox.color(BORDER, FG, BG)
    if (gExamCount < 4) {
      examDoorSeq = NURSETALK;
      if (gExamCount == 0) {
        print("I'm sorry, I'm conducting a patient exam right now, you can't come in.");
      }
      if (gExamCount == 1) {
        print("Hey! Close that door, I'm in the middle of a patient exam!");
      }
      if (gExamCount == 2) {
        print("I said close that door! You can't come in here!");
      }
      if (gExamCount == 3) {
        print("Please stop interrupting me, or I will call security!");
      }
      ++gExamCount;
      [ nurse closes the door
      reverse.loop(oExamDoor, examDoorDone);
      normal.cycle(oNurse);
      [ only play sound effects if walkman not in use
      if (!playWalkman) {
        [ play door-close sound, using current sound settings
        call(lgc.SetSound);
        sound(s.DoorClose, soundDone);
        set(playSound);
      }
    } else {
      print("I asked you to stop interrupting!! Security!!!");
      prevent.input();
      program.control();
      [ switch to wait cursor
      [ show wait cursor
      cursoricon = C_WAIT;
      set.key(BYVAR, &cursoricon, mouse); [ set.cursor(FN_MODE, MSGNUM)
      set(disableGameFunctions);
      arrestSeq = COPARRIVES;
      [ if walkman in use, stop it
      if (playWalkman) {
        reset(playWalkman);
        stop.sound();
        reset(musicDone);
      }
      [ play call-cops music, using current sound settings
      call(lgc.SetSound);
      sound(s.CallCops, soundDone);
      set(playSound);
    }
    block(MSGBOX.COLOR.V, &msgBoxBorder, &msgBoxFG, &msgBoxBG); [ msgbox.color.v(vBORDER, vFG, vBG)
    goto(doneEDoorSeq);
  }
  if (examDoorSeq == NURSETALK) {
    accept.input();
    player.control();
    erase(oNurse);
    examDoorSeq = SHUT;
  }
}
:doneEDoorSeq

[***************************************
[ PROCESS PLAYER INPUT
[***************************************
if (haveInput && !haveMatch && unknownWordNum == 0) {
  if (said("look")) {
    print("The floors and walls of this hallway are clean and bright, as you would expect in a medical facility.");
    print("There several doors leading to other rooms.");
  }
   
  if (said("look", "door")) {
    [ near closet?
    if (posn(ego, 12, 129, 29, 148)) {
      print("The closet door at the end of the hall has a sign on it that "
            "says \"Please keep this door closed.\"");
    } else {
      [ near exam door?
      if (posn(ego, 40, 132, 60, 138)) {
        print("This door leads to one of the exam rooms.");
      } else {
        [ near bathroom?
        if (posn(ego, 80, 132, 100, 138)) {
          print("This is the door to the restroom.");
        } else {
          [ near office?
          if (posn(ego, 120, 132, 140, 138)) {
            print("It looks like a typical office door.");
          } else {
            print("There are several doors along the wall, and a closet door at the end of the hallway.");
          }
        }
      }
    }
  }
  if (said("open", "door")) {
    [ near closet?
    if (posn(ego, 12, 129, 29, 148)) {
      if (closetopen) {
        print("The closet door is already open.");
      } else {
        goto(openclosetdoor);
      }
    } else {
      [ near exam door?
      if (posn(ego, 40, 132, 60, 138)) {
        goto(openexamdoor);
      } else {
        [ near bathroom?
        if (posn(ego, 80, 132, 100, 138)) {
          print("The door is locked. The room must be occupied.");
        } else {
          [ near office?
          if (posn(ego, 120, 132, 140, 138)) {
            print("The office door is locked.");
          } else {
            print("Move closer.");
          }
        }
      }
    }
  }
  if (said("close", "door")) {
    [ near closet?
    if (posn(ego, 12, 129, 29, 148)) {
      if (closetopen) {
        goto(closeclosetdoor);
      } else {
        print("The closet door is already closed.");
      }
    } else {
      [ near exam door, bathroom, office?
      if (posn(ego, 40, 132, 60, 138)) {
         print("The exam room door is already closed.");
      } else {
       if (posn(ego, 80, 132, 100, 138)) {
          print("The bathroom door is already closed.");
        } else {
          if (posn(ego, 120, 132, 140, 138)) {
            print("The office door is already closed.");
          } else {
            print("Move closer.");
          }
        }
      }
    }
  }
  if (said("unlock", "door")) {
    [ near closet?
    if (posn(ego, 12, 129, 29, 148)) {
      if (closetopen) {
        print("The closet door is already open.");
      } else {
        print("The door is not locked.");
      }
    } else {
      [ near exam door?
      if (posn(ego, 40, 132, 60, 138)) {
        print("The door is not locked.");
      } else {
        [ near bathroom?
        if (posn(ego, 80, 132, 100, 138)) {
          print("It's locked from the inside; someone must be in there.");
        } else {
          [ near office?
          if (posn(ego, 120, 132, 140, 138)) {
            print("You don't have a key to unlock this door.");
          } else {
            print("Move closer.");
          }
        }
      }
    }
  }
  if (said("knock", "on", "door")) {
    [ near closet?
    if (posn(ego, 12, 129, 29, 148)) {
      if (closetopen) {
        print("The closet door is already open.");
      } else {
        print("KNOCK! KNOCK!");
        print("There is no answer.");
      }
    } else {
      [ near exam door?
      if (posn(ego, 40, 132, 60, 138)) {
        print("KNOCK! KNOCK!");
        block(MSGBOX.COLOR, LT_BLUE, BLUE, WHITE); [ msgbox.color(BORDER, FG, BG)
        print.at("\"I'm conducting an exam. Please keep out.\"", 8, 13, 30);
        block(MSGBOX.COLOR.V, &msgBoxBorder, &msgBoxFG, &msgBoxBG); [ msgbox.color.v(vBORDER, vFG, vBG)
      } else {
        [ near bathroom?
        if (posn(ego, 80, 132, 100, 138)) {
          goto(knockbathroom);
        } else {
          [ near office?
          if (posn(ego, 120, 132, 140, 138)) {
            goto(knockoffice);
          } else {
            print("Move closer.");
          }
        }
      }
    }
  }
  if ((said("hit", "door") || said("break", "down", "door"))) {
    [ near closet?
    if (posn(ego, 12, 129, 29, 148)) {
      if (closetopen) {
        print("The closet door is already open.");
      } else {
        print("There is no need to break down the door. Just open it.");
      }
    } else {
      [ near exam door?
      if (posn(ego, 40, 132, 60, 138)) {
        print("You don't need to break down the door.");
      } else {
        [ near bathroom?
        if (posn(ego, 80, 132, 100, 138)) {
          print("Why would you do that when someone is in there?");
        } else {
          [ near office?
          if (posn(ego, 120, 132, 140, 138)) {
            print("You don't need to break down the door.");
          } else {
            print("Move closer.");
          }
        }
      }
    }
  }
  
  if (said("look", "closet", "door")) {
    print("The closet door at the end of the hall has a sign on it that "
          "says \"Please keep this door closed.\"");
  }
  if (said("open", "closet", "door")) {
    if (posn(ego, 12, 129, 29, 148)) {
      if (closetopen) {
        print("The closet door is already open.");
      } else {
        goto(openclosetdoor);
      }
    } else {
      print("Move closer.");
    }
  }
  if (said("close", "closet", "door")) {
    if (posn(ego, 12, 129, 29, 148)) {
      if (closetopen) {
        goto(closeclosetdoor);
      } else {
        print("The closet door is already closed.");
      }
    } else {
      print("Move closer.");
    }
  }
  if (said("unlock", "closet", "door")) {
    if (posn(ego, 12, 129, 29, 148)) {
      print("The door is not locked.");
    } else {
      print("Move closer.");
    }
  }
  if (said("knock", "on", "closet", "door")) {
    if (posn(ego, 12, 129, 29, 148)) {
      if (closetopen) {
        print("The closet door is already open.");
      } else {
        print("KNOCK! KNOCK!");
        print("There is no answer.");
      }
    } else {
      print("Move closer.");
    }
  }
  if ((said("hit", "closet", "door") || said("break", "down", "closet", "door"))) {
    if (posn(ego, 12, 129, 29, 148)) {
      if (closetopen) {
        print("The closet door is already open.");
      } else {
        print("There is no need to break down the door. Just open it.");
      }
    } else {
      print("Move closer.");
    }
  }

  if (said("look", "exam", "door")) {
    if (posn(ego, 40, 132, 60, 138)) {
      print("This door leads to one of the exam rooms.");
    } else {
      print("Move closer.");
    }
  }
  if (said("open", "exam", "door")) {
    if (posn(ego, 40, 132, 60, 138)) {
      goto(openexamdoor);
    } else {
      print("Move closer.");
    }
  }
  if (said("close", "exam", "door")) {
    if (posn(ego, 40, 132, 60, 138)) {
      print("The exam room door is already closed.");
    } else {
      print("Move closer.");
    }
  }
  if (said("unlock", "exam", "door")) {
    if (posn(ego, 40, 132, 60, 138)) {
      print("The door is not locked.");
    } else {
      print("Move closer.");
    }
  }
  if (said("knock", "on", "exam", "door")) {
    if (posn(ego, 40, 132, 60, 138)) {
      print("KNOCK! KNOCK!");
      block(MSGBOX.COLOR, LT_BLUE, BLUE, WHITE); [ msgbox.color(BORDER, FG, BG)
      print.at("\"I'm conducting an exam. Please keep out.\"", 8, 13, 30);
      block(MSGBOX.COLOR.V, &msgBoxBorder, &msgBoxFG, &msgBoxBG); [ msgbox.color.v(vBORDER, vFG, vBG)
    } else {
      print("Move closer.");
    }
  }
  if ((said("hit", "exam", "door") || said("break", "down", "exam", "door"))) {
    if (posn(ego, 40, 132, 60, 138)) {
      print("You don't need to break down the door.");
    } else {
      print("Move closer.");
    }
  }

  if (said("look", "bathroom", "door")) {
    if (posn(ego, 80, 132, 100, 138)) {
      print("This is the door to the restroom.");
    } else {
      print("Move closer.");
    }
  }
  if (said("open", "bathroom", "door")) {
    if (posn(ego, 80, 132, 100, 138)) {
      print("The door is locked. The room must be occupied.");
    } else {
      print("Move closer.");
    }
  }
  if (said("close", "bathroom", "door")) {
   if (posn(ego, 80, 132, 100, 138)) {
      print("The bathroom door is already closed.");
    } else {
      print("Move closer.");
    }
  }
  if (said("unlock", "bathroom", "door")) {
    if (posn(ego, 80, 132, 100, 138)) {
      print("It's locked from the inside; someone must be in there.");
    } else {
      print("Move closer.");
    }
  }
  if (said("knock", "on", "bathroom", "door")) {
    if (posn(ego, 80, 132, 100, 138)) {
      goto(knockbathroom);
    } else {
      print("Move closer.");
    }
  }
  if ((said("hit", "bathroom", "door") || said("break", "down", "bathroom", "door"))) {
    if (posn(ego, 80, 132, 100, 138)) {
      print("Why would you do that when someone is in there?");
    } else {
      print("Move closer.");
    }
  }

  if (said("look", "office", "door")) {
    if (posn(ego, 120, 132, 140, 138)) {
      print("It looks like a typical office door.");
    } else {
      print("Move closer.");
    }
  }
  if (said("open", "office", "door")) {
    if (posn(ego, 120, 132, 140, 138)) {
      print("The office door is locked.");
    } else {
      print("Move closer.");
    }
  }
  if (said("close", "office", "door")) {
    if (posn(ego, 120, 132, 140, 138)) {
      print("The office door is already closed.");
    } else {
      print("Move closer.");
    }
  }
  if (said("unlock", "office", "door")) {
    if (posn(ego, 120, 132, 140, 138)) {
      print("You don't have a key to unlock this door.");
    } else {
      print("Move closer.");
    }
  }
  if (said("knock", "on", "office", "door")) {
    if (posn(ego, 120, 132, 140, 138)) {
      goto(knockoffice);
    } else {
      print("Move closer.");
    }
  }
  if ((said("hit", "office", "door") || said("break", "down", "office", "door"))) {
    if (posn(ego, 120, 132, 140, 138)) {
      print("You don't need to break down the door.");
    } else {
      print("Move closer.");
    }
  }

  if (said("go", "in", "closet")) {
    print("If you want to enter the closet, then just do it.");
  }
  if (said("look", "transom")) {
    print("Above each door is a transom that allows light to filter "
          "into the hallway from the room.");
  }
  if (said("climb", "transom")) {
    print("How would you do that? The transoms are high above the doors!");
  }
  if ((said("talk", "nurse") || said("look", "nurse"))) {
    print("The nurse is not in the hallway. She's in the exam room.");
  }
  if ((said("look", "receptionist") || said("talk", "receptionist"))) {
    print("The receptionist is not in the hallway.");
  }
  if ((said("look", "floor") || said("look", "ceiling") ||
       said("look", "wall"))) {
    print("The ceiling, floors and walls of this hallway are clean and bright, as you would expect in a medical facility.");
    print("There several doors leading to other rooms.");
  }
  if ((said("look", "door", "sign") || said("look", "sign") ||
       said("read", "door", "sign") || said("read", "sign"))) {
    [ near closet?
    if (posn(ego, 12, 129, 29, 148)) {
      print("The closet door at the end of the hall has a sign on it that "
            "says \"Please keep this door closed.\"");
    } else {
      [ near exam door?
      if (posn(ego, 40, 132, 60, 138)) {
        print("The door sign says \"Exam Room 1\"");
      } else {
        [ near bathroom?
        if (posn(ego, 80, 132, 100, 138)) {
          print("The door sign indicates this is a unisex bathroom.");
        } else {
          [ near office?
          if (posn(ego, 120, 132, 140, 138)) {
            print("The name plate for this office says \"Dr. Brane, MD\"");
          } else {
            print("The hallway doors have signs next to them, indicating "
                  "their purpose. There is also a sign attached to the "
                  "closet door.");
          }
        }
      }
    }
  }
  if (said("look", "name plate")) {
    [ near office?
    if (posn(ego, 120, 132, 140, 138)) {
      print("The name plate for this office says \"Dr. Brane, MD\"");
    } else {
      print("Move closer.");
    }
  }
  if ((said("look", "note") || said("look", "note", "on", "door") ||
       said("read", "note") || said("read", "note", "on", "door"))) {
    [ near closet?
    if (posn(ego, 12, 129, 29, 148)) {
      print("The closet door at the end of the hall has a sign on it that "
            "says \"Please keep this door closed.\"");
    } else {
      print("Move closer.");
    }
  }
  if ((said("get", "note") || said("get", "note", "on", "door") ||
       said("get", "sign") || said("get", "sign", "on", "door"))) {
     [ near closet?
    if (posn(ego, 12, 129, 29, 148)) {
      print("The sign is firmly attached to the door. You can't remove it.");
    } else {
      print("Move closer.");
    }
 }
  if (said("look", "vent")) {
    print("This vent duct provides a nice stream of cool air to "
          "help keep the building comfortable.");
  }
  if ((said("sniff") || said("sniff", "air"))) {
    print("<sniff>");
    print("Hmm, there is definitely an odor wafting out of the "
          "transom above the bathroom.");
  }
}

[***************************************
[ MOUSE INPUT
[***************************************
[ if cursor is look/talk/use and left-click and NOT 
[ clicking on the actual toolbar, check for clicks
[ on in-game items
if (cursoricon > C_WALK && cursoricon < C_WAIT && 
    controller(cLeftClick) &&
    (mouseX < 14 || mouseX > 145 || mouseY > 17)) {
  [ ignore borders
  if ((mouseX < 13 || mouseX > 151 || mouseY < 55 || mouseY > 148)) {
    goto(doneclick);
  }

  [ look
  if (cursormode == C_LOOK) {
    [ ego
    if (posn(ego, ON.OBJ, OBJ_VISIBLE, &mouseX, &mouseY)) {
      print("You see you.");
      goto(doneclick);
    }
    
    [ vent duct - 68, 75, 78, 83
    if (mouseX > 67 && mouseX < 79 && mouseY > 74 && mouseY < 84) {
      print("This vent duct provides a nice stream of cool air to "
            "help keep the building comfortable.");
      goto(doneclick);
    }
    
    [ doors
    if (mouseX > 17 && mouseX < 25 && mouseY > 100 && mouseY < 141) {
      print("This is a closet door. It has a sign on it that says "
            "\"Please keep this door closed.\"");
      goto(doneclick);
    }
    if (mouseY > 99 && mouseY < 133) {
      [ door 1 - 47, 107, 59, 138
      if (mouseX > 46 && mouseX < 60) {
        print("This door leads to one of the exam rooms.");
        goto(doneclick);
      }
      [ door 2 - 87, 107, 99, 138
      if (mouseX > 86 && mouseX < 100) {
        print("This is the door to the restroom.");
        goto(doneclick);
      }
      [ door 3 - 127, 107, 139, 138
      if (mouseX > 126 && mouseX < 140) {
        print("It looks like a typical office door.");
       goto(doneclick);
      }
    }
    
    [ transom windows - 47/87/127, 95, 59/99/139, 106
    reset(clickOn);
    if (mouseY > 87 && mouseY < 100) {
      if (mouseX > 46 && mouseX < 60) {
        set(clickOn);
      }
      if (mouseX > 86 && mouseX < 100) {
        set(clickOn);
      }
      if (mouseX > 126 && mouseX < 140) {
        set(clickOn);
      }
      if (clickOn) {
        print("A transom at the top of the door allows light to filter into the hallway from the room.");
        if (mouseX > 86 && mouseX < 100) {
          print("And also a slightly unpleasant odor.");
        }
        goto(doneclick);
      }
    }
    
    [ door signs
    [62, 102, 68, 106
    if (mouseX > 61 && mouseX < 69 && mouseY > 101 && mouseY < 107) {
      print("The door sign says \"Exam Room 1\"");
      goto(doneclick);
    }
    [102, 102, 110, 109
    if (mouseX > 101 && mouseX < 111 && mouseY > 101 && mouseY < 110) {
      print("The door sign indicates this is a unisex bathroom.");
      goto(doneclick);
    }
    [142, 102, 148, 106
    if (mouseX > 141 && mouseX < 149 && mouseY > 101 && mouseY < 107) {
      print("The name plate for this office says \"Dr. Brane, MD\"");
      goto(doneclick);
    }
    
    [ nothing specific
    print("The ceiling, floors and walls of this hallway are clean and bright, as you would expect in a medical facility.");
    print("There several doors leading to other rooms.");
    goto(doneclick);
  }
  
  [ talk
  if (cursormode == C_TALK) {
    [ ego
    if (posn(ego, ON.OBJ, OBJ_VISIBLE, &mouseX, &mouseY)) {
      print("You have nothing to say.");
    } else {
      print("There is no one here to talk to.");
    }
    goto(doneclick);
  }
  
  [ use
  if (cursormode == C_USE) {
    [ ego
    if (posn(ego, ON.OBJ, OBJ_VISIBLE, &mouseX, &mouseY)) {
      print("Please don't touch yourself. Someone might see you.");
      goto(doneclick);
    }
    
    [ closet door
    if (posn(oClosetDoor, ON.OBJ, OBJ_VISIBLE, &mouseX, &mouseY)) {
      if (posn(ego, 12, 129, 29, 148)) {
        if (closetopen) {
          :closeclosetdoor
          [ only play sound effects if walkman not in use
          if (!playWalkman) {
            [ play door-open sound, using current sound settings
            call(lgc.SetSound);
            sound(s.DoorClose, soundDone);
            set(playSound);
          }
          reverse.loop(oClosetDoor, fDoorDone);
        } else {
          :openclosetdoor
          [ only play sound effects if walkman not in use
          if (!playWalkman) {
            [ play door-open sound, using current sound settings
            call(lgc.SetSound);
            sound(s.DoorOpen, soundDone);
            set(playSound);
          }
          end.of.loop(oClosetDoor, fDoorDone);
          if (!scoreClosetDoor) {
            set(scoreClosetDoor);
            work1 = 1;
            call(lgc.ScoreHandler);
          }
        }
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }
      
    [ exam room door
    if (posn(oExamDoor, ON.OBJ, OBJ_VISIBLE, &mouseX, &mouseY)) {
      if (posn(ego, 40, 132, 60, 138)) {
        :openexamdoor
        [ only play sound effects if walkman not in use
        if (!playWalkman) {
          [ play open-door sound, using current sound settings
          call(lgc.SetSound);
          sound(s.DoorOpen, soundDone);
          set(playSound);
        }
        examDoorSeq = OPENED;
        end.of.loop(oExamDoor, examDoorDone);
        set.cel(oNurse, 8);
        stop.cycling(oNurse);
        draw(oNurse);
        prevent.input();
        program.control();
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }

    [ other doors
    if (mouseY > 99 && mouseY < 133) {
      [ bathroom door
      if (mouseX > 86 && mouseX < 100) {
        if (posn(ego, 80, 132, 100, 138)) {
          :knockbathroom
          print("KNOCK KNOCK");
          block(MSGBOX.COLOR, LT_GREEN, GREEN, WHITE); [ msgbox.color(BORDER, FG, BG)
          print.at("\"Occupied! I'll be out in a minute.\"",11, 46, 35);
          block(MSGBOX.COLOR.V, &msgBoxBorder, &msgBoxFG, &msgBoxBG); [ msgbox.color.v(vBORDER, vFG, vBG)
          print("<sniff> Hmm, something tells you it might be more than a minute...");
        } else {
          print("Move closer.");
        }
        goto(doneclick);
      }
      [ office door
      if (mouseX > 126 && mouseX < 140) {
        if (posn(ego, 120, 132, 140, 138)) {
          :knockoffice
          print("KNOCK KNOCK");
          print("No answer. And the door is locked. Dr. Brane must be at his castle today.");
        } else {
          print("Move closer.");
        }
        goto(doneclick);
      }
    }

    [ transom windows - 47/87/127, 95, 59/99/139, 106
    reset(clickOn);
    if (mouseY > 86 && mouseY < 100) {
      if (mouseX > 46 && mouseX < 60) {
        set(clickOn);
      }
      if (mouseX > 86 && mouseX < 100) {
        set(clickOn);
      }
      if (mouseX > 126 && mouseX < 140) {
        set(clickOn);
      }
      if (clickOn) {
        print("You can't reach the transoms. They are too high.");
        goto(doneclick);
      }
    }

    [ vent duct - 68, 75, 78, 83
    if (mouseX > 67 && mouseX < 79 && mouseY > 75 && mouseY < 84) {
      print("The vent duct is too high for you to reach.");
      goto(doneclick);
    }
  }
  
  :doneclick
  set.key(CLR.CTRL, CLR.CTRL, cLeftClick); [ clear.controller(cNUM)
}

[***************************************
[ CHECK FOR AN EXIT CONDITION
[***************************************
:exit

if (egoHitSpecial) {
  if (closetopen) {
    [ show wait cursor
    cursoricon = C_WAIT;
    set.key(BYVAR, &cursoricon, mouse); [ set.cursor(FN_MODE, MSGNUM)
    [ fade out, then change room
    block(FADE.OUT, BYNUM, FADECOUNT, BLACK); [ fade.out(FN_MODE, DELAY, COLOR)
    new.room(rm.Closet);  [ ##LE002##
  } else {
    [ don't let ego go through the door
    if (egoDir > 5 && egoDir < 8) {
      egoDir = STOPPED;
    }
  }
}
if ((edgeEgoHit == RIGHT_EDGE || !allowedPastLobby)) {
  [ show wait cursor
  cursoricon = C_WAIT;
  set.key(BYVAR, &cursoricon, mouse); [ set.cursor(FN_MODE, MSGNUM)
  [ fade out, then change room
  block(FADE.OUT, BYNUM, FADECOUNT, BLACK); [ fade.out(FN_MODE, DELAY, COLOR)
  new.room(rm.Lobby);  [ ##LE001##
}
return();

[***************************************
[ DECLARED MESSAGES
[***************************************
#message 1 "%g30"
#message 2 "%g31"
#message 3 "%g32"
#message 4 "%g33"
#message 5 "%g34"
#message 6 "%g35"
#message 7 "%g36"
#message 8 "%g37"
