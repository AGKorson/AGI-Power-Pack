[ ********************************************************************[[ rm.Hallway[[ [[ ********************************************************************#define oClosetDoor    o1#define opendoor     f220#define closedoor    f221#define fDoorDone    f222if (newRoom)  {  [ this is the first cycle through this room  [ load, draw and discard the picture resource for the current room  load.pic(currentRoom);  draw.pic(currentRoom);  discard.pic(currentRoom);    [ do basic room initialization  call(lgc.RoomInit);    [ the horizon defines the upper limit of ego's movement  set.horizon(0);    [ add additional room initialization here    [ add toolbar buttons  load.view(vw.Toolbar);  call(lgc.InitToolbar);    [ load ego view, animate and draw ego  [ this is sometimes handled in logic 0  [ instead of in each individual logic  if (previousRoom == rm.Closet) {    position(ego, 22, 149);    egodir = STOPPED;    set.loop(ego, 0);  } else {    position(ego, 151, 147);    egodir = STOPPED;    set.loop(ego, 1);  }    [ add ego to the room  draw(ego);    [ closet door  load.view(vw.HallwayArt);  animate.obj(oClosetDoor);  set.view(oClosetDoor, vw.HallwayArt);  set.loop(oClosetDoor, 0);  set.cel(oClosetDoor, 0);  stop.cycling(oClosetDoor);  ignore.objs(oClosetDoor);  set.priority(oClosetDoor, 12);  if (closetopen) {    set.cel(oClosetDoor, 4);  }  position(oClosetDoor, 18, 150);  draw(oClosetDoor);    [ display the picture on screen  show.pic();  [ fade in  block(FADE.IN, 0, FADECOUNT, BLACK); [ fade.in(BYVAR, DELAY, COLOR)  [ restore cursor  cursoricon = cursormode;  set.key(1, &cursoricon, mouse); [ set.cursor(BYVAR, MSGNUM);  return();  }[*****:handleInput       [ check for input from player[*****if (haveInput && !haveMatch && unknownWordNum == 0) {  [ place said tests here  if (said("look")) {    print("You see nothing of interest.");  }  if (said("open", "door")) {    set(opendoor);  }  if (said("close", "door")) {    set(closedoor);  }}  [ toolbar button checksif (cursormode == C_LOOK) {  if (controller(cLeftClick)) {    [ same as 'look'    if (mouseY > 25) {      print("There are several doors in this hallway.");      set.key(-1, -1, cLeftClick); [ clear.controller(cLeftClick);    }  }}if (cursormode == C_TALK) {  if (controller(cLeftClick)) {    [ same as 'talk to'    if (mouseY > 25) {      print("There is no one here to talk to.");      set.key(-1, -1, cLeftClick); [ clear.controller(cLeftClick);    }  }}if (cursormode == C_USE) {  if (controller(cLeftClick)) {    [ same as 'use item'    if (mouseY > 25) {      if (posn(oClosetDoor, ON.OBJ, 1, &mouseX, &mouseY)) {        if (closetopen) {          set(closedoor);        } else {          set(opendoor);        }      } else {        print("There is nothing to pick up or use here.");        set.key(-1, -1, cLeftClick); [ clear.controller(cLeftClick);      }    }  }}[*****:noInput           [  all non-input related code goes here [*****[ add other room specific statements hereif (opendoor) {  reset(opendoor);  if (closetopen) {    print("The closet door is already open.");  } else {    if (posn(ego, 12, 137, 29, 156)) {      end.of.loop(oClosetDoor, fDoorDone);    } else {      print("You are not close enough.");    }  }}if (closedoor) {  reset(closedoor);  if (closetopen) {    if (posn(ego, 12, 137, 29, 156)) {      reverse.loop(oClosetDoor, fDoorDone);    } else {      print("You are not close enough.");    }  } else {    print("The closet door is already closed.");  }}if (fDoorDone) {  reset(fDoorDone);  if (closetopen) {    reset(closetopen);  } else {    set(closetopen);  }}    [*****:exit              [  test for leaving the room[*****if (egoHitSpecial) {  if (closetopen) {    [ show wait cursor    cursoricon = C_WAIT;    set.key(1, &cursoricon, mouse); [ set.cursor(BYVAR, MSGNUM);    [ fade out, then change room    block(FADE.OUT, 0, FADECOUNT, BLACK); [ fade.out(BYVAR, DELAY, COLOR)    new.room(rm.Closet);  [ ##LE002##  } else {    [ don't let ego go through the door    if (egoDir > 5 && egoDir < 8) {      egoDir = STOPPED;    }  }}if (edgeEgoHit == RIGHT_EDGE) {  [ show wait cursor  cursoricon = C_WAIT;  set.key(1, &cursoricon, mouse); [ set.cursor(BYVAR, MSGNUM);  [ fade out, then change room  block(FADE.OUT, 0, FADECOUNT, BLACK); [ fade.out(BYVAR, DELAY, COLOR)  new.room(rm.Lobby);  [ ##LE001##}return();[*****[ messages         [  declared messages go here[*****#message 1 "%g40"#message 2 "%g41"#message 3 "%g42"#message 4 "%g43"#message 5 "%g44"#message 6 "%g45"#message 7 "There are several doors in this hallway." 