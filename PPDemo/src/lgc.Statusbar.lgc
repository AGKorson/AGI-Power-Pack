[*********************************************************************
[ 
[ lgc.Statusbar
[ 
[ add score, name of game, and music icons
[
[0         1         2         3         4         5         6         7         ]
[01234567890123456789012345678901234567890123456789012345678901234567890123456789]
[ Score: xxx of yyy       AGI Power Pack Demo Game         hh:mm AM   |ssssssss| ]
[
[*********************************************************************

[ power pack support
#include "powerpack.txt"

[***************************************
[ LOCAL DEFINES
[***************************************
[ none

[***************************************
[ MAIN CODE BLOCK 
[***************************************

[ save colors
set.text.attribute(PUSH.ATTRIBUTES, 0); [ push.attributes()

[ score
set.text.attribute(BLUE, WHITE);
if (negativeScore) {
  display(0, 0, " Score: -%v3 of %v7   ");
} else {
  display(0, 0, " Score: %v3 of %v7    ");
}

[ game title
set.text.attribute(GREEN, WHITE);
display(0, 18, "       AGI Power Pack Demo Game");

[ clock
if (clockOn) {
  clear.text.rect(0, 49, 0, 57, WHITE);
  if (realClock) {
    set.text.attribute(DK_GRAY, WHITE);
    [ update the clock - convert 0-23 into 12-11 am/pm
    work1 = currentHour;
    if (work1 > 11) {
      work1 -= 12;
      s23 = "P";
    } else {
      s23 = "A";
    }
    if (work1 == 0) {
      work1 = 12;
    }
    if (work1 < 10) {
      [ h:mm AM/PM
      display(0, 58, " %v46:%v78|2 %s23M");
    } else {
      [ hh:mm AM/PM
      display(0, 58, "%v46:%v78|2 %s23M");
    }
  } else {
    [ show game time elapsed
    set.text.attribute(BROWN, WHITE);
    if (deathType) {
      [ show last time value (use frozen value stored in s5)
      display(0, 58, "%s5");
    } else {
      [ update game time clock every second
      display(0, 58, "%v13|2:%v12|2:%v11|2 ");
    }
    [ restore default colors
    set.text.attribute(0, POP.ATTRIBUTES); [ pop.attributes()
  }
  [display(0, 66, "     ");
  clear.text.rect(0, 66, 0, 68, WHITE);
} else {
  [display(0, 49, "                      ");
  clear.text.rect(0, 49, 0, 68, WHITE);
}

[ sound status
if (soundOn) {
  set.text.attribute(RED, WHITE);
  if (musicmode == PC_SOUND) {
   s23 = "---------- ";
  } else {
    if (attenuation < 8) {
      s23 = "ฦอออออออ\x0Eต ";
    } else {
      if (attenuation < 16) {
        s23 = "ฦออออออ\x0Eอต ";
      } else {
        if (attenuation < 24) {
          s23 = "ฦอออออ\x0Eออต ";
        } else {
          if (attenuation < 32) {
            s23 = "ฦออออ\x0Eอออต ";
          } else {
            if (attenuation < 40) {
              s23 = "ฦอออ\x0Eออออต ";
            } else {
              if (attenuation < 48) {
                s23 = "ฦออ\x0Eอออออต ";
              } else {
                if (attenuation < 56) {
                  s23 = "ฦอ\x0Eออออออต ";
                } else {
                  s23 = "ฦ\x0Eอออออออต ";
                }
              }
            }
          }
        }
      }
    }  
  }
} else {
  set.text.attribute(LT_GRAY, WHITE);
  s23 = "ฦออออออออต ";
}
display(0, 69, "%s23");

[ restore default colors
set.text.attribute(0, POP.ATTRIBUTES); [ pop.attributes()

return();

[***************************************
[ DECLARED MESSAGES
[***************************************