[ ********************************************************************
[
[ lgc.SaveOptions
[
[ saves sound mode, clock mode, speed and custom instrument
[ values to the ppdemo.cfg settings file

[ first string is sound/clock/speed:
[   ten characters long:
[   abcdefghi
[   a:  0 = sound disabled
[       1 = sound enabled
[   b:  0 = PC single channel
[       1 = 4 channel
[   c:  0 = fm synth
[       1 = midi
[   de: attenuation (00 - 63)
[   f:  0 = no clock
[       1 = display clock
[   g:  0 = game clock
[       1 = real time
[   hi: animationInterval (00 - 99)
[   j:  0 = show intro
[       1 = skip intro
[
[ second string is instrument index values:
[  FM instrument settings (five sets of three-digts)
[  MIDI instruments (three sets of three-digits)
[
[ strings three-seven are the custom FM instrument strings
[
[ ********************************************************************

#define tmp0    v240
#define tmp1    v241
#define tmp2    v242

#define tmpStr1   s21
#define tmpStr2   s22
#define filename  s23

[ set filename
filename = "ppdemo.cfg";

[ update settings
if (soundOn) {
  work1 = 1;
} else {
  work1 = 0;
}
if (!4channelsound) {
  work2 = 0;
  work3 = 0;
} else {
  work2 = 1;
  if (useMIDI) {
    work3 = 1;
  } else {
    work3 = 0;
  }
}
if (clockOn) {
  tmp0 = 1;
} else {
  tmp0 = 0;
}
if (realClock) {
  tmp1 = 1;
} else {
  tmp1 = 0;
}
if (skipIntro) {
  tmp2 = 1;
} else {
  tmp2 = 0;
}

[ blank the output string
tmpStr2 = "                                       ";
[ create sound/clock/speed output (in s23)
[ (use 4channel attenuation value[v101])
tmpStr1 = "%v46%v47%v48%v23|2%v240%v241%v10|2%v242";
[ format it and copy to output string
block(STR.FORMAT, &tmpStr1, &tmpStr2, 0); [ str.format(sINPUT, sRESULT)
[ save output string to file
work1 = &tmpStr2;
block(NEW.FILE, &filename, &work1, &work1); [ new.file(sFILENAME, vSTART, vEND)

[ blank the output string again
tmpStr2 = "                                       ";
[ format the FM values
tmpStr1 = "%v63|3%v64|3%v65|3%v66|3%v67|3";
block(STR.FORMAT, &tmpStr1, &tmpStr2, 0); [ str.format(sINPUT, sRESULT)
[ format the MIDI values
tmpStr1 = "%v68|3%v69|3%v70|3";
block(STR.FORMAT, &tmpStr1, &tmpStr1, 0); [ str.format(sINPUT, sRESULT)
[ add MIDI to FM values
block(STR.CONCAT, &tmpStr2, &tmpStr1, 0); [ sINPUT, sADD)
[ save output string to file
work1 = 1;
work2 = &tmpStr2;
block(SAVE.STRING, &filename, &work1, &work2); [ save.string(sFILENAME, vINDEX, vSTROUT)

[ start with first instrument
work1 = 2;
work2 = &custInst0;
:setinst
  [ now save it to config file
  block(SAVE.STRING, &filename, &work1, &work2); [ save.string(sFILENAME, vINDEX, vSTROUT)
  ++work1;
  ++work2;
[ copy five instrument settings
if (work1 < 7) {
  goto(setinst);
}

return();

[ **************************************
[ DECLARED MESSAGES
[ **************************************
