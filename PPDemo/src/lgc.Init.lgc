[*********************************************************************
[
[ lgc.Init
[
[
[ This logic should only be called once, when the game first starts,
[ or on a restart. It sets up the game for play, including keyboard 
[ controllers, menu adjustments, randomizing the parking lot cars, and
[ other setup functions. The PPDEMO.CFG file is checked for sound/
[ clock/speed settings and sound settings.
[
[*********************************************************************

[ power pack support
#include "powerpack.txt"

[***************************************
[ LOCAL DEFINES
[***************************************
#define tmp0      v220
#define tmp1      v221
#define tmp2      v222
#define tmp3      v223
#define tmp4      v224
#define tmp5      v225
#define vRnd      v232
#define vStyle    v233

#define tmpString0 s22
#define filename   s23
[ reuse s23 as another temporary string
#define tmpString1 s23

[***************************************
[ MAIN CODE BLOCK 
[***************************************

[ for testing, start with DEBUG enabled
set(debugging);
set(enableTrace);

[ check for a game restart
if (gameRestarted) {
  [ for a restart, there are a few things that need to be reset
  disable.item(cDummy);
  set(enableMenu);
  reset(disableGameFunctions);
} else {
  [ some things only happen during initial start
  
  [ sets up the command tracer, 
  trace.info(lgc.TraceInfo, 3, 10);
  [ tracing should only occur in 80col rooms; so it's OK to
  [ set the horizontal position
  trace.info(TRACE.H.POSN, 33, 45); [ trace.h.posn(LEFT, WIDTH)
  
  [ assign controller shortcut keys
  set.key(0, 59, cHelp);             [ F1 - Help
  set.key(0, 60, cToggleSound);      [ F2 - Sound on/off
  set.key(0, 61, cEchoLine);         [ F3 - Echo line
  set.key(0, 62, cChooseItem);       [ F4 - See object
  set.key(0, 63, cSave);             [ F5 - Save game
  set.key(0, 64, cClock);            [ F6 - Clock on/off
  set.key(0, 65, cRestore);          [ F7 - Restore game
  set.key(0, 67, cRestart);          [ F9 - Restart game
  set.key(0, 44, cQuit);             [ ALT-Z - quit game
  set.key(3, 0, cCancelLine);        [ CTRL-C - Clear input line
  set.key(5, 0, cEchoLine);          [ CTRL-E - Echo line
  set.key(9, 0, cStatus);            [ CTRL-I/TAB - inventory
  set.key(19, 0, cToggleSound);      [ CTRL-S - Sound on/off
  set.key(45, 0, cDecrescendo);      [ - - decrease volume
  set.key(43, 0, cCrescendo);        [ + - increase volume
  set.key(27, 0, cMenu);             [ ESC - activate menu
  set.key(0, 115, cSlower);          [ CTRL+LEFT - one tick slower
  set.key(0, 116, cFaster);          [ CTRL+RIGHT - one tick faster
  set.key(1, 1, cLeftClick);         [ mouse left button click
  set.key(1, 2, cRightClick);        [ mouse right button click
  set.key(1, 3, cLeftDblClick);      [ mouse left button dbl-click
  set.key(1, 4, cRightDblClick);     [ mouse right button dbl-click
  set.key(0, 32, cDebugMode);        [ ALT+D - enter debug mode
  set.key(0, 84, cDebugHelp);        [ SHIFT+F1 - show debug help screen
  
  [ gameID can be set without worrying about the game quitting
  [ (it can even be changed during the game!)
  set.game.id("PPD"); 
                         
  [ set up screen configuration (agi's default of 0, 23, 21 is not desired)
  configure.screen(1, 22, 0);
  
  [ assign input prompt and cursor character
  set.string(inputPrompt, ">");
  set.cursor.char(cursor);
  
  [ default mouse variables are sufficient, but you can change them if 
  [ desired:
  [block(CONFIGURE.MOUSE, &mX, &mY, &mBtn); [ configure.mouse(XVAR, YVAR, BTNVAR)
}

[ get settings
call(lgc.GetOptions);

[ enable custom status bar (lgc.Statusbar)
if (clockOn) {
  if (realClock) {
    [ status bar checks realtime minutes
    set.cursor.char(" l27, v3, v7, v23, v99, v78, f9");
  } else {
    [ status bar checks gametime seconds
    set.cursor.char(" l27, v3, v7, v23, v99, v11, f9");
  }
} else {
  [ status bar doesn't check for time
  set.cursor.char(" l27, v3, v7, v23, v99, f9");
}

[ the floppy drive starts out unformatted
s20 = "floppy disk";
block(SET.ITEM, BYNUM, &floppydisk, &s20); [ set.item(FN_MODE, ITEM, STRNEW)

[ set turbo mode (regular mode is never used in the demo)
work1 = TURBO_SPEED;
cycle.time(SET.SPEED, work1); [ toggle.turbo(vMODE)
set(turboMode);

[ set mouse parameters
set(enableDblClick);
dblClickDelay = 9; [ adjust by factor of 3 for turbo mode

[ default cursor
cursormode = C_DEFAULT;
cursoricon = C_DEFAULT;

[ set default msgbox colors
msgBoxBG = WHITE;
msgBoxFG = BLACK;
msgBoxBorder = RED;

[ default password for kw account
kwpassword = "Temp123!";

[ default ego parameters
egoStepSize = 1;
egoStepTime = 1;
egoCycleTime = 1;

[set the max score value for the game
maxScore = MAX_SCORE_VALUE;

[ set palette to AGI default
palette = m3;

[ select ego and parked car models

[ randomize the car body styles
work1 = &tmp0;
work2 = 0;
[ populate style variables with numbers 0 through 11
:loop1
*work1 = work2;
++work1;
++work2;
if (work1 < 232) {
  goto(loop1);
}
[ now 'scramble' them a few times to mix them up
work1 = 0;
:loop2
  [ start with first loop variable
  vStyle = &tmp0;
  :loop3
    [ choose a random loop
    random(0, 11, vRnd);
    [ swap the style value for current variable with
    [ the variable of the random style
    vRnd += 220;
    work2 = *vStyle;
    work3 = *vRnd;
    *vStyle = work3;
    *vRnd = work2;
    [ move to next style variable
    ++vStyle;
  if (vStyle < 232) {
    goto(loop3);
  }
  ++work1;
[ run the scramble code three times
if (work1 < 3) {
  goto(loop2);
}

[ store first six styles for ego car and the five parked cars
car0car1 = tmp0;
car0car1 *= 16;
car0car1 += tmp1;
car2car3 = tmp2;
car2car3 *= 16;
car2car3 += tmp3;
car4car5 = tmp4;
car4car5 *= 16;
car4car5 += tmp5;

[ initial patient locations
patient1Loc = LOC_LOBBY;
patient2Loc = LOC_GONE;
patient3Loc = LOC_GONE;
patient4Loc = LOC_GONE;
set(firstLobbyVisit);

[ casette starts on side A, first track, paused
currentTrack = 1;
reset(playWalkman);

[ start safe dial on a random number
random(0, 39, comboNumber);

return();

[***************************************
[ DECLARED MESSAGES
[***************************************
#message 1 ">"
#message 2 cursor
#message 3 "00000000002A002A00002A2A2A00002A002A2A15002A2A2A15151515153F153F15153F3F3F15153F153F3F3F153F3F3F"
#message 4 "22215909FFFF030F020000"
#message 5 "2F200000FFFF0F0F00030E"
#message 6 "22242100C0C00C0C000000"