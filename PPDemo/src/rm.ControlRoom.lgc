[ ********************************************************************
[ 
[ rm.ControlRoom
[ 
[ An example room with several exits.
[
[ ********************************************************************
[ TODO: more said statements for control room

#define showMOCC         f220
#define showCAISOCC      f221
#define showRANDOCC      f222
#define showICAPOCC      f223
#define showESADOCC      f224
#define showOFROCC       f225
#define showERIDOCC      f226
#define nearTerminal     f227

[ **************************************
[ FIRST CYCLE ONLY
[ **************************************
if (newRoom) {
  [ load, draw and discard the picture resource for the current room
  load.pic(currentRoom);
  draw.pic(currentRoom);
  discard.pic(currentRoom);

  [ add room-specific initialization here
  load.view(vw.CtrlRoomArt);
  if (enableCAISOCC) {
    add.to.pic(vw.CtrlRoomArt, 0, 0, 35, 78, 11, 15);
  } else {
    add.to.pic(vw.CtrlRoomArt, 1, 0, 35, 78, 11, 15);
  }    
  if (enableRANDOCC) {
    add.to.pic(vw.CtrlRoomArt, 0, 1, 98, 78, 10, 15);
  } else {
    add.to.pic(vw.CtrlRoomArt, 1, 1, 98, 78, 10, 15);
  }    
  if (enableICAPOCC) {
    add.to.pic(vw.CtrlRoomArt, 0, 2, 41, 106, 9, 15);
  } else {
    add.to.pic(vw.CtrlRoomArt, 1, 2, 41, 106, 9, 15);
  }    
  if (enableESADOCC) {
    add.to.pic(vw.CtrlRoomArt, 0, 3, 98, 106, 8, 15);
  } else {
    add.to.pic(vw.CtrlRoomArt, 1, 3, 98, 106, 8, 15);
  }    
  if (enableOFROCC) {
    add.to.pic(vw.CtrlRoomArt, 0, 4, 35, 120, 7, 15);
  } else {
    add.to.pic(vw.CtrlRoomArt, 1, 4, 35, 120, 7, 15);
  }    
  if (enableERIDOCC) {
    add.to.pic(vw.CtrlRoomArt, 0, 5, 99, 120, 6, 15);
  } else {
    add.to.pic(vw.CtrlRoomArt, 1, 5, 99, 120, 6, 15);
  }
  
  [ if access system hasn't been reset, door is closed
  if (!resetBaDASS) {
    add.to.pic(vw.CtrlRoomArt, 4, 0, 71, 167, 15, 15);
    block(71, 165, 90, 167);
  }
  
  [ default horizion is 36; adjust it as needed
  set.horizon(120);
  
  [ add toolbar buttons
  load.view(vw.ButtonsDown);
  call(lgc.InitToolbar);
  
  if (previousRoom == rm.Office) {
    position(ego, 15, 149);
  }
  if (previousRoom == rm.StoreRoom) {
    position(ego, 144, 149);
  }
  if (previousRoom == rm.Stairway) {
    position(ego, 74, 161);
  }
  egoDir = STOPPED;
  [ add ego to the room
  draw(ego);
  
  load.sound(s.GetItem);
  load.sound(s.SystemFail);
  
  [ make sure input is on
  accept.input();
  
  [ display the picture on screen
  show.pic();
  [ fade in
  block(FADE.IN, 0, FADECOUNT, BLACK); [ fade.in(BYVAR, DELAY, COLOR)
  [ restore cursor
  cursoricon = cursormode;
  set.key(1, &cursoricon, mouse); [ set.cursor(BYVAR, MSGNUM);
  
  [ if coming from stairwell, and access system not set, 
  if (previousRoom == rm.Stairway && !resetBaDASS) {
    [ play sound if walkman not active
    if ((currentTrack == 0 || currentTrack > 128)) {
      call(lgc.SetSound);
      sound(s.SystemFail, soundDone);
    }
    shake.screen(1);
    work1 = 0;
    :flickerit
      block(FADE.OUT, 0, 2, BLACK); [ fade.out(BYVAR, DELAY, COLOR)
      block(FADE.IN, 0, 1, BLACK); [ fade.in(BYVAR, DELAY, COLOR)
      block(FADE.OUT, 0, 2, WHITE); [ fade.out(BYVAR, DELAY, COLOR)
      block(FADE.IN, 0, 1, WHITE); [ fade.in(BYVAR, DELAY, COLOR)
      ++work1;
    if (work1 < 3) {
      goto(flickerit);
    }
    print("The door slams shut, and the lights in the room flicker violently.");
    print("The old wiring and electrical control systems appear to have malfunctioned!");
  }
  return();
}

[ **************************************
[ EVERY CYCLE
[ **************************************

[ if cursor is look/talk/use and left-click and NOT 
[ clicking on the actual toolbar, check for clicks
[ on in-game items
if (cursoricon > C_WALK && cursoricon < C_WAIT && 
    controller(cLeftClick) &&
    (mouseX < 14 || mouseX > 145 || mouseY > 17)) {
  [ ignore borders
  if ((mouseX < 3 || mouseX > 156 || mouseY < 20 || mouseY > 167)) {
    goto(doneclick);
  }

  [ look
  if (cursormode == C_LOOK) {
    [ ego
    if (posn(ego, ON.OBJ, 1, &mouseX, &mouseY)) {
      print("You see you.");
      goto(doneclick);
    }
    
    [ doorway to stairwell 71, 159, 90, 167
    if (mouseX > 70 && mouseX < 91 && mouseY > 158 && mouseY < 168) {
      [ check for door open/close
      if (resetBaDASS) {
        [ door is open
        print("The door to the stairwell is open.");
      } else {
        print("The door to the stairwell is shut.");
      }
      goto(doneclick);
    }
    
    [ office entrance 4, 103, 15, 148
    if (mouseX > 3 && mouseX < 16 && mouseY > 102 && mouseY < 149) {
      print("This doorway leads to an office.");
      goto(doneclick);
    }
    [ supply room entrance 142, 103, 154, 148
    if (mouseX > 141 && mouseX < 155 && mouseY > 102 && mouseY < 149) {
      print("This doorway leads to a storage room.");
      goto(doneclick);
    }
    
    [ keyboard/mouse 67, 112, 96, 122
    if (mouseX > 66 && mouseX < 97 && mouseY > 111 && mouseY < 123) {
      print("The mouse and keyboard are for controlling the computer terminal.");
      goto(doneclick);
    }
    
    [ control panels
    block(GET.PIXEL, &mouseX, &mouseY, &work1); [ get.pixel(vX, vY, vRESULT) 
    [ priority value indicates which panel
    work1 /= 16;
    if (work1 == 5) {
      [ terminal
      print("This looks like an old style computer terminal display. A "
            "floppy disk drive is located to the right of the display.");
      goto(doneclick);
    }
    if (work1 == 6) {
      [ ERIDOCC
      if (showERIDOCC) {
        print("This is the ERIDOCC module interface display.");
      } else {
        print("This display is showing an error message. It's real purpose "
              "is not known.");
      }
      goto(doneclick);
    }
    if (work1 == 7) {
      [ OFROCC
      if (showOFROCC) {
        print("This is the OFROCC module interface display.");
      } else {
        print("This display is showing an error message. It's real purpose "
              "is not known.");
      }
      goto(doneclick);
    }
    if (work1 == 8) {
      [ ESADOCC
      if (showERIDOCC) {
        print("This is the ERIDOCC module interface display.");
      } else {
        print("This display is showing an error message. It's real purpose "
              "is not known.");
      }
      goto(doneclick);
    }
    if (work1 == 9) {
      [ ICAPOCC
      if (showICAPOCC) {
        print("This is the ICAPOCC module interface display.");
      } else {
        print("This display is showing an error message. It's real purpose "
              "is not known.");
      }
      goto(doneclick);
    }
    if (work1 == 10) {
      [ RANDOCC
      if (showRANDOCC) {
        print("This is the RANDOCC module interface display.");
      } else {
        print("This display is showing an error message. It's real purpose "
              "is not known.");
      }
      goto(doneclick);
    }
    if (work1 == 11) {
      [ CAISOCC
      if (showCAISOCC) {
        print("This is the CAISOCC module interface display.");
      } else {
        print("This display is showing an error message. It's real purpose "
              "is not known.");
      }
      goto(doneclick);
    }

    [ main console 31, 46, 128, 131
    if(mouseX > 30 && mouseX < 129 && mouseY > 45 && mouseY < 132) {
      print("This massive computer control console takes up most of the "
            "room. There is a central terminal station, and six auxillary "
            "display panels.");
      goto(doneclick);
    }
    [ nothing specific
    print("The room is dominated by a large control panel in the center "
          "of the room. There are exits leading to the left and right.");
    goto(doneclick);
  }
  
  [ talk
  if (cursormode == C_TALK) {
    [ ego
    if (posn(ego, ON.OBJ, 1, &mouseX, &mouseY)) {
      print("You have nothing to say.");
    } else {
      print("There is no one here to talk to.");
    }
    goto(doneclick);
  }
  
  [ use
  if (cursormode == C_USE) {
    [ ego
    if (posn(ego, ON.OBJ, 1, &mouseX, &mouseY)) {
      print("Please don't touch yourself. Not even when you're alone.");
      goto(doneclick);
    }
    
    [ floppy drive
    if (mouseX > 82 && mouseX < 104 && mouseY > 82 && mouseY < 105) {
      if (obj.in.box(ego, 64, 133, 104, 138)) {
        work1 = cp.Terminal;
        if (obj.in.room("floppy disk", work1)) {
          [ play sound if walkman not active
          if ((currentTrack == 0 || currentTrack > 128)) {
            call(lgc.SetSound);
            sound(s.GetItem, soundDone);
          }
          print("You undo the door latch and remove the disk.");
          reset(floppyInserted);
          get("floppy disk");
          work1 = 4;
          call(lgc.ScoreHandler);
        } else {
          print("The disk drive is empty.");
        }
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }
    
    reset(nearTerminal);
    if (obj.in.box(ego, 64, 133, 104, 138)) {
      set(nearTerminal);
    }
    
    [ keyboard/mouse 67, 112, 96, 122
    if (mouseX > 66 && mouseX < 97 && mouseY > 111 && mouseY < 123) {
      if (nearTerminal) {
        set(showMOCC);
      } else {
        print("You need to move closer to reach the keyboard and mouse.");
      }
      goto(doneclick);
    }
    
    [ check for control panels
    block(GET.PIXEL, &mouseX, &mouseY, &work1); [ get.pixel(vX, vY, vRESULT) 
    [ priority value indicates which panel
    work1 /= 16;
    if (work1 == 5) {
      [ terminal
      if (nearTerminal) {
        set(showMOCC);
      } else {
        print("Use the mouse and keyboard to interact with this system.");
      }
    }
    if (work1 == 6) {
      [ ERIDOCC
      if (nearTerminal) {
        set(showERIDOCC);
      } else {
        print("Use the mouse and keyboard to interact with this system.");
      }
    }
    if (work1 == 7) {
      [ OFROCC
      if (nearTerminal) {
        set(showOFROCC);
      } else {
        print("Use the mouse and keyboard to interact with this system.");
      }
    }
    if (work1 == 8) {
      [ ESADOCC
      if (nearTerminal) {
        set(showESADOCC);
      } else {
        print("Use the mouse and keyboard to interact with this system.");
      }
    }
    if (work1 == 9) {
      [ ICAPOCC
      if (nearTerminal) {
        set(showICAPOCC);
      } else {
        print("Use the mouse and keyboard to interact with this system.");
      }
    }
    if (work1 == 10) {
      [ RANDOCC
      if (nearTerminal) {
        set(showRANDOCC);
      } else {
        print("Use the mouse and keyboard to interact with this system.");
      }
    }
    if (work1 == 11) {
      [ CAISOCC
      if (nearTerminal) {
        set(showCAISOCC);
      } else {
        print("Use the mouse and keyboard to interact with this system.");
      }
    }
  }

  :doneclick
  set.key(-1, -1, cLeftClick); [ clear.controller(cLeftClick);
}

[ **************************************
[ PROCESS PLAYER INPUT
[ **************************************

[ if player hasn't provided input or if match already found, no need
[ to do said tests
if ((!haveInput || haveMatch)) {
  goto(done);
}
  
[ look
if (said("look")) {
  print("This is the Power Pack control room.");
}

if (said("open", "door")) {
  if (resetBaDASS) {
    print("The door is already open.");
  } else {
    print("The electronic lock on the door has failed. You can't open "
          "the door.");
  }
}

if (said("close", "door")) {
  if (resetBadASS) {
    print("There is no need to close the door. It will close automatically "
          "when you leave.");
  } else {
    print("The door is already closed.");
  }
}

[ insert floppy
if ((said("insert", "disk") || said("insert", "disk", "drive"))) {
  if (has("floppy disk")) {
    if (obj.in.box(ego, 64, 133, 104, 138)) {
      print("Ok.");
      set(floppyInserted);
      work1 = cp.Terminal;
      put("floppy disk", work1);
      [ first time awards bonus points
      if (scoreFloppy) {
        work1 = -4;
      } else {
        work1 = -2;
      }
      call(lgc.ScoreHandler);
    } else {
      print("Move closer.");
    }
  } else {
    print("What disk?");
  }
}

[ remove/take floppy
if ((said("remove", "disk") || said("remove", "disk", "drive") ||
     said("get", "disk") || said("get", "disk", "drive"))) {
  work1 = cp.Terminal;
  if (obj.in.room("floppy disk", work1)) {
    if (obj.in.box(ego, 64, 133, 104, 138)) {
      [ play sound if walkman not active
      if ((currentTrack == 0 || currentTrack > 128)) {
        call(lgc.SetSound);
        sound(s.GetItem, soundDone);
      }
      print("Ok.");
      reset(floppyInserted);
      get("floppy disk");
      work1 = 4;
      call(lgc.ScoreHandler);
    } else {
      print("Move closer.");
    }
  } else {
    if (has("floppy disk")) {
      print("You already have the disk.");
    } else {
      print("What disk?");
    }
  }
}
:done
[ **************************************
[ CHECK FOR AN EXIT CONDITION
[ **************************************
[if (showPaint)) {
[  [ fade out, then change room
[  block(FADE.OUT, 0, FADECOUNT, BLACK); [ fade.out(BYVAR, DELAY, COLOR)
[  new.room(cp.Paint);  [ ##LE001##
[}

if (showMOCC) {  
  [ stop walkman
  if (currentTrack > 0 && currentTrack < 128) {
    currentTrack *= -1;
    stop.sound();
    reset(musicDone);
  }
  [ fade out, then change room
  block(FADE.OUT, 0, FADECOUNT, BLACK); [ fade.out(BYVAR, DELAY, COLOR)
  new.room(cp.Terminal);  [ ##LE005##
}

if (showCAISOCC) {
  [ stop walkman
  if (currentTrack > 0 && currentTrack < 128) {
    currentTrack *= -1;
    stop.sound();
    reset(musicDone);
  }
  [ fade out
  block(FADE.OUT, 0, FADECOUNT, BLACK); [ fade.out(BYVAR, DELAY, COLOR)
  [ use default cursor
  set.key(0, &m1, mouse); [ set.cursor(BYVAR, MSGNUM);
  [ then change room
  new.room(cp.CAISOCC);  [ ##LE002##
}
  
if (showESADOCC) {
  [ stop walkman
  if (currentTrack > 0 && currentTrack < 128) {
    currentTrack *= -1;
    stop.sound();
    reset(musicDone);
  }
  [ fade out, then change room
  block(FADE.OUT, 0, FADECOUNT, BLACK); [ fade.out(BYVAR, DELAY, COLOR)
  new.room(cp.ESADOCC);  [ ##LE008##
}

if (showICAPOCC) {
  [ stop walkman
  if (currentTrack > 0 && currentTrack < 128) {
    currentTrack *= -1;
    stop.sound();
    reset(musicDone);
  }
  [ fade out, then change room
  block(FADE.OUT, 0, FADECOUNT, BLACK); [ fade.out(BYVAR, DELAY, COLOR)
  new.room(cp.ICAPOCC);  [ ##LE009##
}

if (showRANDOCC) {
  [ stop walkman
  if (currentTrack > 0 && currentTrack < 128) {
    currentTrack *= -1;
    stop.sound();
    reset(musicDone);
  }
  [ fade out, then change room
  block(FADE.OUT, 0, FADECOUNT, BLACK); [ fade.out(BYVAR, DELAY, COLOR)
  new.room(cp.RANDOCC);  [ ##LE010##
}

if (showOFROCC) {
  [ stop walkman
  if (currentTrack > 0 && currentTrack < 128) {
    currentTrack *= -1;
    stop.sound();
    reset(musicDone);
  }
  [ fade out, then change room
  block(FADE.OUT, 0, FADECOUNT, BLACK); [ fade.out(BYVAR, DELAY, COLOR)
  new.room(cp.OFROCC);  [ ##LE011##
}

if (showERIDOCC) {
  [ stop walkman
  if (currentTrack > 0 && currentTrack < 128) {
    currentTrack *= -1;
    stop.sound();
    reset(musicDone);
  }
  [ fade out, then change room
  block(FADE.OUT, 0, FADECOUNT, BLACK); [ fade.out(BYVAR, DELAY, COLOR)
  new.room(cp.ERIDOCC);  [ ##LE012##
}

if (egoHitSpecial && egoX > 100) {
  [ show wait cursor
  cursoricon = C_WAIT;
  set.key(1, &cursoricon, mouse); [ set.cursor(BYVAR, MSGNUM);
  [ fade out, then change room
  block(FADE.OUT, 0, FADECOUNT, BLACK); [ fade.out(BYVAR, DELAY, COLOR)
  new.room(rm.StoreRoom);  [ ##LE004##
}

if (egoHitSpecial && egoX < 60) {
  [ show wait cursor
  cursoricon = C_WAIT;
  set.key(1, &cursoricon, mouse); [ set.cursor(BYVAR, MSGNUM);
  [ fade out, then change room
  block(FADE.OUT, 0, FADECOUNT, BLACK); [ fade.out(BYVAR, DELAY, COLOR)
  new.room(rm.Office);  [ ##LE003##
}

[if (egoHitSpecial && egoX > 60 && egoHitSpecial && egoX > 60 && resetBaDASS) {
if (edgeEgoHit == BOTTOM_EDGE) {
  [ show wait cursor
  cursoricon = C_WAIT;
  set.key(1, &cursoricon, mouse); [ set.cursor(BYVAR, MSGNUM);
  [ fade out, then change room
  block(FADE.OUT, 0, FADECOUNT, BLACK); [ fade.out(BYVAR, DELAY, COLOR)
  new.room(rm.Stairway); [ ##LE007##
}

return();

[ **************************************
[ DECLARED MESSAGES
[ **************************************
#message 1 "%g20"
#message 2 "%g21"
#message 3 "%g22"
#message 4 "%g23"
#message 5 "%g24"
#message 6 "%g25"
#message 7 "%g26"
#message 8 "%g27"
