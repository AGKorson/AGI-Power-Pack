[*********************************************************************
[ 
[ rm.ControlRoom
[ 
[ The AGI Power Pack Control Room has a large console in the middle of
[ room. Two exits, to right and left lead to an office, and a store
[ room, respectively. The console consists of a central terminal
[ (keyboard and monitor, with disk drive), and six panels:
[    -mouse cursor panel (ERIDOCC)
[    -sound mode panel (ESADOCC)
[    -custom FM instrument panel (CAISOCC)
[    -custom message box color panel (RANDOCC)
[    -animation speed panel (OFFROC)
[    -color palette panel (ICAPOCC)
[
[ When ego enters from the stairwell, the control panel fails (flash
[ screen, sound effects), door slams shut and won't open. Terminal is
[ only part of panel working. It's a DOS-like system. Most commands
[ don't work; there's memory corruption. Ego has to reboot/restart
[ system to get it working correctly. Once rebooted, the six control
[ panels and the security system (BaDASS - Building and Digital Access
[ Security System) need passwords to be restarted. The passwords can
[ be found among things in the office and store room. Once BaDASS is
[ restarted, door will unlock; ego can leave, going back to car in
[ parking lot to end the game. Ego needs to copy the PP source code to
[ a floppy disk in order to 'win'. 
[
[*********************************************************************

[ power pack support
#include "powerpack.txt"

[***************************************
[ LOCAL DEFINES
[***************************************
#define showMOCC         f220
#define showCAISOCC      f221
#define showRANDOCC      f222
#define showICAPOCC      f223
#define showESADOCC      f224
#define showOFROCC       f225
#define showERIDOCC      f226
#define nearTerminal     f227

[***************************************
[ FIRST CYCLE ONLY
[***************************************
if (newRoom) {
  [ load, draw and discard the picture resource for the current room
  load.pic(currentRoom);
  draw.pic(currentRoom);
  discard.pic(currentRoom);

  [ the horizon defines the upper limit of ego's movement
  set.horizon(120);
  
  [ add toolbar buttons
  load.view(vw.ButtonsDown);
  call(lgc.InitToolbar);
  
  load.view(vw.CtrlRoomArt);
  if (enableCAISOCC) {
    add.to.pic(vw.CtrlRoomArt, 0, 0, 35, 78, 11, 15);
  } else {
    add.to.pic(vw.CtrlRoomArt, 1, 0, 35, 78, 11, 15);
  }    
  if (enableRANDOCC) {
    add.to.pic(vw.CtrlRoomArt, 0, 1, 98, 78, 10, 15);
  } else {
    add.to.pic(vw.CtrlRoomArt, 1, 1, 98, 78, 10, 15);
  }    
  if (enableICAPOCC) {
    add.to.pic(vw.CtrlRoomArt, 0, 2, 41, 106, 9, 15);
  } else {
    add.to.pic(vw.CtrlRoomArt, 1, 2, 41, 106, 9, 15);
  }    
  if (enableESADOCC) {
    add.to.pic(vw.CtrlRoomArt, 0, 3, 98, 106, 8, 15);
  } else {
    add.to.pic(vw.CtrlRoomArt, 1, 3, 98, 106, 8, 15);
  }    
  if (enableOFROCC) {
    add.to.pic(vw.CtrlRoomArt, 0, 4, 35, 120, 7, 15);
  } else {
    add.to.pic(vw.CtrlRoomArt, 1, 4, 35, 120, 7, 15);
  }    
  if (enableERIDOCC) {
    add.to.pic(vw.CtrlRoomArt, 0, 5, 99, 120, 6, 15);
  } else {
    add.to.pic(vw.CtrlRoomArt, 1, 5, 99, 120, 6, 15);
  }
  
  [ if access system hasn't been reset, door is closed
  if (!resetBaDASS) {
    add.to.pic(vw.CtrlRoomArt, 4, 0, 71, 167, 15, 15);
    block(71, 165, 90, 167);
  }
  
  [ add ego to the room
  if (previousRoom == rm.Office) {
    position(ego, 15, 149);
  }
  if (previousRoom == rm.StoreRoom) {
    position(ego, 144, 149);
  }
  if (previousRoom == rm.Stairway) {
    position(ego, 74, 161);
  }
  egoDir = STOPPED;
  draw(ego);
  
  [ load the sounds used in this room
  load.sound(s.GetItem);
  load.sound(s.SystemFail);
  
  [ display the picture on screen
  show.pic();
  [ fade in
  block(FADE.IN, BYNUM, FADECOUNT, BLACK); [ fade.in(FN_MODE, DELAY, COLOR)
  [ restore cursor
  cursoricon = cursormode;
  set.key(BYVAR, &cursoricon, mouse); [ set.cursor(FN_MODE, MSGNUM)
  
  [ if coming from stairwell, and access system not set, 
  if (previousRoom == rm.Stairway && !resetBaDASS) {
    [ play sound (walkman can't be active yet)
    call(lgc.SetSound);
    sound(s.SystemFail, soundDone);
    [ one little shake
    shake.screen(1);
    work1 = 0;
    :flickerit
      block(FADE.OUT, BYNUM, 2, BLACK); [ fade.out(FN_MODE, DELAY, COLOR)
      block(FADE.IN, BYNUM, 1, BLACK); [ fade.in(FN_MODE, DELAY, COLOR)
      block(FADE.OUT, BYNUM, 2, WHITE); [ fade.out(FN_MODE, DELAY, COLOR)
      block(FADE.IN, BYNUM, 1, WHITE); [ fade.in(FN_MODE, DELAY, COLOR)
      ++work1;
    if (work1 < 3) {
      goto(flickerit);
    }
    print("The door slams shut, and the lights in the room flicker violently.");
    print("The old wiring and electrical control systems appear to have malfunctioned!");
  }
  return();
}

[***************************************
[ NON-INPUT CODE 
[***************************************

[ if ego is dead, skip player input
if (deathType) {
  return();
}

[***************************************
[ PROCESS PLAYER INPUT
[***************************************
if (haveInput && !haveMatch && unknownWordNum == 0) {
  [ check if ego is near terminal (saves repeating this
  [ check multiple lines in all the said checks)
  reset(nearTerminal);
  if (obj.in.box(ego, 64, 133, 104, 138)) {
    set(nearTerminal);
  }
    
  [ look
  if (said("look")) {
    print("The room is dominated by a large control panel in the center "
          "of the room. There are exits leading to the left and right.");
  }
  
  if (said("look", "door")) {
    if (resetBaDASS) {
     print("The door is open now that the access control system "
           "has been reset.");
    } else {
      print("The sturdy door to the control room is shut tight. The "
            "access control system doesn't appear to be working.");
    }
  }
  if (said("open", "door")) {
    if (posn(ego, 67, 153, 88, 166)) {
      if (resetBaDASS) {
        print("The door is already open.");
      } else {
        print("The electronic lock on the door has failed. You can't open "
              "the door.");
      }
    } else {
      print("Move closer.");
    }
  }
  if (said("close", "door")) {
    if (posn(ego, 67, 153, 88, 166)) {
      if (resetBadASS) {
        print("There is no need to close the door. It will close automatically "
              "when you leave.");
      } else {
        print("The door is already closed.");
      }
    } else {
      print("Move closer.");
    }
  }
  if (said("unlock", "door")) {
    if (posn(ego, 67, 153, 88, 166)) {
      if (resetBadASS) {
        print("The door is open, so there is no need to unlock it.");
      } else {
        print("The lock is controlled by the electronic access control "
              "system. The system is currently not working.");
      }
    } else {
      print("Move closer.");
    }
  }
  if ((said("break", "down", "door") || said("break", "door", "down") || 
       said("smash", "door") || said("hit", "door"))) {
    if (posn(ego, 67, 153, 88, 166)) {
      if (resetBadASS) {
        print("The door is open. Why bother trying to break it down?");
      } else {
        print("the massive door is much too strong for you to cause any "
              "damage, or to force it open.");
      }
    } else {
      print("Move closer.");
    }
  }
  if (said("kick", "door")) {
    if (posn(ego, 67, 153, 88, 166)) {
      if (resetBadASS) {
        print("The door is open. Why bother kicking it?");
      } else {
        print("You'll break your foot before doing any damage to this "
              "sturdy door.");
      }
    } else {
      print("Move closer.");
    }
  }
  if (said("look", "wall")) {
    print("The walls are plain and bare. You see a few marks indicating some "
          "posters or signs may have been taped or tacked up in the past, but "
          "they are long since gone.");
  }
  if (said("look", "floor")) {
    print("There is a thin layer of dust on the plain floor. You can "
          "see your footprints in the dust. It looks like you've been "
          "the only one in here in a very long time.");
  }
  if (said("look", "ceiling")) {
    print("The drop down ceiling has a single light hanging down over "
          "the center of the room.");
  }
  if (said("look", "light")) {
    print("A single incandescent bulb provides a soft warm glow that "
          "lights up the room without causing glare on the console "
          "video screens.");
  }
  if ((said("turn", "on", "light") || said("turn", "off", "light"))) {
    print("You don't see a switch for the lights. They are probably "
          "controlled by the facility's control system.");
  }
  
  [ insert floppy
  if ((said("put", "disk", "in", "slot") || 
       said("put", "disk", "in", "console") || 
       said("put", "disk", "in", "drive") || said("insert", "disk") || 
       said("insert", "disk", "drive"))) {
    if (has(floppydisk)) {
      if (nearTerminal) {
        print("You insert the disk and flip the latch to secure it.");
        set(floppyInserted);
        work1 = cp.Terminal;
        put(floppydisk, work1);
        [ first time awards bonus points
        if (scoreFloppy) {
          [ temporarily lose four points for dropping the floppy
          work1 = -4;
        } else {
          [ only drop two points (for a net of +2 when it's retrieved)
          work1 = -2;
          set(scoreFloppy);
        }
        call(lgc.ScoreHandler);
      } else {
        print("Move closer.");
      }
    } else {
      print("What disk?");
    }
  }
  [ remove/take floppy
  if ((said("eject", "disk") || said("get", "disk") || 
       said("get", "disk", "console") || said("get", "disk", "drive") ||
       said("remove", "disk") || said("remove", "disk", "console") || 
       said("remove", "disk", "drive")
       )) {
    work1 = cp.Terminal;
    if (obj.in.room(floppydisk, work1)) {
      if (nearTerminal) {
        [ play sound if walkman not active
        if (!playWalkman) {
          call(lgc.SetSound);
          sound(s.GetItem, soundDone);
        }
        print("Ok.");
        reset(floppyInserted);
        get(floppydisk);
        work1 = 4;
        call(lgc.ScoreHandler);
      } else {
        print("Move closer.");
      }
    } else {
      if (has(floppydisk)) {
        print("You already have the disk.");
      } else {
        print("What disk?");
      }
    }
  }
  if ((said("look", "console") || said("look", "computer"))) {
    print("There are several different output monitors on the "
          "console, and a keyboard and mouse in front of the central "
          "terminal. There are rooms leading off on both sides of "
          "the room.");
  }
  if (said("look", "keyboard")) {
    print("It's a standard 101 key IBM PC keyboard.");
  }
  if (said("look", "mouse")) {
    print("It's an old Microsoft Mouse, from the late 1980s.");
  }
  if (said("get", "keyboard")) {
    if (nearTerminal) {
      print("The keyboard cable goes into the console and can't be "
            "easily disconnected.");
    } else {
      print("Move closer.");
    }
  }
  if (said("get", "mouse")) {
    if (nearTerminal) {
      print("The mouse cord goes into the console and can't be "
            "easily disconnected.");
    } else {
      print("Move closer.");
    }
  }
  if ((said("use", "keyboard") || said("type", "keyboard") ||
       said("log", "on", "console") || said("use", "console") || 
       said("log", "on", "computer") || said("use", "computer") ||
       said("log", "on", "mocc") || said("use", "mocc") || 
       said("log", "on"))) {
    if (nearTerminal) {
      set(showMOCC);
    } else {
      print("You need to move closer to reach the keyboard and mouse.");
    }
  }
  if (said("use", "mouse")) {
    if (nearTerminal) {
      print("The mouse doesn't seem do do anything with the "
            "text screen displayed on the main terminal. It "
            "must be for use with the other six consoles.");
    } else {
      print("You need to move closer to reach the keyboard and mouse.");
    }
  }
  if (said("look", "screen")) {
    print("The central terminal station has a simple monocrhome text "
          "display. The six larger auxiliary panels are large color "
          "monitors, probably considered state of the art in the late "
          "1980s through early 1990s.");
  }
  if ((said("look", "MOCC") || said("look", "AMOS"))) {
    print("This looks like an old style computer terminal display. A "
          "floppy disk drive is located to the right of the display.");
  }
  if (said("look", "CAISOCC")) {
    goto(lookcaisocc);
  }
  if (said("look", "ERIDOCC")) {
    goto(lookeridocc);
  }
  if (said("look", "ESADOCC")) {
    goto(lookesadocc);
  }
  if (said("look", "ICAPOCC")) {
    goto(lookicapocc);
  }
  if (said("look", "OFROCC")) {
    goto(lookofrocc);
  }
  if (said("look", "RANDOCC")) {
    goto(lookrandocc);
  }
  if ((said("log", "on", "CAISOCC") || said("use", "CAISOCC"))) {
    goto(usecaisocc);
  }
  if ((said("log", "on", "ERIDOCC") || said("use", "ERIDOCC"))) {
    goto(useeridocc);
  }
  if ((said("log", "on", "ESADOCC") || said("use", "ESADOCC"))) {
    goto(useesadocc);
  }
  if ((said("log", "on", "ICAPOCC") || said("use", "ICAPOCC"))) {
    goto(useicapocc);
  }
  if ((said("log", "on", "OFROCC") || said("use", "OFROCC"))) {
    goto(useofrocc);
  }
  if ((said("log", "on", "RANDOCC") || said("use", "RANDOCC"))) {
    goto(userandocc);
  }
  if ((said("turn", "off", "computer") || said("turn", "off", "console") || 
       said("turn", "off", "anyword", "console"))) {
    if (nearTerminal) {
      print("The console and all its systems appear to be powered "
            "from a hardwired power source. There is no local switch "
            "to turn power on or off.");
    } else {
      print("Move closer.");
    }
  }
  if (said("climb", "on", "console")) {
    if (nearTerminal) {
      print("If you did that, you might damage the console or its "
            "components. It's better that you don't.");
    } else {
      print("Move closer.");
    }
  }
  if ((said("hack", "computer") || said("hack", "console") || said("hack", "MOCC") || 
       said("hack", "CAISOCC") || said("ERIDOCC") ||
       said("hack", "ESADOCC") || said("ICAPOCC") ||
       said("hack", "OFROCC") || said("RANDOCC"))) {
    print("If you actually had any computer skills, maybe you could do that. "
          "But face it, you have trouble just turning on a computer, let "
          "alone hacking one.");
  }
}

[***************************************
[ MOUSE INPUT
[***************************************
[ if cursor is look/talk/use and left-click and NOT 
[ clicking on the actual toolbar, check for clicks
[ on in-game items
if (cursoricon > C_WALK && cursoricon < C_WAIT && 
    controller(cLeftClick) &&
    (mouseX < 14 || mouseX > 145 || mouseY > 17)) {
  [ ignore borders
  if ((mouseX < 3 || mouseX > 156 || mouseY < 20 || mouseY > 167)) {
    goto(doneclick);
  }

  [ check if ego is near terminal (saves repeating this
  [ check multiple lines in all the mouse-click checks)
  reset(nearTerminal);
  if (obj.in.box(ego, 64, 133, 104, 138)) {
    set(nearTerminal);
  }
    
  [ look
  if (cursormode == C_LOOK) {
    [ ego
    if (posn(ego, ON.OBJ, OBJ_VISIBLE, &mouseX, &mouseY)) {
      print("You see you.");
      goto(doneclick);
    }
    
    [ doorway to stairwell 71, 159, 90, 167
    if (mouseX > 70 && mouseX < 91 && mouseY > 158 && mouseY < 168) {
      [ check for door open/close
      :lookdoor
      if (resetBaDASS) {
       print("The door to the stairwell is open now that the access "
             "control system has been reset.");
      } else {
        print("The heavy metal door is shut tight. The "
              "access control system doesn't appear to be working.");
      }
      goto(doneclick);
    }
    
    [ light 75, 60, 83, 66
    if (mouseX > 75 && mouseX < 83 && mouseY > 60 && mouseY < 66) {
      print("A single incandescent bulb provides a soft warm glow that "
            "lights up the room without causing glare on the console "
            "video screens.");
      goto(doneclick);
    }
    
    [ office entrance 4, 103, 15, 148
    if (mouseX > 3 && mouseX < 16 && mouseY > 102 && mouseY < 149) {
      print("This doorway leads to an office.");
      goto(doneclick);
    }
    [ supply room entrance 142, 103, 154, 148
    if (mouseX > 141 && mouseX < 155 && mouseY > 102 && mouseY < 149) {
      print("This doorway leads to a storage room.");
      goto(doneclick);
    }
    
    [ keyboard/mouse 67, 112, 96, 122
    if (mouseX > 66 && mouseX < 97 && mouseY > 111 && mouseY < 123) {
      print("The mouse and keyboard are for controlling the computer terminal.");
      goto(doneclick);
    }
    
    [ control panels
    block(GET.PIXEL, &mouseX, &mouseY, &work1); [ get.pixel(vX, vY, vRESULT) 
    [ priority value indicates which panel
    work1 /= 16;
    if (work1 == 5) {
      [ terminal
      print("This looks like an old style computer terminal display. A "
            "floppy disk drive is located to the right of the display.");
      goto(doneclick);
    }
    if (work1 == 6) {
      [ ERIDOCC
      :lookeridocc
      if (showERIDOCC) {
        print("This is the ERIDOCC module interface display. The ERIDOCC "
              "module let's you create custom mouse pointers for AGI "
              "power pack games.");
      } else {
        print("This display is showing an error message. It's real purpose "
              "is not known.");
      }
      goto(doneclick);
    }
    if (work1 == 7) {
      [ OFROCC
      :lookofrocc
      if (showOFROCC) {
        print("This is the OFROCC module interface display. The OFROCC "
              "module let's you adjust game speed and turbo mode that "
              "is only available in AGI power pack games.");
      } else {
        print("This display is showing an error message. It's real purpose "
              "is not known.");
      }
      goto(doneclick);
    }
    if (work1 == 8) {
      [ ESADOCC
      :lookesadocc
      if (showESADOCC) {
        print("This is the ESADOCC module interface display. The ESADOCC "
              "module demonstrates available sound options and instrument "
              "settings in AGI power pack games.");
      } else {
        print("This display is showing an error message. It's real purpose "
              "is not known.");
      }
      goto(doneclick);
    }
    if (work1 == 9) {
      [ ICAPOCC
      :lookicapocc
      if (showICAPOCC) {
        print("This is the ICAPOCC module interface display. The ICAPOCC "
              "module provides an interface to allow you to alter color "
              "palettes in AGI power pack games.");
      } else {
        print("This display is showing an error message. It's real purpose "
              "is not known.");
      }
      goto(doneclick);
    }
    if (work1 == 10) {
      [ RANDOCC
      :lookrandocc
      if (showRANDOCC) {
        print("This is the RANDOCC module interface display. The RANDOCC "
              "module let's you adjust the color elements of display message "
              "windows in AGI power pack games.");
      } else {
        print("This display is showing an error message. It's real purpose "
              "is not known.");
      }
      goto(doneclick);
    }
    if (work1 == 11) {
      [ CAISOCC
      :lookcaisocc
      if (showCAISOCC) {
        print("This is the CAISOCC module interface display. The CAISOCC "
              "module is used to create custom FM synth instruments for "
              "use in AGI power pack games.");
      } else {
        print("This display is showing an error message. It's real purpose "
              "is not known.");
      }
      goto(doneclick);
    }

    [ main console 31, 46, 128, 131
    if (mouseX > 30 && mouseX < 129 && mouseY > 45 && mouseY < 132) {
      print("This massive computer control console takes up most of the "
            "room. There is a central terminal station, and six auxiliary "
            "display panels.");
      goto(doneclick);
    }
    
    [ ceiling
    if (mouseY < 31) {
      block(GET.PIXEL, &mouseX, &mouseY, &work1); [ get.pixel(vX, vY, vRESULT)
      [ extract just visual
      work1 *= 16;
      work1 /= 16;
      if (work1 != CYAN) {
        print("The drop down ceiling has a single light hanging down over "
              "the center of the room.");
        goto(doneclick);
      }
    }
    
    [ floor
    if (mouseY > 124) {
      block(GET.PIXEL, &mouseX, &mouseY, &work1); [ get.pixel(vX, vY, vRESULT)
      [ extract just visual
      work1 *= 16;
      work1 /= 16;
      if ((work1 == WHITE || work1 == LT_GRAY || work1 == DK_GRAY)) {
        print("There is a thin layer of dust on the plain floor. You can "
              "see your footprints in the dust. It looks like you've been "
              "the only one in here in a very long time.");
        goto(doneclick);
      }
    }
    
    [ walls
    if (mouseY > 21 && mouseY < 158) {
      print("The walls are plain and bare. You see a few marks indicating some "
            "posters or signs may have been taped or tacked up in the past, but "
            "they are long since gone.");
      goto(doneclick);
    }
    
    [ nothing specific
    print("The room is dominated by a large control panel in the center "
          "of the room. There are exits leading to the left and right.");
    goto(doneclick);
  }
  
  [ talk
  if (cursormode == C_TALK) {
    [ ego
    if (posn(ego, ON.OBJ, OBJ_VISIBLE, &mouseX, &mouseY)) {
      print("You have nothing to say.");
    } else {
      print("There is no one here to talk to.");
    }
    goto(doneclick);
  }
  
  [ use
  if (cursormode == C_USE) {
    [ ego
    if (posn(ego, ON.OBJ, OBJ_VISIBLE, &mouseX, &mouseY)) {
      print("Please don't touch yourself. Not even when you're alone.");
      goto(doneclick);
    }
    
    [ doorway to stairwell 71, 159, 90, 167
    if (mouseX > 70 && mouseX < 91 && mouseY > 158 && mouseY < 168) {
      [ door is only here if system not reset yet
      if (!resetBaDASS) {
        print("The heavy metal door is shut tight. There's no way "
              "you can open it.");
      }
      goto(doneclick);
    }
    
    [ floppy drive
    if (mouseX > 82 && mouseX < 104 && mouseY > 82 && mouseY < 105) {
      if (obj.in.box(ego, 64, 133, 104, 138)) {
        work1 = cp.Terminal;
        if (obj.in.room(floppydisk, work1)) {
          [ play sound if walkman not active
          if (!playWalkman) {
            call(lgc.SetSound);
            sound(s.GetItem, soundDone);
          }
          print("You undo the door latch and remove the disk.");
          reset(floppyInserted);
          get(floppydisk);
          work1 = 4;
          call(lgc.ScoreHandler);
        } else {
          print("The disk drive is empty.");
        }
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }
    
    [ keyboard/mouse 67, 112, 96, 122
    if (mouseX > 66 && mouseX < 97 && mouseY > 111 && mouseY < 123) {
      if (nearTerminal) {
        set(showMOCC);
      } else {
        print("You need to move closer to reach the keyboard and mouse.");
      }
      goto(doneclick);
    }
    
    [ check for control panels
    block(GET.PIXEL, &mouseX, &mouseY, &work1); [ get.pixel(vX, vY, vRESULT) 
    [ priority value indicates which panel
    work1 /= 16;
    if (work1 == 5) {
      [ terminal
      if (nearTerminal) {
        set(showMOCC);
      } else {
        print("Move closer to the keyboard to interact with "
              "this system.");
      }
      goto(doneclick);
    }
    if (work1 == 6) {
      [ ERIDOCC
      :useeridocc
      if (nearTerminal) {
        set(showERIDOCC);
      } else {
        print("Move closer to the mouse and keyboard to interact with "
              "this system.");
      }
      goto(doneclick);
    }
    if (work1 == 7) {
      [ OFROCC
      :useofrocc
      if (nearTerminal) {
        set(showOFROCC);
      } else {
        print("Move closer to the mouse and keyboard to interact with "
              "this system.");
      }
      goto(doneclick);
    }
    if (work1 == 8) {
      [ ESADOCC
      :useesadocc
      if (nearTerminal) {
        set(showESADOCC);
      } else {
        print("Move closer to the mouse and keyboard to interact with "
              "this system.");
      }
      goto(doneclick);
    }
    if (work1 == 9) {
      [ ICAPOCC
      :useicapocc
      if (nearTerminal) {
        set(showICAPOCC);
      } else {
        print("Move closer to the mouse and keyboard to interact with "
              "this system.");
      }
      goto(doneclick);
    }
    if (work1 == 10) {
      [ RANDOCC
      :userandocc
      if (nearTerminal) {
        set(showRANDOCC);
      } else {
        print("Move closer to the mouse and keyboard to interact with "
              "this system.");
      }
      goto(doneclick);
    }
    if (work1 == 11) {
      [ CAISOCC
      :usecaisocc
      if (nearTerminal) {
        set(showCAISOCC);
      } else {
        print("Move closer to the mouse and keyboard to interact with "
              "this system.");
      }
    }
  }

  :doneclick
  set.key(CLR.CTRL, CLR.CTRL, cLeftClick); [ clear.controller(cNUM)
}

[***************************************
[ CHECK FOR AN EXIT CONDITION
[***************************************
:exit

if (showMOCC) {  
  [ stop walkman
  if (playWalkman) {
    reset(playWalkman);
    stop.sound();
    reset(musicDone);
  }
  [ fade out
  block(FADE.OUT, BYNUM, FADECOUNT, BLACK); [ fade.out(FN_MODE, DELAY, COLOR)
  [ use default cursor
  set.key(BYNUM, &m1, mouse); [ set.cursor(FN_MODE, MSGNUM)
  [ then change room
  new.room(cp.Terminal);  [ ##LE005##
}

if (showCAISOCC) {
  [ stop walkman
  if (playWalkman) {
    reset(playWalkman);
    stop.sound();
    reset(musicDone);
  }
  [ fade out
  block(FADE.OUT, BYNUM, FADECOUNT, BLACK); [ fade.out(FN_MODE, DELAY, COLOR)
  [ use default cursor
  set.key(BYNUM, &m1, mouse); [ set.cursor(FN_MODE, MSGNUM)
  [ then change room
  new.room(cp.CAISOCC);  [ ##LE002##
}
  
if (showERIDOCC) {
  [ stop walkman
  if (playWalkman) {
    reset(playWalkman);
    stop.sound();
    reset(musicDone);
  }
  [ fade out, then change room
  block(FADE.OUT, BYNUM, FADECOUNT, BLACK); [ fade.out(FN_MODE, DELAY, COLOR)
  new.room(cp.ERIDOCC);  [ ##LE012##
}

if (showESADOCC) {
  [ stop walkman
  if (playWalkman) {
    reset(playWalkman);
    stop.sound();
    reset(musicDone);
  }
  [ fade out, then change room
  block(FADE.OUT, BYNUM, FADECOUNT, BLACK); [ fade.out(FN_MODE, DELAY, COLOR)
  new.room(cp.ESADOCC);  [ ##LE008##
}

if (showICAPOCC) {
  [ stop walkman
  if (playWalkman) {
    reset(playWalkman);
    stop.sound();
    reset(musicDone);
  }
  [ fade out, then change room
  block(FADE.OUT, BYNUM, FADECOUNT, BLACK); [ fade.out(FN_MODE, DELAY, COLOR)
  new.room(cp.ICAPOCC);  [ ##LE009##
}

if (showOFROCC) {
  [ stop walkman
  if (playWalkman) {
    reset(playWalkman);
    stop.sound();
    reset(musicDone);
  }
  [ fade out, then change room
  block(FADE.OUT, BYNUM, FADECOUNT, BLACK); [ fade.out(FN_MODE, DELAY, COLOR)
  new.room(cp.OFROCC);  [ ##LE011##
}

if (showRANDOCC) {
  [ stop walkman
  if (playWalkman) {
    reset(playWalkman);
    stop.sound();
    reset(musicDone);
  }
  [ fade out, then change room
  block(FADE.OUT, BYNUM, FADECOUNT, BLACK); [ fade.out(FN_MODE, DELAY, COLOR)
  new.room(cp.RANDOCC);  [ ##LE010##
}

if (egoHitSpecial && egoX > 100) {
  [ show wait cursor
  cursoricon = C_WAIT;
  set.key(BYVAR, &cursoricon, mouse); [ set.cursor(FN_MODE, MSGNUM)
  [ fade out, then change room
  block(FADE.OUT, BYNUM, FADECOUNT, BLACK); [ fade.out(FN_MODE, DELAY, COLOR)
  new.room(rm.StoreRoom);  [ ##LE004##
}

if (egoHitSpecial && egoX < 60) {
  [ show wait cursor
  cursoricon = C_WAIT;
  set.key(BYVAR, &cursoricon, mouse); [ set.cursor(FN_MODE, MSGNUM)
  [ fade out, then change room
  block(FADE.OUT, BYNUM, FADECOUNT, BLACK); [ fade.out(FN_MODE, DELAY, COLOR)
  new.room(rm.Office);  [ ##LE003##
}

[if (egoHitSpecial && egoX > 60 && egoHitSpecial && egoX > 60 && resetBaDASS) {
if (edgeEgoHit == BOTTOM_EDGE) {
  [ show wait cursor
  cursoricon = C_WAIT;
  set.key(BYVAR, &cursoricon, mouse); [ set.cursor(FN_MODE, MSGNUM)
  [ fade out, then change room
  block(FADE.OUT, BYNUM, FADECOUNT, BLACK); [ fade.out(FN_MODE, DELAY, COLOR)
  new.room(rm.Stairway); [ ##LE007##
}

return();

[***************************************
[ DECLARED MESSAGES
[***************************************
#message 1 "%g30"
#message 2 "%g31"
#message 3 "%g32"
#message 4 "%g33"
#message 5 "%g34"
#message 6 "%g35"
#message 7 "%g36"
#message 8 "%g37"
