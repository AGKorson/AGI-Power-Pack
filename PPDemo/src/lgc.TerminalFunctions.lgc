[ 
[ lgc.TerminalFunctions
[ 

[ valid commands:
[ cls: clear screen
[ load <module> [password] to load a control console module
[ dir: display directory
[ chdir/cd: change directory
[ rmdir/rd: remove a directory
[1234567890123456789012345678901234567890
[ASSOC          Displays or modifies file extension associations.
[ATTRIB         Displays or changes file attributes.
[CALL           Calls one batch program from another.
[CD/CHDIR       Displays the name of or changes the current directory.
[CHKDSK         Checks a disk and displays a status report.
[CLS            Clears the screen.
[COLOR          Sets the default console foreground and background colors.
[COMP           Compares the contents of two files or sets of files.
[COPY           Copies one or more files to another location.
[DATE           Displays or sets the date.
[DEL/ERASE      Deletes one or more files.
[DIR            Displays a list of files and subdirectories in a directory.
[CPSTATUS       Displays current device driver status and properties.
[ECHO           Displays messages, or turns command echoing on or off.
[EXIT           Quits the CMD.EXE program (command interpreter).
[FC             Compares two files or sets of files, and displays the differences between them.
[FIND           Searches for a text string in a file or files.
[FINDSTR        Searches for strings in files.
[FOR            Runs a specified command for each file in a set of files.
[FORMAT         Formats a disk for use with Windows.
[GOTO           Directs the Windows command interpreter to a labeled line in a batch program.
[HELP           Provides Help information for Windows commands.
[ICACLS         display, modify, backup, or restore ACLs for files and directories.
[IF             Performs conditional processing in batch programs.
[LABEL          Creates, changes, or deletes the volume label of a disk.
[LOGON          Logs a user or admin on to AMOS
[LOGOFF         logs off
[MD             Creates a directory.
[MKDIR          Creates a directory.
[MODE           Configures a system device.
[MORE           Displays output one screen at a time.
[MOVE           Moves one or more files from one directory to another directory.
[OPENFILES      Displays files opened by remote users for a file share.
[PATH           Displays or sets a search path for executable files.
[PAUSE          Suspends processing of a batch file and displays a message.
[PRINT          Prints a text file.
[PROMPT         Changes the Windows command prompt.
[RD/RMDIR       Removes a directory.
[RECOVER        Recovers readable information from a bad or defective disk.
[REM            Records comments (remarks) in batch files or CONFIG.SYS.
[REN/RENAME     Renames a file or files.
[REPLACE        Replaces files.
[SET            Displays, sets, or removes Windows environment variables.
[SC             Displays or configures services (background processes).
[SCHTASKS       Schedules commands and programs to run on a computer.
[START          Starts a separate window to run a specified program or command.
[SYSTEMINFO     Displays machine specific properties and configuration.
[TASKLIST       Displays all currently running tasks including services.
[TASKKILL       Kill or stop a running process or application.
[TIME           Displays or sets the system time.
[TITLE          Sets the window title for a CMD.EXE session.
[TYPE           Displays the contents of a text file.
[VER            Displays the AMOS version.
[VERIFY         Tells Windows whether to verify that your files are written correctly to a disk.
[VOL            Displays a disk volume label and serial number.
[XCOPY          Copies files and directory trees.
[WMIC           Displays WMI information inside interactive command shell.



#define cursor_row    v240
#define cursor_col    v241
#define cursor_char   v242
#define cursor_toggle v243
#define inputmode     v244
  #define IM_USERID    0 [ wait for userid
  #define IM_PASSWORD  1 [ wait for pw
  #define IM_CMDLINE   2 [ wait for commandline
  #define IM_ARGINPUT  3 [ wait for additional args/input
#define terminalfn    v245
  #define LINEFEED     1
  #define DELAY        2
  #define DELAY_LF     3
  #define ADDLINE      4
  #define ADDLINE_LF   5
  #define CLS          6
#define outputvar     v246

#define cursorstate   f241
#define loggedon      f242

#define input          s12
#define char           s13
#define output         s14
#define userid         s15
#define validID        s16
#define validPW        s17

#define charmsg         m3
#define outputmsg       m4

#define TOPROW         4
#define BTMROW        18
#define LEFTCOL        9
#define RIGHTCOL      48

[ linefeed
:addlinefeed
if (terminalfn == LINEFEED) {
  [ moves to next line, and clears input
  if (cursor_row < BTMROW) {
    ++cursor_row;
  } else {
    [ scroll up
    clear.text.rect(TOPROW, LEFTCOL, BTMROW, RIGHTCOL, -1);
  }
  cursor_col = LEFTCOL;
  return();
}

[ .75 sec delay with or without linefeed
if ((terminalfn == DELAY || terminalfn == DELAY_LF)) {
  work2 = 250;
  cycle.time(o254, work2); [ delay(vDELAY);
  cycle.time(o254, work2); [ delay(vDELAY);
  cycle.time(o254, work2); [ delay(vDELAY);
  if (terminalfn == DELAY_LF) {
    terminalfn = LINEFEED;
    goto(addlinefeed);
  }
}

if ((terminalfn == ADDLINE || terminalfn == ADDLINE_LF)) {
[ TODO: need to add check for multiple line output
[ if more than one line, or if it extends past 
[ edge, need to break up the displayline
[  OR - just make sure calls to DISPLAYLINE already
[ have that figured out...
  outputvar = &outputmsg;
  display.v(cursor_row, cursor_col, outputvar);
  if (terminalfn == ADDLINE_LF) {
    terminalfn = LINEFEED;
    goto(addlinefeed);
  } else {
    [ adjust cursor column
    block(STR.LEN, &output, &work1, 0); [ str.len(sINPUT, vRESULT)
    cursor_col += work1;
  }
  return();
}

if (terminalfn == CLS) {
  clear.text.rect(TOPROW, LEFTCOL, BTMROW, RIGHTCOL, BLACK);
  cursor_col = LEFTCOL;
  cursor_row = TOPROW;
}

return();

[*****
[ messages         [  declared messages go here
[*****
#message 1 "_"
#message 2 " "
#message 3 "%s13"
#message 4 "%s14"
#message 5 "*"