[ ********************************************************************[ [ rm.Terminal[ [ An example room with several exits.[[ ********************************************************************[ **************************************[ FIRST CYCLE ONLY[ **************************************if (newRoom)   {  [ load, draw and discard the picture resource for the current room  load.pic(currentRoom);  draw.pic(currentRoom);  discard.pic(currentRoom);    [ do basic room initialization  call(lgc.RoomInit);    [ add room-specific initialization here    [ default horizion is 36; adjust it as needed  set.horizon(120);      [ set ego parameters, if different from lgc.RoomInit    [ AGI will automatically position ego on the opposite  [ edge when entering a new room, but if you want to manually  [ position ego, do that here, before drawing ego    [ The next 6 lines need only be in the first room of the game   if ((previousRoom == rm.Title ||    [ just come from intro screen       previousRoom == 0))             [ or restarted game     {    position(ego, 74, 150);    status.line.on();                 [ turn status line on during normal game play    }    [ add ego to the room  draw(ego);    [ make sure input is on  accept.input();    [ display the picture on screen  show.pic();  }[ **************************************[ EVERY CYCLE[ **************************************[ add room specific statements here[ **************************************[ CHECK FOR AN EXIT CONDITION[ **************************************if (edgeEgoHit == BOTTOM_EDGE)   {  [ move to room below  new.room(rm.Outside);  [ ##LE003##  }if (edgeEgoHit == LEFT_EDGE)   {  [ move to room on the left  new.room(rm.Sound); [ ##LE004##  }if (edgeEgoHit == RIGHT_EDGE)   {  [ move to room on the right  new.room(rm.Mouse);  [ ##LE002##  }if (edgeEgoHit == TOP_EDGE)   {  [ move to room above  new.room(rm.Colors);  [ ##LE001##  }[ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input or if match already found, no need[ to do said testsif ((!haveInput || haveMatch))  {  goto(done);  }  [ lookif (said("look")) {  print("This is an empty room.");  clear.lines(5, 6, RED);}if (said("show", "msgbox")) {    new.room(cp.Terminal);  [ ##LE005##}:doneif (v1 != v1)    {        new.room(cp.Paint);  [ ##LE006##    }return();[ **************************************[ MESSAGES[ **************************************#message 1 "This is an empty room."