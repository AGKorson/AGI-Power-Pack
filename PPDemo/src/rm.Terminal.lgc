[ ********************************************************************
[ 
[ rm.Terminal
[ 
[ An example room with several exits.
[
[ ********************************************************************

[ **************************************
[ FIRST CYCLE ONLY
[ **************************************
if (newRoom) {
  [ do basic room initialization
  call(lgc.RoomInit);
  
  [ load, draw and discard the picture resource for the current room
  load.pic(currentRoom);
  draw.pic(currentRoom);
  discard.pic(currentRoom);

  [ add room-specific initialization here
  
  [ default horizion is 36; adjust it as needed
  set.horizon(120);  
  
  [ add toolbar buttons
  load.view(vw.Toolbar);
  call(lgc.InitToolbar);
  
  if (previousRoom == rm.Office) {
    position(ego, 15, 149);
  }
  if (previousRoom == rm.StoreRoom) {
    position(ego, 144, 149);
  }
  if (previousRoom == rm.Stairway) {
    position(ego, 74, 163);
  }
  [ add ego to the room
  draw(ego);
  
  [ make sure input is on
  accept.input();
  
  [ display the picture on screen
  show.pic();
  [ fade in
  block(FADE.IN, 0, FADECOUNT, BLACK); [ fade.in(BYVAR, DELAY, COLOR)
  [ restore cursor
  cursoricon = cursormode;
  set.key(1, &cursoricon, mouse); [ set.cursor(BYVAR, MSGNUM);
  
  return();
}

[ **************************************
[ EVERY CYCLE
[ **************************************

[ add room specific statements here

[ **************************************
[ CHECK FOR AN EXIT CONDITION
[ **************************************


[ **************************************
[ PROCESS PLAYER INPUT
[ **************************************

[ if player hasn't provided input or if match already found, no need
[ to do said tests
if ((!haveInput || haveMatch)) {
  goto(done);
}
  
[ look
if (said("look")) {
  print("This is an empty room.");
  clear.lines(5, 6, RED);
}

if (said("show", "paint")) {
  [ fade out, then change room
  block(FADE.OUT, 0, FADECOUNT, BLACK); [ fade.out(BYVAR, DELAY, COLOR)
  new.room(cp.Paint);  [ ##LE001##
}

if (said("show", "instrument")) {
  [ fade out, then change room
  block(FADE.OUT, 0, FADECOUNT, BLACK); [ fade.out(BYVAR, DELAY, COLOR)
  new.room(cp.Instrument);  [ ##LE002##
}
  
if (said("show", "terminal")) {  
  [ fade out, then change room
  block(FADE.OUT, 0, FADECOUNT, BLACK); [ fade.out(BYVAR, DELAY, COLOR)
  new.room(cp.Terminal);  [ ##LE005##
}

if (said("show", "sound")) {
  [ fade out, then change room
  block(FADE.OUT, 0, FADECOUNT, BLACK); [ fade.out(BYVAR, DELAY, COLOR)
  new.room(cp.Sound);  [ ##LE008##
}

if (said("show", "palette")) {
  [ fade out, then change room
  block(FADE.OUT, 0, FADECOUNT, BLACK); [ fade.out(BYVAR, DELAY, COLOR)
  new.room(cp.Palette);  [ ##LE009##
}

if (said("show", "msgbox")) {
  [ fade out, then change room
  block(FADE.OUT, 0, FADECOUNT, BLACK); [ fade.out(BYVAR, DELAY, COLOR)
  new.room(cp.MsgBox);  [ ##LE010##
}

if (said("show", "speed")) {
  [ fade out, then change room
  block(FADE.OUT, 0, FADECOUNT, BLACK); [ fade.out(BYVAR, DELAY, COLOR)
  new.room(cp.SpeedStatus);  [ ##LE011##
}

if (said("show", "mouse")) {
  [ fade out, then change room
  block(FADE.OUT, 0, FADECOUNT, BLACK); [ fade.out(BYVAR, DELAY, COLOR)
  new.room(cp.Mouse);  [ ##LE012##
}

if (said("open", "door")) {
  [ show wait cursor
  cursoricon = C_WAIT;
  set.key(1, &cursoricon, mouse); [ set.cursor(BYVAR, MSGNUM);
  [ fade out, then change room
  block(FADE.OUT, 0, FADECOUNT, BLACK); [ fade.out(BYVAR, DELAY, COLOR)
  new.room(rm.Stairway);  [ ##LE006##
}

:done

if (edgeEgoHit == RIGHT_EDGE) {
  [ show wait cursor
  cursoricon = C_WAIT;
  set.key(1, &cursoricon, mouse); [ set.cursor(BYVAR, MSGNUM);
  [ fade out, then change room
  block(FADE.OUT, 0, FADECOUNT, BLACK); [ fade.out(BYVAR, DELAY, COLOR)
  new.room(rm.Storeroom);  [ ##LE004##
}

if (edgeEgoHit == LEFT_EDGE) {
  [ show wait cursor
  cursoricon = C_WAIT;
  set.key(1, &cursoricon, mouse); [ set.cursor(BYVAR, MSGNUM);
  [ fade out, then change room
  block(FADE.OUT, 0, FADECOUNT, BLACK); [ fade.out(BYVAR, DELAY, COLOR)
  new.room(rm.Office);  [ ##LE003##
}

return();

[ **************************************
[ MESSAGES
[ **************************************
#message 1 "%g40"
#message 2 "%g41"
#message 3 "%g42"
#message 4 "%g43"
#message 5 "%g44"
#message 6 "%g45"
#message 7 "This is an empty room."