[*********************************************************************
[
[ rm.Stairway
[
[ At bottom of stairs is a door to the PP Control Room. The door is
[ locked with a keypad code needed to enter. The code can be found in
[ the magazine article. To open the door, a close up picture/room is
[ used to enter the code. Correct code will open door. There are
[ lights along the stairway. One of them flickers every few seconds.
[
[*********************************************************************

[ power pack support
#include "powerpack.txt"

[***************************************
[ LOCAL DEFINES
[***************************************
#define lightshadow   o1
#define door          o2

#define doorSeq      v220
#define flickerTime  v221

#define fDoorDone    f220
#define fDoorOpen    f221
#define doorUnlocked f222
#define lightOn      f223

[***************************************
[ FIRST CYCLE ONLY
[***************************************
if (newRoom) {
  [ load, draw and discard the picture resource for the current room
  load.pic(currentRoom);
  draw.pic(currentRoom);
  discard.pic(currentRoom);
  
  [ the horizon defines the upper limit of ego's movement
  set.horizon(0);
  
  [ add toolbar buttons
  load.view(vw.ButtonsDown);
  call(lgc.InitToolbar);
  
  load.view(vw.StairwayArt);
  
  [ lights
  add.to.pic(vw.StairwayArt, 0, 0, 128, 81, 4, 15);
  animate.obj(lightshadow);
  set.view(lightshadow, vw.StairwayArt);
  set.loop(lightshadow, 0);
  set.cel(lightshadow, 0);
  set.priority(lightshadow, 4);
  position(lightshadow, 76, 133);
  stop.cycling(lightshadow);
  ignore.objs(lightshadow);
  ignore.blocks(lightshadow);
  draw(lightshadow);
  set(lightOn);
  [ if MOCC is reset, no flicker
  if (resetMOCC) {
    flickerTime = 0;
  } else {
    load.sound(s.Flicker);
    random(20, 30, flickerTime);
  }
  
  [ door
  animate.obj(door);
  set.view(door, vw.StairwayArt);
  set.loop(door, 1);
  position(door, 32, 152);
  set.priority(door, 5);
  stop.cycling(door);
  ignore.objs(door);
  draw(door);
  
  [ ego
  if (previousRoom == rm.SecretRoom) {
    egoDir = STOPPED;
    position(ego, 153, 56);
    observe.blocks(ego);
    set.loop(ego, 1);
    set.cel(door, 0);
  }
  if (previousRoom == rm.DoorKeypad) {
    [ remain at current position, with door open/closed
    [ depending on lock status (work2 has door status)
    if (work2 == 1) {
      ignore.blocks(ego);
      set.cel(door, 4);
      set(fDoorOpen);
    } else {
      observe.blocks(ego);
      set.cel(door, 0);
    }
  }
  if (previousRoom == rm.ControlRoom) {  
    [ coming from control room; door is open
    position(ego, 34, 155);
    ignore.blocks(ego);
    set.cel(door, 4);
    set(fDoorOpen);
  }
    
  [ force priority
  set.priority(ego, 6);
  egoDir = STOPPED;
  draw(ego);
  
  [ display the picture on screen
  show.pic();
  [ fade in
  block(FADE.IN, BYNUM, FADECOUNT, BLACK); [ fade.in(FN_MODE, DELAY, COLOR)
  [ restore cursor
  cursoricon = cursormode;
  set.key(BYVAR, &cursoricon, mouse); [ set.cursor(FN_MODE, MSGNUM)
  return();
}

[***************************************
[ NON-INPUT CODE 
[***************************************

[ if by door, and it's open, allow ego to cross over
if (egoX < 44 && fDoorOpen) {
  ignore.blocks(ego);
} else {
  observe.blocks(ego);
}

[ light flickers on/off randomly until MOCC is restarted
if (flickerTime > 0) {
  --flickerTime;
  if (flickerTime == 0) {
    if (lightOn) {
      erase(lightshadow);
      random(1, 8, flickerTime);
      
      [ only play sound if walkman is not in use
      if (!playWalkman) {
        [ play flicker buzz sound, force 4-channel FM
        set(4channelsound);
        set.key(FM_MODE, 0, SET.SNDMODE); [ set.sndmode(MODE)
        [ use correct instruments
        work1 = 0;
        work2 = 128;
        set.key(&work1, &work2, SET.INST); [ set.inst(vCHANNEL, vINSTRUMENT)
        ++work1;
        set.key(&work1, &work2, SET.INST); [ set.inst(vCHANNEL, vINSTRUMENT)
        ++work1;
        set.key(&work1, &work2, SET.INST); [ set.inst(vCHANNEL, vINSTRUMENT)
        ++work1;
        ++work2;
        set.key(&work1, &work2, SET.INST); [ set.inst(vCHANNEL, vINSTRUMENT)
        sound(s.Flicker, soundDone);
        set(playSound);
      }
    } else {
      draw(lightshadow);
      random(24, 80, flickerTime);
    }
    toggle(lightOn);
  }
}
 
if (doorSeq == 1) {
  [ open the door
  doorSeq = 3;
  end.of.loop(door, fDoorDone);
}
if (doorSeq == 2) {
  [ close the door
  doorSeq = 4;
  reverse.loop(door, fDoorDone);
  observe.blocks(ego);
  reset(fDoorOpen);
}

if (fDoorDone) {
  reset(fDoorDone);
  if (doorSeq == 3) {
    ignore.blocks(ego);
    set(fDoorOpen);
  }
  doorSeq = 0;
}

[ if ego is dead, skip player input
if (deathType) {
  return();
}

[***************************************
[ PROCESS PLAYER INPUT
[***************************************
if (haveInput && !haveMatch && unknownWordNum == 0) {
  if (said("look")) {
    [ nothing in particular
    print("A dimly lit stairway leads down from the secret room to a "
          "small foyer. The stairwell is illuminated by a couple of "
          "overhead lights.");
    print("A keypad is on the wall next to the door.");
    if (!resetMOCC) {
      print("The lower light flickers a lot, as if there is something "
            "not quite right with the electrical circuit.");
    }
  }
  if (said("look", "stairs")) {
          print("A long set of stairs leads down from the secret room to a "
                "small foyer. The stairwell is illuminated by a couple of "
                "overhead lights.");
  }
  if (said("look", "wall")) {
   print("The walls are a bit plain, and show signs of age with "
          "various cracks clearly visible.");
  }
  if (said("look", "cracks")) {
    print("There are several cracks an the wall and also a lot of peeling paint.");
  }
  if (said("look", "floor")) {
    print("There is a thin layer of dust on the plain floor. You can "
          "see your footprints in the dust. It looks like you've been "
          "the only one in here in a very long time.");
  }
  if (said("look", "ceiling")) {
    print("The ceiling is of the same construction as the wall. It's also showing "
          "signs of aging.");
  }
  if (said("look", "light")) {
    print("The stairwell is illuminated by a couple of overhead lights.");
    if (!resetMOCC) {
      print("The lower light flickers a lot, as if there is something "
            "not quite right with the electrical circuit.");
    }
  }
  if (said("look", "door")) {
    print("This sturdy door must be protecting something very important.");
  }
  if (said("open", "door")) {
    if (posn(ego, 26, 154, 43, 156)) {
      if (doorUnlocked) {
        doorSeq = 1;
      } else {
        print("The door is locked.");
      }
    } else {
      print("Move closer.");
    }
  }
  if (said("close", "door")) {
    if (posn(ego, 26, 154, 43, 156)) {
      doorSeq = 2;
    } else {
      print("Move closer.");
    }
  }
  if (said("unlock", "door")) {
    if (posn(ego, 26, 154, 43, 156)) {
      if (doorUnlocked) {
        print("The door is already unlocked.");
      } else {
        print("The door lock is controlled by the keypad.");
      }
    } else {
      print("Move closer.");
    }
  }
  if ((said("break", "down", "door") || said("smash", "door") || 
       said("hit", "door"))) {
    if (posn(ego, 26, 154, 43,  156)) {
      print("It is clear that this door is much too sturdy for you "
            "to do any damage to it.");
    } else {
      print("Move closer.");
    }
  }
  if (said("look", "keypad")) {
    print("It's a door access keypad. With the right code, it will unlock "
          "the door.");
  }
  if (said("use", "keypad")) {
    goto(usekeypad);
  }
  if ((said("hit", "keypad") || said("break", "keypad"))) {
    if (posn(ego, 38, 154, 51, 157)) {
      print("That's not a good idea. If you break the keypad, you will not "
            "be able to open the door.");
    } else {
      print("Move closer.");
    }
  }
  if (said("hack", "keypad")) {
    if (posn(ego, 38, 154, 51, 157)) {
      print("How would you do that? You have no hacking skills and nothing "
            "to use as a tool to get into the keypad.");
    } else {
      print("Move closer.");
    }
  }
  if (said("get", "light")) {
    print("The lights are too high up for you to reach.");
  }
  if (said("turn", "on", "light")) {
    print("The lights are already on.");
  }
  if (said("turn", "off", "light")) {
    print("You don't see a light switch anywhere. They must be controlled "
          "from somewhere else.");
  }
}
  
[***************************************
[ MOUSE INPUT
[***************************************
[ if cursor is look/talk/use and left-click and NOT 
[ clicking on the actual toolbar, check for clicks
[ on in-game items
if (cursoricon > C_WALK && cursoricon < C_WAIT && 
    controller(cLeftClick) &&
    (mouseX < 14 || mouseX > 145 || mouseY > 17)) {
  [ ignore borders
  if ((mouseX < 13 || mouseX > 151 || mouseY < 19 || mouseY > 158)) {
    goto(doneclick);
  }
  
  [ look
  if (cursormode == C_LOOK) {
    [ ego
    if (posn(ego, ON.OBJ, OBJ_VISIBLE, &mouseX, &mouseY)) {
      print("You see you.");
      goto(doneclick);
    }
    
    [ door
    if (mouseX > 30 && mouseX < 44 && mouseY > 117 && mouseY < 154) {
      print("This sturdy door must be protecting something very important.");
      goto(doneclick);
    }
    
    [ access control pad
    if (mouseX > 45 && mouseX < 50 && mouseY > 135 && mouseY < 143) {
      print("It's a door access keypad. With the right code, it will unlock "
            "the door.");
      goto(doneclick);
    }
    
    [ stair steps
    if (mouseX > 53) {
      work1 = mouseX;
      work1 += mouseY;
      if (work1 > 202 && work1 < 214) {
        print("A long set of stairs leads down from the secret room to a "
              "small foyer.");
        goto(doneclick);
      }
    }
    
    [ floor 23,153, 57,158
    if (mouseX > 23 && mouseX < 57 && mouseY > 153 && mouseY < 158) {
      print("There is a thin layer of dust on the plain floor. You can "
            "see your footprints in the dust. It looks like you've been "
            "the only one in here in a very long time.");
      goto(doneclick);
    }
    
    [ rest of wall
    if (mouseX > 23 && mouseY > 19 && mouseY < 153) {
      block(GET.PIXEL, &mouseX, &mouseY, &work1); [ get.pixel(vX, vY, vRESULT)
      [ strip off pri
      work1 *= 16;
      work1 /= 16;
      if (work1 != BLACK) {
        print("The walls are a bit plain, and show signs of age with "
              "various cracks clearly visible.");
        goto(doneclick);
      }
    }
    
    [ nothing in particular
    print("A dimly lit stairway leads down from the secret room to a "
          "small foyer. The stairwell is illuminated by a couple of "
          "overhead lights.");
    if (!resetMOCC) {
      print("The lower light flickers a lot, as if there is something "
            "not quite right with the electrical circuit.");
    }
    goto(doneclick);
  }
  
  [ talk
  if (cursormode == C_TALK) {
    [ ego
    if (posn(ego, ON.OBJ, OBJ_VISIBLE, &mouseX, &mouseY)) {
      print("You have nothing to say.");
    } else {
      print("There is no one here to talk to.");
    }
    goto(doneclick);
  }
  
  [ use
  if (cursormode == C_USE) {
    [ ego
    if (posn(ego, ON.OBJ, OBJ_VISIBLE, &mouseX, &mouseY)) {
      print("Please don't touch yourself. Not even when you're alone.");
      goto(doneclick);
    }
    
    [ door
    if (mouseX > 30 && mouseX < 44 && mouseY > 117 && mouseY < 154) {
      if (posn(ego, 26, 154, 43, 156)) {
        if (fDoorOpen) {
          [ close it
          doorSeq = 2;
        } else {
          [ open it (if not locked)
          if (doorUnlocked) {
            doorSeq = 1;
          } else {
            print("The door is locked.");
          }
        }
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }
    
    [ access control pad
    if (mouseX > 45 && mouseX < 50 && mouseY > 135 && mouseY < 143) {
      :usekeypad
      if (posn(ego, 38, 154, 51, 157)) {
        [ if door is open
        if (fDoorOpen) {
          print("The door is already open.");
        } else {
          [ show wait cursor
          cursoricon = C_WAIT;
          set.key(BYVAR, &cursoricon, mouse); [ set.cursor(FN_MODE, MSGNUM)
          [ fade out, then display access panel
          block(FADE.OUT, BYNUM, 10, BLACK); [ fade.out(FN_MODE, DELAY, COLOR)
          new.room(rm.DoorKeypad); [ ##LE001##
        }
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }
  }
  
  :doneclick
  set.key(CLR.CTRL, CLR.CTRL, cLeftClick); [ clear.controller(cNUM)
}
  
[***************************************
[ CHECK FOR AN EXIT CONDITION
[***************************************
:exit

if (edgeEgoHit == RIGHT_EDGE) {
  [ show wait cursor
  cursoricon = C_WAIT;
  set.key(BYVAR, &cursoricon, mouse); [ set.cursor(FN_MODE, MSGNUM)
  [ fade out, then change room
  block(FADE.OUT, BYNUM, FADECOUNT, BLACK); [ fade.out(FN_MODE, DELAY, COLOR)
  new.room(rm.SecretRoom); [ ##LE002##
}

if (egoHitSpecial) {
  [ show wait cursor
  cursoricon = C_WAIT;
  set.key(BYVAR, &cursoricon, mouse); [ set.cursor(FN_MODE, MSGNUM)
  [ fade out, then change room
  block(FADE.OUT, BYNUM, FADECOUNT, BLACK); [ fade.out(FN_MODE, DELAY, COLOR)
  new.room(rm.ControlRoom); [ ##LE003##
}
return();

[***************************************
[ DECLARED MESSAGES
[***************************************
#message 1 "%g30"
#message 2 "%g31"
#message 3 "%g32"
#message 4 "%g33"
#message 5 "%g34"
#message 6 "%g35"
#message 7 "%g36"
#message 8 "%g37"
 