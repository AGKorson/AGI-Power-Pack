[ ********************************************************************
[
[ rm.Stairway
[
[ 
[
[ ********************************************************************

#define lightshadow   o1
#define door          o2

#define doorSeq     v220
#define flickerTime v221

#define fDoorDone   f220
#define fDoorOpen   f221
#define doorUnlocked f222
#define lightOn     f223


if (newRoom) {
  [ this is the first cycle through this room
  [ load, draw and discard the picture resource for the current room
  load.pic(currentRoom);
  draw.pic(currentRoom);
  discard.pic(currentRoom);
  
  [ do basic room initialization
  call(lgc.RoomInit);
  
  [ the horizon defines the upper limit of ego's movement
  set.horizon(0);
  
  load.view(vw.StairwayArt);
  
  [ lights
  add.to.pic(vw.StairwayArt, 0, 0, 76, 133, 4, 15);
  animate.obj(lightshadow);
  set.view(lightshadow, vw.StairwayArt);
  set.loop(lightshadow, 0);
  set.priority(lightshadow, 4);
  position(lightshadow, 128, 81);
  stop.cycling(lightshadow);
  ignore.objs(lightshadow);
  ignore.blocks(lightshadow);
  draw(lightshadow);
  set(lightOn);
  random(20, 30, flickerTime);
  
  [ door
  animate.obj(door);
  set.view(door, vw.StairwayArt);
  set.loop(door, 1);
  position(door, 32, 152); [161-8=153
  set.priority(door, 5);
  stop.cycling(door);
  ignore.objs(door);
  draw(door);
  
  [ ego
  if (previousRoom == rm.SecretRoom) {
    egoDir = STOPPED;
    position(ego, 153, 56);
    observe.blocks(ego);
    set.loop(ego, 1);
    set.cel(door, 0);
  } else {
    [ coming from control room; door is open
    position(ego, 34, 155);
    ignore.blocks(ego);
    set.cel(door, 4);
    set(fDoorOpen);
  }
  [ force priority
  set.priority(ego, 6);
  egoDir = STOPPED;
  draw(ego);
  
  [ add toolbar buttons
  load.view(vw.Toolbar);
  call(lgc.InitToolbar);
  
  [ display the picture on screen
  show.pic();
  [ fade in
  block(FADE.IN, 0, FADECOUNT, BLACK); [ fade.in(BYVAR, DELAY, COLOR)
  [ restore cursor
  cursoricon = cursormode;
  set.key(1, &cursoricon, mouse); [ set.cursor(BYVAR, MSGNUM);
  return();
}

[ if by door, and it's open, allow ego to cross over
if (egoX < 44 && fDoorOpen) {
  ignore.blocks(ego);
} else {
  observe.blocks(ego);
}

[ light flickers on/off randomly
if (flickerTime > 0) {
  --flickerTime;
  if (flickerTime == 0) {
    if (lightOn) {
      erase(lightshadow);
      random(1, 8, flickerTime);
    } else {
      draw(lightshadow);
      random(12, 50, flickerTime);
    }
    toggle(lightOn);
  }
}

 
[*****
:handleInput       [ check for input from player
[*****
if (haveInput && !haveMatch && unknownWordNum == 0) {
  [ place said tests here
  if (said("look")) {
    print("You see nothing of interest.");
  }
  if (said("open", "door")) {
    if (posn(ego, 30, 154, 38, 156)) {
      if (doorUnlocked) {
        doorSeq = 1;
      } else {
        print("The door is locked.");
      }
    } else {
      print("you are not close enough.");
    }
  }
  
  if (said("close", "door")) {
    if (posn(ego, 30, 154, 38, 156)) {
      doorSeq = 2;
    } else {
      print("you are not close enough.");
    }
  }
}
  
[ if NOT clicking on the actual toolbar, check for
[ clicks on ingame items
if (mouseX > 22 && mouseY > 26 && controller(cLeftClick)) {
  [ look
  if (cursormode == C_LOOK) {
    [ ego
    if (posn(ego, ON.OBJ, 1, &mouseX, &mouseY)) {
      print("You see you.");
      goto(doneclick);
    }
    
    [ door
    if (mouseX > 30 && mouseX < 44 && mouseY > 125 && mouseY < 162) {
      print("door to control room");
      goto(doneclick);
    }
    
    [ access control pad
    if (mouseX > 45 && mouseX < 50 && mouseY > 143 && mouseY < 151) {
      print("access control pad");
      goto(doneclick);
    }
    [ stairs/wall
    if (mouseX > 53) {
      work1 = 223;
      work1 -= mouseX;
      if (work1 >= mouseY) {
        work2 = work1;
        work2 -= mouseY;
        if (work2 < 12) {
          print("stairs");
        } else {
          if (work2 < 56) {
            print("wall");
          }
        }
        goto(doneclick);
      } else {
        [ below stairs
        goto(doneclick);
      }
    }
    [ rest of wall
    if (mouseX > 22 && mouseX < 60 && mouseY > 107 && mouseY < 162) {
      print("also wall");
      goto(doneclick);
    }
    
[    [ nothing specific
[    print("black space");
[    goto(doneclick);
  }
  
  [ talk
  if (cursormode == C_TALK) {
    [ ego
    if (posn(ego, ON.OBJ, 1, &mouseX, &mouseY)) {
      print("You have nothing to say.");
    } else {
      print("There is no one here to talk to.");
    }
    goto(doneclick);
  }
  
  [ use
  if (cursormode == C_USE) {
    [ ego
    if (posn(ego, ON.OBJ, 1, &mouseX, &mouseY)) {
      print("Please don't touch yourself. Someone might see you.");
      goto(doneclick);
    }
    
    [ door
    if (mouseX > 30 && mouseX < 44 && mouseY > 125 && mouseY < 162) {
      if (posn(ego, 30, 154, 38, 156)) {
        if (fDoorOpen) {
          [ close it
          doorSeq = 2;
        } else {
          [ open it (if not locked)
      
          if (doorUnlocked) {
            doorSeq = 1;
          } else {
            print("The door is locked.");
          }
        }
      } else {
        print("Move closer.");
      }
      goto(doneclick);
    }
      
    [ access control pad
    if (mouseX > 45 && mouseX < 50 && mouseY > 143 && mouseY < 151) {
      [ TODO: display access panel, and unlock door if
      [ correct code entered
      print("door is now unlocked");
      set(doorUnlocked);
      goto(doneclick);
    }
  }
  
  :doneclick
  set.key(-1, -1, cLeftClick); [ clear.controller(cLeftClick);
}
  
[*****
:noInput           [  all non-input related code goes here 
[*****
if (doorSeq == 1) {
  [ open the door
  doorSeq = 3;
  end.of.loop(door, fDoorDone);
}
if (doorSeq == 2) {
  [ close the door
  doorSeq = 4;
  reverse.loop(door, fDoorDone);
  observe.blocks(ego);
  reset(fDoorOpen);
}

if (fDoorDone) {
  reset(fDoorDone);
  if (doorSeq == 3) {
    ignore.blocks(ego);
    set(fDoorOpen);
  }
  doorSeq = 0;
}

  

[*****
:exit              [  test for leaving the room
[*****

[ add exit checks here (or use layout editor)
[ TODO: do i need to restore priority? or does new.room do that automatically?
if (edgeEgoHit == RIGHT_EDGE) {
  [ show wait cursor
  cursoricon = C_WAIT;
  set.key(1, &cursoricon, mouse); [ set.cursor(BYVAR, MSGNUM);
  [ fade out, then change room
  block(FADE.OUT, 0, FADECOUNT, BLACK); [ fade.out(BYVAR, DELAY, COLOR)
  new.room(rm.SecretRoom);  [ ##LE001##
}

if (egoHitSpecial) {
  [ show wait cursor
  cursoricon = C_WAIT;
  set.key(1, &cursoricon, mouse); [ set.cursor(BYVAR, MSGNUM);
  [ fade out, then change room
  block(FADE.OUT, 0, FADECOUNT, BLACK); [ fade.out(BYVAR, DELAY, COLOR)
  new.room(rm.ControlRoom);  [ ##LE002##
}
return();

[*****
[ messages         [  declared messages go here
[*****
#message 1 "%g40"
#message 2 "%g41"
#message 3 "%g42"
#message 4 "%g43"
#message 5 "%g44"
#message 6 "%g45"
#message 7 "You see nothing of interest." 
 