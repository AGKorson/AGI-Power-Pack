[ ********************************************************************
[
[ rm.Stairway
[
[ 
[
[ ********************************************************************

if (newRoom)
  {
  [ this is the first cycle through this room
  [ load, draw and discard the picture resource for the current room
  load.pic(currentRoom);
  draw.pic(currentRoom);
  discard.pic(currentRoom);
  
  [ do basic room initialization
  call(lgc.RoomInit);
  
  [ the horizon defines the upper limit of ego's movement
  set.horizon(0);
  
  [ add additional room initialization here
  
  [ add toolbar buttons
  load.view(vw.Toolbar);
  call(lgc.InitToolbar);
  
  [ load ego view, animate and draw ego
  [ this is sometimes handled in logic 0
  [ instead of in each individual logic
  if (previousRoom == rm.SecretRoom) {
    egoDir = STOPPED;
    position(ego, 153, 37);
    set.loop(ego, 1);
  } else {
    [ coming from control room; door is open
    position(ego, 59, 119);
    ignore.blocks(ego);
  }
  egoDir = STOPPED;
  
  [ add ego to the room
  draw(ego);
  
  [ display the picture on screen
  show.pic();
  [ fade in
  block(FADE.IN, 0, FADECOUNT, BLACK); [ fade.in(BYVAR, DELAY, COLOR)
  [ restore cursor
  cursoricon = cursormode;
  set.key(1, &cursoricon, mouse); [ set.cursor(BYVAR, MSGNUM);
  return();
  }

[*****
:handleInput       [ check for input from player
[*****
if (haveInput && !haveMatch && unknownWordNum == 0)
  {
  [ place said tests here
  if (said("look"))
    {
    print("You see nothing of interest.");
    }
  }
  if (said("open", "door")) {
[    if (posn(ego, 61, 111, 79, 121)) {
      print("door is open");
      ignore.blocks(ego);
[    } else {
[      print("you are not close enough.");
[    }
  }
  
  if (said("close", "door")) {
    if (posn(ego, 61, 111, 79, 121)) {
      print("door is closed");
      observe.blocks(ego);
    } else {
      print("you are not close enough.");
    }
  }
  
[*****
:noInput           [  all non-input related code goes here 
[*****

[ add other room specific statements here


[*****
:exit              [  test for leaving the room
[*****

[ add exit checks here (or use layout editor)

if (edgeEgoHit == RIGHT_EDGE) {
  [ show wait cursor
  cursoricon = C_WAIT;
  set.key(1, &cursoricon, mouse); [ set.cursor(BYVAR, MSGNUM);
  [ fade out, then change room
  block(FADE.OUT, 0, FADECOUNT, BLACK); [ fade.out(BYVAR, DELAY, COLOR)
  new.room(rm.SecretRoom);  [ ##LE001##
}

if (posn(ego, 32, 130, 42, 133)) {
  [ show wait cursor
  cursoricon = C_WAIT;
  set.key(1, &cursoricon, mouse); [ set.cursor(BYVAR, MSGNUM);
  [ fade out, then change room
  block(FADE.OUT, 0, FADECOUNT, BLACK); [ fade.out(BYVAR, DELAY, COLOR)
  new.room(rm.Terminal);  [ ##LE002##
}
return();

[*****
[ messages         [  declared messages go here
[*****
#message 1 "%g40"
#message 2 "%g41"
#message 3 "%g42"
#message 4 "%g43"
#message 5 "%g44"
#message 6 "%g45"
#message 7 "You see nothing of interest." 
 