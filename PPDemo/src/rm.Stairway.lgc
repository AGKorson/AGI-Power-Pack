[ ********************************************************************
[
[ rm.Stairway
[
[ 
[
[ ********************************************************************

#define lightshadow   o1
#define door          o2

#define doorSeq     v220

#define fDoorDone   f220
#define fDoorOpen   f221

if (newRoom) {
  [ this is the first cycle through this room
  [ load, draw and discard the picture resource for the current room
  load.pic(currentRoom);
  draw.pic(currentRoom);
  discard.pic(currentRoom);
  
  [ do basic room initialization
  call(lgc.RoomInit);
  
  [ the horizon defines the upper limit of ego's movement
  set.horizon(0);
  
  load.view(vw.StairwayArt);
  
  [ lights
  add.to.pic(vw.StairwayArt, 0, 0, 76, 133, 4, 15);
  animate.obj(lightshadow);
  set.view(lightshadow, vw.StairwayArt);
  set.loop(lightshadow, 0);
  set.priority(lightshadow, 4);
  position(lightshadow, 128, 81);
  stop.cycling(lightshadow);
  ignore.objs(lightshadow);
  ignore.blocks(lightshadow);
  draw(lightshadow);
  
  [ door
  animate.obj(door);
  set.view(door, vw.StairwayArt);
  set.loop(door, 1);
  position(door, 32, 152); [161-8=153
  set.priority(door, 5);
  stop.cycling(door);
  ignore.objs(door);
  draw(door);
  
  [ ego
  if (previousRoom == rm.SecretRoom) {
    egoDir = STOPPED;
    position(ego, 153, 56);
    observe.blocks(ego);
    set.loop(ego, 1);
    set.cel(door, 0);
  } else {
    [ coming from control room; door is open
    position(ego, 33, 156);
    ignore.blocks(ego);
    set.cel(door, 4);
    set(fDoorOpen);
  }
  [ force priority
  set.priority(ego, 6);
  egoDir = STOPPED;
  draw(ego);
  
  [ add toolbar buttons
  load.view(vw.Toolbar);
  call(lgc.InitToolbar);
  
  [ display the picture on screen
  show.pic();
  [ fade in
  block(FADE.IN, 0, FADECOUNT, BLACK); [ fade.in(BYVAR, DELAY, COLOR)
  [ restore cursor
  cursoricon = cursormode;
  set.key(1, &cursoricon, mouse); [ set.cursor(BYVAR, MSGNUM);
  return();
}

[*****
:handleInput       [ check for input from player
[*****
if (haveInput && !haveMatch && unknownWordNum == 0)
  {
  [ place said tests here
  if (said("look"))
    {
    print("You see nothing of interest.");
    }
  }
  
  if (said("open", "door")) {
    if (posn(ego, 26, 135, 46, 138)) {
      doorSeq = 1;
    } else {
      print("you are not close enough.");
    }
  }
  
  if (said("close", "door")) {
    if (posn(ego, 26, 135, 46, 138)) {
      doorSeq = 2;
    } else {
      print("you are not close enough.");
    }
  }
  
[*****
:noInput           [  all non-input related code goes here 
[*****
if (doorSeq == 1) {
  [ open the door
  doorSeq = 3;
  end.of.loop(door, fDoorDone);
}
if (doorSeq == 2) {
  [ close the door
  doorSeq = 4;
  reverse.loop(door, fDoorDone);
  observe.blocks(ego);
  reset(fDoorOpen);
}

if (fDoorDone) {
  reset(fDoorDone);
  if (doorSeq == 3) {
    ignore.blocks(ego);
    set(fDoorOpen);
  }
  doorSeq = 0;
}

  

[*****
:exit              [  test for leaving the room
[*****

[ add exit checks here (or use layout editor)

if (edgeEgoHit == RIGHT_EDGE) {
  [ show wait cursor
  cursoricon = C_WAIT;
  set.key(1, &cursoricon, mouse); [ set.cursor(BYVAR, MSGNUM);
  [ fade out, then change room
  block(FADE.OUT, 0, FADECOUNT, BLACK); [ fade.out(BYVAR, DELAY, COLOR)
  new.room(rm.SecretRoom);  [ ##LE001##
}

if (posn(ego, 32, 130, 42, 133)) {
  [ show wait cursor
  cursoricon = C_WAIT;
  set.key(1, &cursoricon, mouse); [ set.cursor(BYVAR, MSGNUM);
  [ fade out, then change room
  block(FADE.OUT, 0, FADECOUNT, BLACK); [ fade.out(BYVAR, DELAY, COLOR)
  new.room(rm.ControlRoom);  [ ##LE002##
}
return();

[*****
[ messages         [  declared messages go here
[*****
#message 1 "%g40"
#message 2 "%g41"
#message 3 "%g42"
#message 4 "%g43"
#message 5 "%g44"
#message 6 "%g45"
#message 7 "You see nothing of interest." 
 