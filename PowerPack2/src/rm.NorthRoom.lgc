[ ********************************************************************[[ rm.NorthRoom[[ An example room. This one is empty - nothing special.[[ ********************************************************************#define block_x     v220#define block_y     v221#define block_xr    v222#define block_yt    v223#define block_xl    v224#define block_yb    v225#define ego_x       v226#define ego_y       v227#define obj_speed   v228[ **************************************[ FIRST CYCLE ONLY[ **************************************if (newRoom) {  [ load, draw and discard the picture resource for the current room  load.pic(currentRoom);  draw.pic(currentRoom);  discard.pic(currentRoom);    [ do basic room initialization  call(lgc.RoomInit);    [ add room-specific initialization here    [ default horizion is 36; adjust it as needed   [ set ego parameters, if different from lgc.RoomInit    [ AGI will automatically position ego on the opposite  [ edge when entering a new room, but if you want to manually  [ position ego, do that here, before drawing ego    [ add ego to the room  draw(ego);    [ display the picture on screen  show.pic();     block_x = 75; //these first two are the push_object's center dimensions block_y = 140; block_xr  = 85; //follows are the perimeter dimensions of the block. block_yt = 130;  //r is right, t is top, l is left, b is bottom. block_xl = 65; block_yb = 150;   animate.obj(o1);  //this is the push block. load.view(4); set.view(o1,4); position.v(o1,block_x,block_y); draw(o1); ignore.objs(o1); obj_speed = 2;  //and this is the code that makes sure the object is non-stick. step.size(o1, obj_speed);  [ check for fading  if (newRoomFade) {    [ fade in    block(FADE.IN, 0, 12, 0);  }}[ **************************************[ EVERY CYCLE[ **************************************[ add room specific statements here get.posn(ego,ego_x,ego_y);  if (ego_x > block_xl &&  //Is the ego in the perimeter?    ego_y > block_yt     &&    ego_x < block_xr     &&    ego_y < block_yb) {    [get.dir(ego, this_way); //Then I simply set the object's direction to the ego's.    set.dir(o1, egoDir);    get.posn(o1,block_x, block_y);  //Then I update the object's coordinates    block_xr = block_x;                  //and the perimeter as well.    block_xr += 10;    block_yt = block_y;    block_yt -= 10;    block_xl = block_x;    block_xl -= 10;    block_yb = block_y;    block_yb += 10;    }    else {    stop.motion(o1);  //And when the ego stops or leaves the push object's perimeter, the object   }                         //stops.[ **************************************[ CHECK FOR AN EXIT CONDITION[ **************************************if (edgeEgoHit == BOTTOM_EDGE) {  [ check for fading  if (newRoomFade) {    [ fade out    block(FADE.OUT, 0, 12, 0);  }  new.room(rm.Entrance);  [ ##LE001##}[ **************************************[ PROCESS PLAYER INPUT[ **************************************[ if player hasn't provided input, or if a match has already been[ found, no need to do said testsif ((!haveInput || haveMatch)) {  goto(done);}[ lookif (said("look")) {  print("You see nothing of interest.");}:donereturn();[ **************************************[ MESSAGES[ **************************************#message 1 "You see nothing of interest."