[ ********************************************************************[[ lgc.Death: Death handler[[ This logic is run when the player dies.[ The death message displayed depends on the value of deathType.[[ ********************************************************************[ if deathType = 255, the death message has already been displayed[ if it's any other value, it determines how ego has diedif (deathType != 255) {   [ re-allow input  accept.input();  [ clear the input line  cancel.line();  [ no more player control  program.control();    [ clear lines below the graphics display  clear.lines(22, 24, 0);    [ start a timer to provide a delay before displaying a  [ 'thanks for playing' message  deathTimer = 25;  [ add message and code to deal with all the different  [ ways that ego can die  if (deathType == 1) {    print("You are now dead.");  }  [ add messages for other death types here  if (deathType == 2) {    print("You are dead by a different method.");  }  [ etc.  [ set deathType to 255 so the death message   [ doesn't get shown again  deathType = 255;}[ decrement timerif (deathTimer > 0) {  --deathTimer;}  [ after a delay, show ending message to playerif (deathTimer == 1) {  print("Thank you for playing this game. Better luck next time!");}[ if version has a menu (2.089/2.272 do not)if (IntVersion > VERSION_2272) {  [ menu access is allowed, to restart or restore  if (controller(cMenu)) {    menu.input();  }}[ looking at help screen is allowedif ((controller(cHelp) || said("help"))) {  call(lgc.GameHelp);}[ restoring game is allowedif ((controller(cRestore) ||      said("restore", "game") ||      said("restore"))) {  restore.game();}[ restarting game is allowedif ((controller(cRestart) ||      said("restart", "game") ||      said("restart"))) {  restart.game();}[ looking at inventory is allowedif ((controller(cStatus) ||      said("inventory"))) {  status();}[ quitting is allowedif ((controller(cQuit) ||      said("quit"))) {  quit(0);}[ showing 'about' message is allowedif (controller(cAbout)) {  print(gameAboutMsg);}[ toggling sound is allowedif (controller(cToggleSound)) {  toggle(soundOn);}[ if player tries to input somethingif (haveInput && !haveMatch) {  [ it's not allowed  set(haveMatch);  print("You are dead! You can only restore, restart, quit the game"        " or view your inventory.");}return();[ **************************************[ MESSAGES[ **************************************#message 1 "You are now dead."#message 2 "Thank you for playing this game. Better luck next time!"#message 3 "You are dead! You can only restore, restart, quit the game or view your inventory."#message 4 "You are dead by a different method."#message 5 gameAboutMsg