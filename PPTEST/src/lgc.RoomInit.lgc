[ ********************************************************************[ [ lgc.RoomInit: Room Initialization[ [ This logic is called by room logics when they are executed for the[ first time after a new.room() command is encountered. It takes care [ of the common items that are done for all rooms.[[ ********************************************************************[ clear the input line and all lines below[ (removes ego's coords if shown)clear.lines(22, 24, 0);[ the accept.input command will redraw the input[ prompt and cursoraccept.input();[ animate and reset the ego object[ (if your game is complicated, you might need[ to move this to each individual room, and [ customize as needed)animate.obj(ego);step.size(ego, egoStepSize);step.time(ego, egoStepTime);cycle.time(ego, egoCycleTime);[ save current ego positionget.posn(ego, egoX, egoY);observe.blocks(ego);observe.objs(ego);observe.horizon(ego);[ reset/restore any global variables/flags that[ need to be reset whenever a new room is encounteredreset(musicDone);reset(soundDone);[ reset all local and dynamic variables/flagswork1 = 255;:loop1reset.v(work1);  [reset all local flags *work1 = 0;      [reset all local variables--work1;[ continue until below 220if (work1 > 219) {  goto(loop1);}return();[ **************************************[ MESSAGES[ **************************************