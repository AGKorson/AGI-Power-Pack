[ [ lgc.VersionCheck[ [[ This logic uses takes advantage of AGI's failure to validate[ string numbers to determine what version of AGI is running.[ Because the data in agidata.ovl varies between versions, by[ testing certain string values it is possible to know exactly[ which version is running[ [ Note that this only works for MSDOS AGI.[#define IntVersion            v30 [ the version of interpreter currently                                   [ running (MSDOS only) you can change                                  [ this to whatever variable you want #define VERSION_2089            1#define VERSION_2272            2#define VERSION_2411            3#define VERSION_2425            4#define VERSION_2426            5#define VERSION_2435            6#define VERSION_2439            7#define VERSION_2440            8#define VERSION_2903            9#define VERSION_2911           10#define VERSION_2912           11#define VERSION_2915           12#define VERSION_2917           13#define VERSION_2936           14#define VERSION_3002086        15#define VERSION_3002098        16#define VERSION_3002102        17#define VERSION_3002107        18#define VERSION_3002149        19#define checkstring            s1[ s29=" Durgan" means 2.089checkstring = m1;if (compare.strings(checkstring, s29)) {  IntVersion = VERSION_2089;  goto(found);}[ s41="uit." means 2.272checkstring = m2;if (compare.strings(checkstring, s41)) {  IntVersion = VERSION_2272;  goto(found);}[ s55="ersion 2.xxx" means 2.411 through 2.440checkstring = m3;if (compare.strings(checkstring, s55)) {  IntVersion = VERSION_2411;  goto(found);}checkstring = m4;if (compare.strings(checkstring, s55)) {  IntVersion = VERSION_2425;  goto(found);}checkstring = m5;if (compare.strings(checkstring, s55)) {  IntVersion = VERSION_2426;  goto(found);}checkstring = m6;if (compare.strings(checkstring, s55)) {  IntVersion = VERSION_2435;  goto(found);}checkstring = m7;if (compare.strings(checkstring, s55)) {  IntVersion = VERSION_2439;  goto(found);}checkstring = m8;if (compare.strings(checkstring, s55)) {  IntVersion = VERSION_2440;  goto(found);}[ s56=".xxx" means 2.903 through 2.917checkstring = m9;if (compare.strings(checkstring, s56)) {  IntVersion = VERSION_2903;  goto(found);}checkstring = m10;if (compare.strings(checkstring, s56)) {  IntVersion = VERSION_2911;  goto(found);}checkstring = m11;if (compare.strings(checkstring, s56)) {  IntVersion = VERSION_2912;  goto(found);}checkstring = m12;if (compare.strings(checkstring, s56)) {  IntVersion = VERSION_2915;  goto(found);}checkstring = m13;if (compare.strings(checkstring, s56)) {  IntVersion = VERSION_2917;  goto(found);}[ s56="ersion 2.936" means 2.936checkstring = m14;if (compare.strings(checkstring, s56)) {  IntVersion = VERSION_2936;  goto(found);}[ s56="ss ESC to quit." means 3.002.086checkstring = m15;if (compare.strings(checkstring, s56)) {  IntVersion = VERSION_3002086;  goto(found);}[ s58="98", "2.102", "2.107" means 3.002.098 through 3.002.107checkstring = m16;if (compare.strings(checkstring, s58)) {  IntVersion = VERSION_3002098;  goto(found);}checkstring = m17;if (compare.strings(checkstring, s58)) {  IntVersion = VERSION_3002102;  goto(found);}checkstring = m18;if (compare.strings(checkstring, s58)) {  IntVersion = VERSION_3002107;  goto(found);}[ s46="2.149" means 3.002.149checkstring = m19;if (compare.strings(checkstring, s46)) {  IntVersion = VERSION_3002149;  goto(found);}[ not foundIntVersion = 0;[ if not found, it might be NAGI or SCUMMVM, or a[ non-MSDOS interpreter. It could also be an MSDOS[ MSDOS version not previously identified[[ add code here to deal with that, for example[ give user a chance to confirm they're running on[ NAGI or SCUMMVMreturn();:found[ add code to handle version here, for example to [ check for presence of menu support, commands that[ are only present in certain versions, etc.return();[ **************************************[ MESSAGES[ **************************************#message 1 " Durgan"          [2.089#message 2 "uit."             [2.272#message 3 "ersion 2.411"     [2.411#message 4 "ersion 2.425"     [2.425#message 5 "ersion 2.426"     [2.426#message 6 "ersion 2.435"     [2.435#message 7 "ersion 2.439"     [2.439#message 8 "ersion 2.440"     [2.440#message 9 ".903"             [2.903#message 10 ".911"            [2.911#message 11 ".912"            [2.912#message 12 ".915"            [2.915#message 13 ".917"            [2.917#message 14 "ersion 2.936"    [2.936#message 15 "ss ESC to quit." [3.002.086#message 16 "98"              [3.002.098#message 17 "2.102"           [3.002.102#message 18 "2.107"           [3.002.107#message 19 "2.149"           [3.002.149